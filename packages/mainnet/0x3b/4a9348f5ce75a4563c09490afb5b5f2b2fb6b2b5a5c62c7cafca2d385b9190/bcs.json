{
  "dataType": "package",
  "id": "0x3b4a9348f5ce75a4563c09490afb5b5f2b2fb6b2b5a5c62c7cafca2d385b9190",
  "version": 1,
  "moduleMap": {
    "squid": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFjB8QB1wEImwNgBvsDoFUKm1kFDKBZNgARAQwCBgISAhMCFAACAgABAQcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAJAAEAARAFBgEAAgcICQECAgoMAQEAAw0FAQEMAw4OAQEMBA8KCwAFCwMEAAEEAgcDBwUNBA8CCAAHCAQAAgsCAQgACwMBCAABCgIBCAUBCQABCwEBCQABCAAHCQACCgIKAgoCCwEBCAUHCAQCCwMBCQALAgEJAAEGCAQBBQQHCwMBCQADBQcIBAELAwEIAAIJAAUBCwIBCAAMQ29pbk1ldGFkYXRhBk9wdGlvbgVTUVVJRAtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQRbWludF9hbmRfdHJhbnNmZXIVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBm9wdGlvbhNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIEc29tZQVzcXVpZAh0cmFuc2Zlcgp0eF9jb250ZXh0A3VybDtKk0j1znWkVjwJSQr7W18rL7aytaXGLHyvyi04W5GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIBBgoCBgVTUVVJRAoCCglTcXVpZGdhbWUKAt4E3AQoJFNRVUlEKSBpcyBhIGJsb2NrY2hhaW4tYmFzZWQsIHBsYXktdG8tZWFybiAoUDJFKSBnYW1pbmcgZWNvc3lzdGVtIGluc3BpcmVkIGJ5IHRoZSB0aHJpbGxpbmcgU3F1aWQgR2FtZSB1bml2ZXJzZS4gQ29tYmluaW5nIHRoZSBpbnRlbnNpdHkgb2YgaGlnaC1zdGFrZXMgY29tcGV0aXRpb24gd2l0aCB0aGUgcmV3YXJkcyBvZiBjcnlwdG9jdXJyZW5jeSwgJFNRVUlEIG9mZmVycyBwbGF5ZXJzIHRoZSBvcHBvcnR1bml0eSB0byBwYXJ0aWNpcGF0ZSBpbiB2aXJ0dWFsIGdhbWVzLCBlYXJuIGNyeXB0byByZXdhcmRzLCBhbmQgY29sbGVjdCBleGNsdXNpdmUgTkZUcyB3aGlsZSBuYXZpZ2F0aW5nIGNoYWxsZW5nZXMgYW5kIHN0cmF0ZWdpZXMgaW4gYSBkZWNlbnRyYWxpemVkIGdhbWluZyBleHBlcmllbmNlLiAgV2l0aCAkU1FVSUQsIHlvdSBkb24ndCBqdXN0IHdhdGNoIHRoZSBnYW1lc+KAlHlvdSBwbGF5IHRvIHdpbi4gVHdpdHRlcjogaHR0cHM6Ly94LmNvbS9TcXVpZGdhbWVzdWk/dD1yZGh2ZXpMYmFiWHoxdXVtUmk4bjlBJnM9MDkgIFdlYnNpdGU6IGh0dHBzOi8vc3F1aWRnYW1lLmJpei5pZC8gIFRlbGVncmFtOiBodHRwczovL3QubWUvU3F1aWRHYW1lU3VpCgL1T/NPZGF0YTppbWFnZS9qcGVnO2Jhc2U2NCwvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvNGdIWVNVTkRYMUJTVDBaSlRFVUFBUUVBQUFISUFBQUFBQVF3QUFCdGJuUnlVa2RDSUZoWldpQUg0QUFCQUFFQUFBQUFBQUJoWTNOd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUE5dFlBQVFBQUFBRFRMUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBbGtaWE5qQUFBQThBQUFBQ1J5V0ZsYUFBQUJGQUFBQUJSbldGbGFBQUFCS0FBQUFCUmlXRmxhQUFBQlBBQUFBQlIzZEhCMEFBQUJVQUFBQUJSeVZGSkRBQUFCWkFBQUFDaG5WRkpEQUFBQlpBQUFBQ2hpVkZKREFBQUJaQUFBQUNoamNISjBBQUFCakFBQUFEeHRiSFZqQUFBQUFBQUFBQUVBQUFBTVpXNVZVd0FBQUFnQUFBQWNBSE1BVWdCSEFFSllXVm9nQUFBQUFBQUFiNklBQURqMUFBQURrRmhaV2lBQUFBQUFBQUJpbVFBQXQ0VUFBQmphV0ZsYUlBQUFBQUFBQUNTZ0FBQVBoQUFBdHM5WVdWb2dBQUFBQUFBQTl0WUFBUUFBQUFEVExYQmhjbUVBQUFBQUFBUUFBQUFDWm1ZQUFQS25BQUFOV1FBQUU5QUFBQXBiQUFBQUFBQUFBQUJ0YkhWakFBQUFBQUFBQUFFQUFBQU1aVzVWVXdBQUFDQUFBQUFjQUVjQWJ3QnZBR2NBYkFCbEFDQUFTUUJ1QUdNQUxnQWdBRElBTUFBeEFEYi8yd0JEQUFZRUJRWUZCQVlHQlFZSEJ3WUlDaEFLQ2drSkNoUU9Ed3dRRnhRWUdCY1VGaFlhSFNVZkdoc2pIQllXSUN3Z0l5WW5LU29wR1I4dE1DMG9NQ1VvS1NqLzJ3QkRBUWNIQndvSUNoTUtDaE1vR2hZYUtDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2ovd0FBUkNBRDZBUG9EQVNJQUFoRUJBeEVCLzhRQUhBQUJBQUlDQXdFQUFBQUFBQUFBQUFBQUFBVUdCQWNCQWdNSS84UUFVUkFBQVFNREFRVUNDUWdGQ1FNTkFBQUFBUUFDQXdRRkVRWUhFaUV4UVJOUkZDSXlZWEdCa2FHeEZpTkNVbktUd2RFSUZYT1M0U1FsTkVOVVZXTEM4RFZUWXpNMlJHUjBnb09Vb3JMUzR2SC94QUFjQVFFQUFRVUJBUUFBQUFBQUFBQUFBQUFBQndFQ0JBVUdBd2oveEFBNkVRQUNBZ0VDQkFJSEJRZ0JCUUFBQUFBQUFRSURCQVVSQmhJaE1VRlJFeFFpWVhHUnNRY3lVb0doSXlRek5FS3k0ZkFWVTFTU3dkSC8yZ0FNQXdFQUFoRURFUUEvQUpsRVJTTWNNRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFWGpXMWNGRlRTVkZYS3lHR01aYzk1d0FxTnFLM1lTMzZJOWw0VmRaVFVjWmtxNmlLRmc1dWtjR2hhenUrdTdsZVpuMDJsb095cHdkMTFaS09mMlFvcUxTNHJKUlBlNnVvcnBqeE8rODdvOUFYTTZoeFJpNGpjWWUwenJ0STRNMURVMHBwY3NmTmwrck5vT21hVnhEN3BHOGovZE5jL3dDQVdORnRMMHU5MlBEbnQ4N29IZ2ZCUWROWmJkVHR4RlJRRDBzQitLOTNXNmplQ0hVa0JIN01MbnBjYjI3OUlMWTYySDJZK3o3VjNVdDl0MVJaTGs0Tm83blN5UFAwZDhCM3NLbVFRUmtFRWQ0V3BLelNscHFSazBvamQ5YU03cFdQVFE2aTA0N3RMTmNIVmRNT2ROVUhQRHVDMmVGeGxSYStXNlBLYVBVdnMrejhXTG5TMU5MeTdtNDBWVDBscldqdmp6U1ZERFIzSnZsUVNjTS9aNzFiRjE5TjlkOEZPdDdvNFMybWRNM0N4Yk5CRVJleDVoRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBZWRSTkhUd1NUVHZESW1OTG5PUElBTFR0MnI2blhOemM5eGtpc05PNGlLTWNETVIxS25kcDl6bHI2MmwwMVF2SWROaVNxY1BvczdsMnBLV0trcG80SUdoc2NiZDBBTGcrS3RhbFgrN1V2NGtsY0M4TlJ6Wit1NUszaXV5OHpyU1VzVlBFMk9KaldNYU1BTkdBRmxBQUxCdXR6cGJWU21hcmtERzlCMWNmTXRkM25YZGJVdWN5M3RGTkYwZHpjZnlYRFVZVjJVK1pkdk5rb2FocmVIcGk1SnZyNUwvZWh0VElUZUI1RUxRZFJjYTJwY2UzcTU1TTlIUEpYZXJwN2hhNW1NcTQ2aWxsZXdTTkQ4dEphZVI5Qld3V2lkT3MvMC93QW5PUzQzNit6VDArUCtEZldjcmdnRmFVb05UWGFpSTdLdGxlMGZSa08rUGVycHAzWE1OVzlzRnlZSUpUd0VnOGsva3NXL1NicWx6UjZvMnVCeFhoNVVsQ3hPRGZuMitaUFg2eFJYSmdramNZSzJQakZPemdXbnpxdzdQOVV6WEl5Mmk4anM3eFNqam5sTTM2dzgvd0QrckdZNFBhQ0NDRHlLcitxYVNhRjBGNXQzaTE5Q2Q4RWZUYjFCV3g0ZjFxekJ2VmMzN0ROWHhqd3pWcU9POHFoYldSNi9GRzNrVWRwNjZSWHF6MHRmQWZGbFlDUjlVOVFwRlM1R1NuRlNqMlpCRWs0dlpoRVJYRkFpSWdDSWlBSWlJQWlJZ0NJaUFJaUlBaUlnQ0lpQUx6cUpXUVFTU3lFTll4cGM0bm9BdlJWUGFuY0RiOUUzQXNPSkp3S2RubjNqZys3SzhiN2ZSVlNzOGtlbFZic21vTHhaUnRMUGZjNjY1WDJmUGFWY3BFZWZvc0hJZkJUOVhVUjBsTExVVEVOamphWE9QbUN4TEhUQ2t0RkhBQmpjamJuMGtaUHZKVUR0TXF6Qlk0NmRwSWRVU1lPT3JSeCtPRkN0c25uWm50UHV6Nk9xakhSZEhUaXVzWS9xL3dESnI3VUYzbnZGZStlWnhEYzRZem8wZHlpMFd3TmpPenFwMmg2b1pTN3pvYlhUNGtyYWdjTnhuY0QzbitLNmlNVkJLTWV5SXB0dGxiTjJUZTdaYS8wZmRtMEY2a24xZnFyZGcwcmFzeXVkTHdiVVBieEkreU92czcxc3ZWc2VuUDBnZE1Wcytsb2hTYWtzNUlnaWt3MTAwUTVEaDBQVHVLbC8wbFhVdG0yQTIraDBvMk1XV2FvZ2dCZ09XOWlBNXdPZXVYTmJ4NjVYeWpvZlZWeTBicVNrdk5vbExKNEhlTTNQaXlONnRkNWlyanpJYXNwcHFLcWxwcXFOMFU4VGl4N0hEQmE0Y3dWNUE0WDBqdGYwdGJOcGVqVzdTdEV4Z1ZiR2Z6clJOOG9GbzhaMkI5SWRlOGNmVDgyb1ZSc2paMWYzVEEyMnFmbDdSbUp4UE1kUXI4NW9ld2h3eUNNRUxRMW5xM1VOeXBxbGhJTWJ3NDQ2anFQWXQ4TU9XaGN6cStPcXJWWkh4K3BKM0NlZkxMeFpVV1BkdytqTVhaZlVtM1hpNjJHUS9OdGQ0UlRnL1ZQTUJiSldvNTVmMVpyeXgxd082eWNtbWtQZm5sK0MyNHBONGJ5M2s0TVcrNjZFTmNWWUN3ZFRzcmoyMzNRUkVXL09kQ0lpQUlpSUFpSWdDSWlBSWlJQWlJZ0NJaUFJaUlBdGE3YUpUTEhZTGVQK2tWbThmKzZBUDg2MlV0WTdXdjhBbkxwSFBMdDMvd0R1aldxMXFUamhXTmY3MU5wb3NGWm4xUmZtWmplWVZDMnJaN08zOTJYL0FJSy9BY2xVTnBsR1o3TkhVTkJKZ2t5Zk1EdytPRkVPbXpVY21MWjlCOFMxT3pUYkZIdzJmeVpxeGZURkc5MmhmMFVQRDdjZXpyNzlNR1NUTTRPRFg1SFA3TFNQV3ZtZGZVV2xhYzdTZjBYcWl4MEh6bDNza20reUJ2TjI3a2dlZkxTNzFyclNJR1Ird25YVmgxRm9lbzJiYTdrWkhUU1piUjFFanNEQk84Rzd4NU9hN2lENnVpb1cxdll0ZmRCdWtyWVIrc0xHVDR0VkVPTEIwM3gwOVBKYXNlMThVaGE4RmoybkJCNEVGZlFINk8yMWVyanVzR2p0VlNmckN4WEQrVHhlRWVNWVhFY0c1UE5wNVlRRWQraVBxR2FoMmxDd3ZMbjBGNWdramtpUEZ1K3hoZUhZOURYRDFyVzIxQ3lSNmQyaDZndFVEZDJDbXJIaUp2Y3duZWFQWVF2cGpaenNpT2o5dTE0dlRvM1E2Y3RrRDZpam1lZDF1WldrYnVUekRHbDRQcVh6SHRKdnJOUzY5djE0aUpNTlhWdmZFVHpNZWNNLzlJQ0Fyak9hMzlSWjhFZzN1ZTQzUHNXaXJYVE9yTGhUMDdNNzBqdzMzcmZMQmhvSFFCYUhXNUwySS9FNzdnbXVYN2F6dzZMNmxjMTc4emJLZXNiNWROVU1rYjdmNExiOU0vdEthSi8xbWcrNWFpMmc0K1RGUm5xNXVQYXRyV2dFV3VrRHVmWk56N0YxbkJNMjZKeDk1eHYyandVZFFoSmQyakxSRVhjRWRoRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFXdXRzOU81bEJhTG93RW1pcXh2ZVpydXZ0YVBhdGlxTTFOYW1YcXhWbHZreGlhTWhwSTVPNWcrb2dMRXpxUFdNZWRYbWpKdzcvQUZlK0ZxOEdWQ056WHNhNWhCYVJrRWRRdk91cG82dWtscDVobU9ScGE0ZWxRZWtLNlUwMGx1clFXVjFFZXlrWWVlQndCVmpCVUgzMVR4clhGOUdtZlQySGsxYWhpeHRqMWpKZGYvYU5GM3kyVFdxNFNVMHdQaW54WGRITjZGV1RaVnRBdVd6elVqTGpiL25LZCtHVk5PVHdsWitZNkZYblVOanByMVRkbk1OMlJ2a1NEbTFhc3ZtbmErMHZkMjBKZkQwbFlNdFBwN2wwdUZud3lJcFNlMGlNdGEwQzdBbTV3VzliN1B5OXpQcE80V1RaUHRoY2JyUlhWdW5yNU1BNm9qY1dzeTQ4eTVwd0NmT0R4WFN4N0dkQjZSdWxOZXJ2cnVDZU9qa2JPMWpIeHR5V25JemdrKzVmS3VDQ3VTU2VaSld3T2QyUG8zYi9BTGVtYWpvSjlPYVFkSXkyeStKVlZoOFV6TitxM3VhZXZldm5IbXU4VVQ1WGhrYkhQY2VBRFJrbFhmVEdpcFpIc3FMcTB4eDh4RDlJK251WGhma1YwUjVwc3o4SFRzak9zOUhSSGYzK0MrSjY3T2JJN3REYzZocEFBeEVDUGFWc1ZlY01UWW8yc2phR3RhTUFEb3V6andYSlpXUkxKc2MyUzVwZW53MDNHVk1maTM1c3J1dFI0WERiN2F6aStycVdOd09lTThmaXR3UXM3T0ZqQnlhMEJhdDBiVGZLRFdiN2xqZW9MYURIRzdvNlE5UXRxcVV1Rk1LV05oODBsMWtRVnhycVVjL1U1T3Q3eGowQ0lpNmc1RUlpSUFpSWdDSWlBSWlJQWlJZ0NJaUFJaUlBaUlnQ0lpQW9HMERTOVE2cUYvc1RmNWZFUG5vaC9YTi9OUTlsdk1Gemd6SGxrek9Fa0x1RG1GYlNxNm1Ha3A1SjZxVmtVTEJsejNuQUFXaXRWMWNlb2RSQ3IwcFNQcHpFU0phdnlXeW4wTGlPSjlLeHJGNmZtVVpmVTcvZ3ZpRE13N1BWb1FjNFB3OHZnWGxqc3JselE0RUhCQjZGVW1pMVhQUVBFRitwWHhubDIwWXlDclJRM2lncm10TkxWUlNFOG03MkhldzhWSHR1SmJWMTIzWG1pWThiVnNYSzlsUzJsNHA5SDhtWXRYcG0wVlRpNldpaTNqMVpsbndXTXpSdGxhN1BnbTk2WkhmbXJHMWM4bGFzcStLMjUzOHkrV21ZVTN6T3FMZndSZzBOc282RnVLU21paDZaYTNpZlh6V1dCaGNTeXNpWVh5UGF4ZzVseHdBb0c1NnN0ZEVDMXMzaEV2SU1oNDhmVHlWSTFYWHk2SnN1dHlzVEJodE9TaWw0ZFBvVHpuQURuakhWVnFxcWF2VWx3Tm0wL3dDTUR3cWFvZVRHM3FBVlg3cFYzKyt3UDdHRTAxTDBqemh6d3RrYk1iM1pYVVRiVlMwMzZ1dUVZK2NnazhxUTk0UFZkUG9HajAyM3IxaWEzWGdSL3dBVzhUNVVNZmt4YTNHRXY2bXR2OVJiTk8yZW1zTnBob0tOdUk0eHhjZWJuZFNWSklpbE9NVkJLTWV5SVpjbko3dnVFUkZjVUNJaUFJaUlBaUlnQ0lpQUlpSUFpSWdDSWlBSWlJQXNXNlY5TmE2R2FzclpXeFU4VGQ1emovcm1zb2tBRWs0QVdwYjFXUDF2cUY4REhrV0NnZmc0L3I1QitINGVsYTNWTlJoZ1V1eVhmd05scE9tVzZua3h4NmwzN25oVlMzRFhWWjRUWGRwUzJDTjN6Tk9EaDB2bmQvcjBkNm5JNmFHQ0JzRlBFeU9Gb3dHdEdBc2h4YTFyWTR3R3NhTUFBWUFDNnFJTlExRzNOc2M3R2ZRMmlhRmo2VFNvVkxyNHNpcXkzdGtZNXJtTmtZZWJYREtybFhwZTN5dnkyT1NCL2ZFN0h1S3ZDNlBqYS95bWdySHF5ckt2dXN6c25UY2ZLL2l3VEtFeXczQ0JwRkhlNnFKbzVOeWNlNHFQdFRidmNhaXFoZmVxdGdnZHVFN3pqdmU5YkhkUnhua01laFZEUmxPMTl5dldlVGFnajNsYktyTWxPcWMzM1czZ2puTXZSNmFzcWlxRzZqSnZkY3o4RnY1bUszUzhjamk2dHJhcW9kOXJINXFZdDFscEtZandXbFkxMzFpTW4ybFdGdExHUG8rMWV6V0J2SUxDc3pyWnJiYzNlUG91TFErYUVGdjU5MzgyWWxOU0JuRjNFckZ2ZGlndWJSSUNZS3lQakZQSHdjMC9pRk1CRmpRdW5YSlRnOW1aMlJoMDVOVHB0anZGbk9oOVcxRDZvV1BVUkRMa3dZaW1Qa3p0L1A0cS9MVldvTFEyNTB6VEc3czZ1STc4TW80RnJnclZzKzFHNjkyNTlQV2pjdWxHZXpxR2QvYzRlbFNsdzNydnI4UFEyL2ZYNmtDOFhjTXkwZS8wbFhXdVhiM2U0dGFJaTZzNDBJaUlBaUlnQ0lpQUlpSUFpSWdDSWlBSWlJQWlJZ0tadFF2TWxCWldVTkVmNWRjSDloSGptQWVaVVRhcUNPMDJ5R2toK2lPSitzZXBXTFh5L3JyYVBVeXVPOVQydU1STUgrTTh5cE41M25rcUt1S3RRZCtTNjAra1NidnM5MGhVWXJ5NXIycGZRNGF1d1hBQzRIRjNtWEpra0hkRVJVS0RvVlR0RWorZEw1LzJrL0VxNHFuYUxQOEFPOThIL1dEOFNzMmorQmIrWDFOTm4vejJMOFpmMmx2UkZ5c00zUVRrdVY1aytNcUZEMDZLdlhPZDJuZFNVTi9neUlYT0ZQV05IMG1IcjZ2aUFyQ0ZoM21qYmNMWFUwcnY2eGhBOHg2SDI0V2JwK1ZMRXlJMnhmWm1uMTdUWWFsZzJVU1hYYnA4VFpMSE5leHIyRUZyaGtFZFF1VlV0bDF5ZGNkSVVvbEpNMUtUVHZ6L0FJZVh1d3JhcHdvdFYxY2JGNG8rWmJhM1ZOd2ZkQkVSZXBZRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUY1MVVvaHBwWlR5WTB1OWdYb29iV2M1cGRLWFdacHc1bE04ajJMenRseVFjdkpGMEk4MGxIek5kNkR6UGE2KzR2NHZxNmw3OG4wcWRDaTlIeENIUjlBQnplM2VQcEpLbEFvTno1dWQ4cFB6UHAzUXFWVGdWUlhraU8xRGNoYXJUUFZjQzVvd3dIcTQ4bDEwMVhTWEd6MDlWT0dpUjQ0NDVLRTExRE5jcDZHMTB4dzZUZmxKOHpRczNRUkowMVRBOHdYTjloSzlwNHloaFJ1YTZ0OXpCeDlTbGRyVm1LcGV6R1BiMzlPcFlsMlhBWGJDMXAwaDFWTjBWL3RxK2Z0ejhTcm9SZ0ttNkovMnZmVC9BTWMvRXJNeC93Q0RiK1gxTkxuL0FNOWkvR1g5cGJ4eVhLSXNNM1J3cXpWWDJTbTFkSGJKV3RGUEt4dTY3cnZIL1dGWjFyYlY5TFBWNmxycWluUGpXK21qbWNQTmtmOEF5eXRqcG1Pc2l5VmJXL1JuTzhTWjg5UG9ydWc5dmJXL3ZYWG9iSWJ5WFBSWTlCTjRSUndUY1BuR0IzRHpoWk9GcjVKeGV6Ti9HU3NpcExzekMyWVRlQzZsMURiVDVKZUtobzlQUDRyWlMxWHA5eHB0cWNiUndiVTBoM3ZPUXRxS1plSGJ2VFlFR3o1cjRteDFqNm5kQmVZUkVXOE5DRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUZFNnNvSmJwcHU0MFZPUjJzMExtTnozNFVzaXNuQlRpNHZ4S3hrNHRTWGdhSXRXclk3UlRSMmk3MDBzRTFKODI0dDQrNVRNR3JyTE1QNllJei9qYVF0YjY1RW8xYmRlMnlIOXU3bjd2Y29MS2k3SzBxaWRrdTY2a3M0SEZlZGoweGgwYTJYZEc0OU8xVlBlZG8xTjRKS0pvSXFTUUZ6ZVdTRkQ2YzFCUTJpR3FvNitSMGI0NmgrQnU1NFpVNXNETURxZTVqc1crRXRjMzUzSEV0UFRQcFZla3UxdXRtcUw4MnNwNUpRNnFjV2RuR0hZOXBXZm5ZRUlhWlZGSnk2dnQzTmRwR3IyejF1MitVbEJ5WFZ0TnI1RTZOWjJYKzBQOEEzQ3VmbHBaZjdRNzl3cUxHcmJIeThCcVB1Ry9tdTN5dHNXZU5EVS8rWGIrYTVqMU5mOUtYelIzMy9NVC9BTzZyL3dERi93RDBrWGExczNBQ2FRNTdtRlZyVEdvS0dncjdyTlZPa2JIVVNsN0NHWjRaSzhidGVyYldYdTFWRkxUeXhRVTd5WmQ2SURJeU9nem5rVkk2ZzFEWjZ1elZkUFNPYzZkN2NOQWlJNDU3OExKaGl4Z2xCUWUwKy9YdDFOYlpxZGwwbmZLK1BOVnZ5cmI3MjYrUDVFeU5aV1hIR29kKzRVT3NyTDBxSGZ1RlFOcTFIWnFhMjBzRTlITzZXT05yWGtRTk9TQng2ck4rVmxpL3NOUjl3MzgxNFN3b3FUU3JrL3pSc0s5WnNsQlNlVEJOK0hLK242a2g4czdML2FIL0FMaFhscHNSMzJmV2RYUzVkRytpYkN3NDcyLy9BRldFZFYyRTg2Q28rNGIrYXNteFo4RTFQcUthT1BEWktrTzNTTUhkdzRnRWVzcmU4TzRjZld2dXVQUjkzdjRISmNaYW5aYmh4aDZXTTF1bjdLYTIyK0xJTFRPbzdaVDJHa2pxcXhrYzBiTjF6U0RubXZlcTF6YUlXdTdOMHN6aHlEVzhENjFyQytGcHZGYjJiQkd6dG43ckdqQWFONDhGZ2hZazlKb2MzS1c3UGF2aXpPalRHcUd5MlNYYnFibTBGNFpxVFYwRjdqcHV3dDlLeDBXOFhaTGlSeVczVnJIWU15WnVuYTEwbWV4ZFA0bnB4eC9CYk9VaDZOandveEl4Z3VqSTAxaktzeTh5ZHRyM1lSRVcxTllFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQnJUYVRzOGZmYW8zSzB1WTJySXhKRzQ0RC9PRDNyWEVPemZVc2xTSWpRRmd6amZjNGJ2dFgwa2kxVitrVVhUNTN1dC9JMkZPcFhWUTVGMUtyb1hURVdrYkpJeDhna3FIL09UU0Rsd0hJZVlLamFIYUo2SzUxY2dEblQxYjNCeEhNTFptcnFvVVdtYm5VSDZFRHZlTWZpdGU2S2lNR2txRnJoeGZsL3RKSzVuaTZVYU1lRkVPaVIyLzJlVlBJMUNkMCt1eUpjUnMrcTMyTHQyVFBxdDlpNTZMeGZVTmpjQktkM1BJbmtWSFNjbjJKcmNZTHVqdVltWThrZXhVelJqR3V2RjdCYTA0blBUemxYVVNOYzNnUVZUZEZqK2ZMNSsyUHhLek1kdjBOdndYMU5McUVJK3U0dlR4bC9hVzhRc0gwRyt4ZHV5WjlWdnNYbStwamE0TURnNTU0Qm80cjJCeU9LdzI1STNLakI5a2RIUk14NUk5aXhkbUJGTHF6VTlFZUJrY3lkbzh4eWY4d1dhZVNpZFB5Q2kycHhBZVRYVVphZlMzSi95aGRId3JlNjgrS2I3bkRmYUZpcXpTK2VLKzZ5TzEvc3lySnJsTlgySnJaWTVuRjc0U2NGcmp6eDNxdVdmWmhxQ3RxV3RxYWNVa09mR2ZJZVE4dzZyNkpSU1BQUnNlYytmcjhDR0lhcGZDSEorcEhhZnRGUFk3UlQwRklQbTRtNHllYmoxSlVpaUxhUmlvcFJqMlJyMjNKN3NJaUs0b0VSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkVRRk0ydTFKcHRFVllIT1Z6WXZhVkcyNm44R3ROREIvdTRXajNMcnRwbWFMZmFLWjdnMk9hckcvazlBc09vMUxaWVpPek53aHcwQnZESjVlZ0tOK01PZTY5UWd0OWlXUHM2blRqVjJYWFRVZC9ON0VxRjBramJJMHRlMEVIb1ZoMGw2dDFhNE5wYXlHUjNkdllKOVJXY0R4WEVTaEt0KzB0aVdLcjZyNDcxeVVsN3VwVnRWeHlXeTB6Vk5KSnV1QmExb1BIQkpBVUpYYWZ2R21IVUZiVTFNTDJYS1JvYzFtU2Nuang0ZWZvcHZhQ1NiWFNSdC9yS3RqY2QvTS9nck50aGdFZW43Yk9CNHRMVngva3V5MFhFamZwOXRzMTFYWWluaXpVTE1iV2FhcTViSmJmNytwaDBOSzJEanplZXF6eHlYakVkNWpYRHFNcjBkS3lOaGM5d2EwY3lUZ0JjWkxlVWlWNDhzSWVTUFRDcmw0ZWFQVnVtNndIZGFLanNudTh4eC9GWnMycExQQzh0bHI0UVIzWlB3VUJyQzZXK3Z0c010RldSU1BncUdTWUJ3ZWVPUjlLMm1seHRveXE3SEZwYm5NOFMzNHVYcDExTWJJdVczYmRlQnZKRjVVc29ucFlabThXeU1EaDZ4bGVxbXRQZGJuem9FUkZVQkVSQUVSRUFSRVFCRVJBRVJFQVJFSkFHVHlWT3dDTG9aby9yQlk5VmNJS1pnZktYYnZMSUdWNXUrdVBlU0xsR1Q3SXkwVUpVYWpwWTI1alpKSWZNTUtEdWUwR2xvWXk1MUZNN3pid0N4NTZoanc3eVBhT0pkUHRFdTY2VFNOaGhmTElRR01hWE9KNkFMVWRUdGszWEVRMm5PUHJ5ZmtvUytiVnErNld5cW9tME1NREo0ekdYaDVKQVBBckdzMWpHakY4cjNmd01pR21aRGEzV3krSkptbGwxNVh6WGU2eVNNdE1UeXlscDJuR1FPdnJVZ3pUTm5qR0dXK0RIK0lieDlwVWJZdFcyV2xzRkJSZUVGajRvd0hoelQ1WFZTTGRVV1p3L3A4UTlPVkYyb1habDkwcFBjbkRRc2ZSOFhGaEZ1RGx0MTMyMy9VdzYvUmxycUdrd1JPcFplajRuSGg2bGkyU3ZyYlRkRzJpOFBNclgvMGVjOWZNVkt2MVhabURqWFJuMEFxcTZ4djl2dU1WS2JlOTc2cUdVUGFRM2wvcmdyTWVHUmQreXVpM0YrTDhEMDFDL0F3LzNyRG5HTTE0SjlKTHhUU0xIcUpvbnZXbTZSL2t5MTdDUjZDQitLdEcyU012MFJPUjlDYU4zdlZCcDYrNDNuVVZtcklMVlVNZ29adTFjNTdTQVJrSDhGZU5hejF1b05MVmRIU1VMek0vQkE0OUQwWFphSkQxZlQ1MFdMMm51Um54Umx3emRYV1RTOTRkT3Z5STU5WkRTMmNWa3p0MkZrUWNUNmxXTGZhNjdWai9BQTI1VFNVOXVKK2FnWWNGdzcvNHFHMUJjNjRhZnA3WlcyK3BwWHhPYUh2ZTBnT0FCL2dyalFhd3NUWVk0bVQ5aXhqUTFyWE5Jd0F1U2xpM1lrVzRSOXR0L2t2OGtodzFURTFTMk1MckVxb3hYVGZibWw0Nys1R1JIcFcwVTBXNjJoaWQ1MytNZmVzSzQ2T3RWWEc0UndlRHlkSHhjTWVya3MrVFZObWZ5cjRjZXRlVDlWMlpneWEyTStnRllLZWFwYnJtMy9NM1UxbzhxK1NYSnQrUk03TTcxVk5scU5QWFYrL1UwalFZSkQ5T1ArQzJBdm4yNTZ3Z29kVVVsMnRBRTdvNGpHOE9CYUhaVXpGdGxxaC95dHFoUDJaRCtTazNTZFlpc2FLeVh0SWczV3RKNU0yeFludFEzNmRUZEtMVTFMdGtwbkVDb3RjcmZzUEJWdHNldFlMd00wMXZyQTBjM0Zvd0Z0NGFsalRleWw5VFRUd3I2MXZLSmJFV0sydGlPTWh3ejVsa0NScDZySlY5Yi9xUmpPTFhnZGtYQUlQSXJsZXFrcGRVVUNJaXFBaUlnQ0lpQUlpSURqZEhjRjFmRkc5dUhzYTRkeEM3b3JYR0w3b0dNYUNsSXdhZUlqN0s4WnJOYlptaHN0RFR2QU9jT1lDczlGYjZLSGtpdk5KZUpFL0p1eS8zWFIvZEJjL0oyei8zWlNmZEJTcUo2R3Y4S0s4OHZNaUg2WnNqL0x0VkdmOEF3Z3NkK2pkT3ZPVFo2UDdzS2ZSV3VpcDk0cjVGVlpOZHBNZ1k5SDZlak9XMmlqQi9aaFNGTlo3ZFRmMGVocG8vc3hoWnlLc2FhNDlvb281eWZkczRER2dZRFFCM0FMa0FEa0VSZW14YWVjc01VemQyV05qeDNPYUNveWZUVmxxQ1ROYTZONVBmRUZMb3JaVnhsOTVibFZKeDdNcjUwWnB3bmpaNlA3c0x1elNHbjJlVFo2TDdvS2RSV2VyMWZoWHlMdlN6L0UvbVJJMDNaUU1DMTBlUDJRVDVOMmIrNjZQN29LV1JWOURYK0ZGT2VYbVJBMDFaUVFSYTZQSS80UVdmVFVWTlRNM0tlQ09ObWM0YTNBV1FpcXFvTHNrVWNwUHV6cDJUUHFqMkx0dWp1QzVSVjVJK1JRWVJFVndDSWlxQWlJZ0NJaUFJaUlBaUlnQ0lpQUlpSUFpSWdDSWlBSWlJQWlJZ0NJaUFJaUlBaUlnQ0lpQUlpSUFpSWdDSWlBLy8yUT09AwgAgMakfo0DAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEIAQAAAAACGQsABwAHAQcCBwMHBBEHOAAKATgBDAIMAw0DBwUKAS4RBgsBOAILAwcGOAMLAjgEAgA="
  },
  "typeOriginTable": [
    {
      "module_name": "squid",
      "datatype_name": "SQUID",
      "package": "0x3b4a9348f5ce75a4563c09490afb5b5f2b2fb6b2b5a5c62c7cafca2d385b9190"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "squid": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x3b4a9348f5ce75a4563c09490afb5b5f2b2fb6b2b5a5c62c7cafca2d385b9190::squid::SQUID",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}