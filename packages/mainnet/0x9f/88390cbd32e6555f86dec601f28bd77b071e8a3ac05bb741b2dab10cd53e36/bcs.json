{
  "dataType": "package",
  "id": "0x9f88390cbd32e6555f86dec601f28bd77b071e8a3ac05bb741b2dab10cd53e36",
  "version": 1,
  "moduleMap": {
    "one": ""
  },
  "typeOriginTable": [
    {
      "module_name": "one",
      "datatype_name": "ONE",
      "package": "0x9f88390cbd32e6555f86dec601f28bd77b071e8a3ac05bb741b2dab10cd53e36"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 16
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 35
    }
  },
  "functionMap": {
    "one": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9f88390cbd32e6555f86dec601f28bd77b071e8a3ac05bb741b2dab10cd53e36::one::ONE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}