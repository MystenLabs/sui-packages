{
  "dataType": "package",
  "id": "0x9000f51fc7aed132521a01383d4210dca2fdf1a6d0ee8d4ddc6de2fedf8db8e3",
  "version": 1,
  "moduleMap": {
    "tesf": ""
  },
  "typeOriginTable": [
    {
      "module_name": "tesf",
      "datatype_name": "TESF",
      "package": "0x9000f51fc7aed132521a01383d4210dca2fdf1a6d0ee8d4ddc6de2fedf8db8e3"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "tesf": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9000f51fc7aed132521a01383d4210dca2fdf1a6d0ee8d4ddc6de2fedf8db8e3::tesf::TESF",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}