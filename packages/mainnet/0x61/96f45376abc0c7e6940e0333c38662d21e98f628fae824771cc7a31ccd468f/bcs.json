{
  "dataType": "package",
  "id": "0x6196f45376abc0c7e6940e0333c38662d21e98f628fae824771cc7a31ccd468f",
  "version": 1,
  "moduleMap": {
    "jpyc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "jpyc",
      "datatype_name": "JPYC",
      "package": "0x6196f45376abc0c7e6940e0333c38662d21e98f628fae824771cc7a31ccd468f"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "jpyc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x6196f45376abc0c7e6940e0333c38662d21e98f628fae824771cc7a31ccd468f::jpyc::JPYC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}