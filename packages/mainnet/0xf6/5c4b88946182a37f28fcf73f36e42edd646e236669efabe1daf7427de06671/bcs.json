{
  "dataType": "package",
  "id": "0xf65c4b88946182a37f28fcf73f36e42edd646e236669efabe1daf7427de06671",
  "version": 1,
  "moduleMap": {
    "svs": ""
  },
  "typeOriginTable": [
    {
      "module_name": "svs",
      "datatype_name": "SVS",
      "package": "0xf65c4b88946182a37f28fcf73f36e42edd646e236669efabe1daf7427de06671"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}