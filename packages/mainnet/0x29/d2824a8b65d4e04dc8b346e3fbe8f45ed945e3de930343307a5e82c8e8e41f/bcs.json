{
  "dataType": "package",
  "id": "0x29d2824a8b65d4e04dc8b346e3fbe8f45ed945e3de930343307a5e82c8e8e41f",
  "version": 1,
  "moduleMap": {
    "pi": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pi",
      "datatype_name": "PI",
      "package": "0x29d2824a8b65d4e04dc8b346e3fbe8f45ed945e3de930343307a5e82c8e8e41f"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "pi": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x29d2824a8b65d4e04dc8b346e3fbe8f45ed945e3de930343307a5e82c8e8e41f::pi::PI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}