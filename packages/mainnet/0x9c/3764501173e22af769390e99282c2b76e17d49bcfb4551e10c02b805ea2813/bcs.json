{
  "dataType": "package",
  "id": "0x9c3764501173e22af769390e99282c2b76e17d49bcfb4551e10c02b805ea2813",
  "version": 1,
  "moduleMap": {
    "suiholder": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suiholder",
      "datatype_name": "SUIHOLDER",
      "package": "0x9c3764501173e22af769390e99282c2b76e17d49bcfb4551e10c02b805ea2813"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 19
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 42
    }
  },
  "functionMap": {
    "suiholder": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9c3764501173e22af769390e99282c2b76e17d49bcfb4551e10c02b805ea2813::suiholder::SUIHOLDER",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}