{
  "dataType": "package",
  "id": "0x79f87a0e2b837eab142dfe1f724c3b708d69bfe8abd9784e8b268059e9b280bf",
  "version": 1,
  "moduleMap": {
    "bull": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bull",
      "datatype_name": "BULL",
      "package": "0x79f87a0e2b837eab142dfe1f724c3b708d69bfe8abd9784e8b268059e9b280bf"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 19
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 43
    }
  },
  "functionMap": {
    "bull": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x79f87a0e2b837eab142dfe1f724c3b708d69bfe8abd9784e8b268059e9b280bf::bull::BULL",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}