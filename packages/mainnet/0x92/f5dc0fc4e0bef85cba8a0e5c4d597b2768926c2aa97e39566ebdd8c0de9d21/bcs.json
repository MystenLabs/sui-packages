{
  "dataType": "package",
  "id": "0x92f5dc0fc4e0bef85cba8a0e5c4d597b2768926c2aa97e39566ebdd8c0de9d21",
  "version": 1,
  "moduleMap": {
    "star": ""
  },
  "typeOriginTable": [
    {
      "module_name": "star",
      "datatype_name": "STAR",
      "package": "0x92f5dc0fc4e0bef85cba8a0e5c4d597b2768926c2aa97e39566ebdd8c0de9d21"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}