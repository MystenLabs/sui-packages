module 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::sub(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::sub(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::div(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::mul(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1)), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(v0)))), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::sub(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::div(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::mul(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0)), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::add(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::sub(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::div(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::mul(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg1)), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::as_u64(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::add(0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg0), 0xff9939c31e0c8f80d6d0114d80f32d1503c2e545dec2104e72064726928266b4::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

