{
  "dataType": "package",
  "id": "0xa6fd4c22bc9128ea6d5343f208fcb1a8cb5a02bbb6117d995febc6572abdbfd4",
  "version": 1,
  "moduleMap": {
    "mog": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mog",
      "datatype_name": "MOG",
      "package": "0xa6fd4c22bc9128ea6d5343f208fcb1a8cb5a02bbb6117d995febc6572abdbfd4"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 6
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 23
    }
  },
  "functionMap": {
    "mog": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xa6fd4c22bc9128ea6d5343f208fcb1a8cb5a02bbb6117d995febc6572abdbfd4::mog::MOG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}