module 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::sub(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::sub(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::div(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::mul(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1)), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(v0)))), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::sub(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::div(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::mul(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0)), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::add(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::sub(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::div(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::mul(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg1)), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::as_u64(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::add(0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg0), 0xe1916d3f56869ab8d7a7e12304ad008369c20cc27163dae7765dc4dc4b9321e6::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

