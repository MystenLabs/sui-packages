{
  "dataType": "package",
  "id": "0x0ad49c4799c24c8c97a158bbba4cd25ccb06e660394a05f40950098e0d4139d3",
  "version": 1,
  "moduleMap": {
    "rolex": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rolex",
      "datatype_name": "ROLEX",
      "package": "0x0ad49c4799c24c8c97a158bbba4cd25ccb06e660394a05f40950098e0d4139d3"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}