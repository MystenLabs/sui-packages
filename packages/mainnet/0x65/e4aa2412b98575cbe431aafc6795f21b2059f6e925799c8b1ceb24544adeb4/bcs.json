{
  "dataType": "package",
  "id": "0x65e4aa2412b98575cbe431aafc6795f21b2059f6e925799c8b1ceb24544adeb4",
  "version": 1,
  "moduleMap": {
    "suibaby": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suibaby",
      "datatype_name": "SUIBABY",
      "package": "0x65e4aa2412b98575cbe431aafc6795f21b2059f6e925799c8b1ceb24544adeb4"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}