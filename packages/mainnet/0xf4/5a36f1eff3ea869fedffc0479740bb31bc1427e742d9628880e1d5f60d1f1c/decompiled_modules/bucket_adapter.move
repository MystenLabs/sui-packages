module 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::bucket_adapter {
    struct ProofIndex has key {
        id: 0x2::object::UID,
        indexes: vector<u64>,
    }

    public entry fun withdraw<T0, T1>(arg0: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::ShareSupply<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg1: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::NumberPool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg2: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::Pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg3: &0x2::clock::Clock, arg4: &mut 0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::Flask<T0>, arg5: &mut 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::Fountain<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, arg6: 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg7: u64, arg8: &mut 0x2::tx_context::TxContext) {
        let v0 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::amount<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(&arg6);
        assert!(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::contains_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(arg2), 0);
        let v1 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, vector<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>>(arg2);
        let v2 = 0x2::balance::zero<T1>();
        while (0x1::vector::length<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(v1) > 0) {
            let v3 = 0x1::vector::pop_back<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(v1);
            let v4 = 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::get_proof_stake_amount<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(&v3);
            if (v4 > v0) {
                let (v5, v6) = 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::force_unstake<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg3, arg5, v3);
                let v7 = v5;
                0x2::balance::join<T1>(&mut v2, v6);
                0x2::transfer::public_transfer<0x2::coin::Coin<T0>>(0x2::coin::from_balance<T0>(0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::withdraw<T0>(arg4, 0x2::coin::from_balance<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK>(0x2::balance::split<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK>(&mut v7, v0), arg8)), arg8), 0x2::tx_context::sender(arg8));
                0x1::vector::push_back<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, vector<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>>(arg2), 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::stake<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg3, arg5, v7, arg7, arg8));
                break
            };
            if (v4 == v0) {
                let (v8, v9) = 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::force_unstake<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg3, arg5, v3);
                0x2::balance::join<T1>(&mut v2, v9);
                0x2::transfer::public_transfer<0x2::coin::Coin<T0>>(0x2::coin::from_balance<T0>(0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::withdraw<T0>(arg4, 0x2::coin::from_balance<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK>(v8, arg8)), arg8), 0x2::tx_context::sender(arg8));
                break
            };
            let (v10, v11) = 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::force_unstake<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg3, arg5, v3);
            let v12 = v10;
            v0 = v0 - 0x2::balance::value<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK>(&v12);
            0x2::balance::join<T1>(&mut v2, v11);
            0x2::transfer::public_transfer<0x2::coin::Coin<T0>>(0x2::coin::from_balance<T0>(0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::withdraw<T0>(arg4, 0x2::coin::from_balance<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK>(v12, arg8)), arg8), 0x2::tx_context::sender(arg8));
        };
        if (0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::contains_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>>(arg2)) {
            0x2::coin::join<T1>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>>(arg2), 0x2::coin::from_balance<T1>(v2, arg8));
        } else {
            0x2::bag::add<0x1::type_name::TypeName, 0x2::coin::Coin<T1>>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2), 0x1::type_name::get<0x2::coin::Coin<T1>>(), 0x2::coin::from_balance<T1>(v2, arg8));
        };
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::to_number_pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg1, arg0, arg6);
    }

    public entry fun stake<T0, T1>(arg0: &0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::GlobalConfig, arg1: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::ShareSupply<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg2: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::NumberPool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg3: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::Pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg4: &mut 0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::Flask<T0>, arg5: 0x2::coin::Coin<T0>, arg6: &mut 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::Fountain<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, arg7: u64, arg8: &0x2::clock::Clock, arg9: &mut 0x2::tx_context::TxContext) {
        0x2::coin::value<T0>(&arg5);
        let v0 = 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::stake<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg8, arg6, 0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::deposit<T0>(arg4, arg5), arg7, arg9);
        if (0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::contains_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(arg3)) {
            0x1::vector::push_back<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, vector<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>>(arg3), v0);
        } else {
            let v1 = 0x1::vector::empty<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>();
            0x1::vector::push_back<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(&mut v1, v0);
            0x2::bag::add<0x1::type_name::TypeName, vector<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg3), 0x1::type_name::get<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(), v1);
        };
        let v2 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::new_share<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg1, arg2, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::get_proof_stake_amount<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(&v0), arg9);
        while (!0x1::vector::is_empty<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&v2)) {
            0x2::transfer::public_transfer<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(0x1::vector::pop_back<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&mut v2), 0x2::tx_context::sender(arg9));
        };
        0x1::vector::destroy_empty<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(v2);
    }

    public entry fun allocate_reward<T0, T1>(arg0: &0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::GlobalConfig, arg1: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::ShareSupply<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg2: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::Pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg3: &mut 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::Fountain<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, arg4: u64, arg5: vector<u8>, arg6: &0x2::clock::Clock, arg7: &mut 0x2::tx_context::TxContext) {
        assert!(!0x2::dynamic_field::exists_<u64>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::uid<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2), 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::current_round<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2)), 1);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::check_arrived_reward_time<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2, arg6);
        let v0 = 0x2::balance::zero<T1>();
        let v1 = extract_all_rewards_from_proofs<T0, T1>(arg2, arg3, arg6);
        0x2::balance::join<T1>(&mut v0, v1);
        if (0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::contains_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>>(arg2)) {
            let v2 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>, 0x2::coin::Coin<T1>>(arg2);
            0x2::balance::join<T1>(&mut v0, 0x2::coin::into_balance<T1>(0x2::coin::split<T1>(v2, 0x2::coin::value<T1>(v2), arg7)));
        };
        let v3 = 0x2::coin::from_balance<T1>(v0, arg7);
        0x2::transfer::public_transfer<0x2::coin::Coin<T1>>(0x2::coin::split<T1>(&mut v3, 0x2::coin::value<T1>(&v3) * 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::platform_ratio<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2) / 10000, arg7), 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::platform_address(arg0));
        0x2::transfer::public_transfer<0x2::coin::Coin<T1>>(0x2::coin::split<T1>(&mut v3, 0x2::coin::value<T1>(&v3) * 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::allocate_gas_payer_ratio<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2) / 10000, arg7), 0x2::tx_context::sender(arg7));
        let v4 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::current_round<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2);
        0x2::dynamic_field::add<u64, u64>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::uid<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2), v4, 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::drand_lib::random_index_range(arg4, arg5, 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::total_supply<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg1)));
        let v5 = v4 - 1;
        let v6;
        loop {
            v6 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::extract_previous_rewards<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2, v5);
            if (0x1::option::is_none<0x2::coin::Coin<T1>>(&v6)) {
                break
            };
            0x2::coin::join<T1>(&mut v3, 0x1::option::extract<0x2::coin::Coin<T1>>(&mut v6));
            0x1::option::destroy_none<0x2::coin::Coin<T1>>(v6);
            v5 = v5 - 1;
        };
        0x1::option::destroy_none<0x2::coin::Coin<T1>>(v6);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::put_current_round_reward_to_claimable<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2, v3);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::next_round<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::update_time<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2, arg6);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::add_expired_data<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg2, arg6);
    }

    public entry fun claim_reward<T0, T1>(arg0: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::Pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg1: u64, arg2: vector<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>, arg3: &0x2::clock::Clock, arg4: &0x2::tx_context::TxContext) {
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::check_claim_expired<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0, arg1, arg3);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::check_is_claimed<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0, arg1);
        0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::check_round_could_claim_reward<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0, arg1);
        let v0 = *0x2::dynamic_field::borrow<u64, u64>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::uid<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0), arg1);
        let v1 = 0;
        while (v1 < 0x1::vector::length<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&arg2)) {
            let v2 = 0x1::vector::borrow<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&arg2, v1);
            if (v0 >= 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::start_num<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(v2) && v0 <= 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::end_num<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(v2)) {
                0x2::transfer::public_transfer<0x2::coin::Coin<T1>>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::extract_round_claimable_reward<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0, arg1), 0x2::tx_context::sender(arg4));
                0x2::table::add<u64, address>(0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_claimed<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>(arg0), arg1, 0x2::tx_context::sender(arg4));
                break
            };
            v1 = v1 + 1;
        };
        loop {
            0x2::transfer::public_transfer<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(0x1::vector::pop_back<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&mut arg2), 0x2::tx_context::sender(arg4));
            if (0x1::vector::is_empty<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(&arg2)) {
                break
            };
        };
        0x1::vector::destroy_empty<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::staked_share::StakedPoolShare<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>>(arg2);
    }

    fun extract_all_rewards_from_proofs<T0, T1>(arg0: &mut 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::Pool<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>>, arg1: &mut 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::Fountain<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, arg2: &0x2::clock::Clock) : 0x2::balance::Balance<T1> {
        let v0 = 0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::borrow_mut_rewards_of_specific_asset<0xf45a36f1eff3ea869fedffc0479740bb31bc1427e742d9628880e1d5f60d1f1c::pool::BUCKET_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T1>, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>, vector<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>>(arg0);
        let v1 = 0x2::balance::zero<T1>();
        let v2 = 0;
        while (v2 < 0x1::vector::length<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(v0)) {
            0x2::balance::join<T1>(&mut v1, 0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::claim<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>(arg2, arg1, 0x1::vector::borrow_mut<0x75b23bde4de9aca930d8c1f1780aa65ee777d8b33c3045b053a178b452222e82::fountain_core::StakeProof<0x1798f84ee72176114ddbf5525a6d964c5f8ea1b3738d08d50d0d3de4cf584884::sbuck::SBUCK, T1>>(v0, v2)));
            v2 = v2 + 1;
        };
        v1
    }

    // decompiled from Move bytecode v6
}

