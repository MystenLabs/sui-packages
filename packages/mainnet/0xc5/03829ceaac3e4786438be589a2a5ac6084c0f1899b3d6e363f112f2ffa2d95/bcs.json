{
  "dataType": "package",
  "id": "0xc503829ceaac3e4786438be589a2a5ac6084c0f1899b3d6e363f112f2ffa2d95",
  "version": 1,
  "moduleMap": {
    "pugwif": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pugwif",
      "datatype_name": "PUGWIF",
      "package": "0xc503829ceaac3e4786438be589a2a5ac6084c0f1899b3d6e363f112f2ffa2d95"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "pugwif": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xc503829ceaac3e4786438be589a2a5ac6084c0f1899b3d6e363f112f2ffa2d95::pugwif::PUGWIF",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}