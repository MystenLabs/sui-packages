{
  "dataType": "package",
  "id": "0x66192739fc019434aded5fbd5c541f728e04bf6cac8ace8d2df7bf588a3fdeee",
  "version": 1,
  "moduleMap": {
    "xyz": ""
  },
  "typeOriginTable": [
    {
      "module_name": "xyz",
      "datatype_name": "XYZ",
      "package": "0x66192739fc019434aded5fbd5c541f728e04bf6cac8ace8d2df7bf588a3fdeee"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "xyz": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x66192739fc019434aded5fbd5c541f728e04bf6cac8ace8d2df7bf588a3fdeee::xyz::XYZ",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}