{
  "dataType": "package",
  "id": "0x66e06b8b5c12148467204294379fc164dcee5c9496313090a8951d69561a4a38",
  "version": 1,
  "moduleMap": {
    "cluck": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFjB8QB1wEImwNgBvsD6DwK40AFDOhANgAGAQ0CBwISAhMCFAAAAgABAgcBAAACAQwBAAECAwwBAAEEBAIABQUHAAAKAAEAAREFBgEAAggICQECAgsMAQEAAw4FAQEMAw8OAQEMBBAKCwAFDAMEAAEEAgcDBwUNBA8CCAAHCAQAAgsCAQgACwMBCAABCgIBCAUBCQABCwEBCQABCAAHCQACCgIKAgoCCwEBCAUHCAQCCwMBCQALAgEJAAEGCAQBBQQHCwMBCQADBQcIBAELAwEIAAIJAAUBCwIBCAAFQ0xVQ0sMQ29pbk1ldGFkYXRhBk9wdGlvbgtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsBWNsdWNrBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQRbWludF9hbmRfdHJhbnNmZXIVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBm9wdGlvbhNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIEc29tZQh0cmFuc2Zlcgp0eF9jb250ZXh0A3VybGbga4tcEhSEZyBClDefwWTc7lyUljEwkKiVHWlWGko4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIBCQoCBgVDTFVDSwoCCQhTVUlDTFVDSwoCMC8kQ0xVQ0sgc2F5cyBoZWxsbyBmcm9tIFN1aSwgYSBncmVlbiBibG9ja2NoYWluLgoC7TvrO2RhdGE6aW1hZ2UvanBlZztiYXNlNjQsLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzRnSFlTVU5EWDFCU1QwWkpURVVBQVFFQUFBSElBQUFBQUFRd0FBQnRiblJ5VWtkQ0lGaFpXaUFINEFBQkFBRUFBQUFBQUFCaFkzTndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBOXRZQUFRQUFBQURUTFFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWxrWlhOakFBQUE4QUFBQUNSeVdGbGFBQUFCRkFBQUFCUm5XRmxhQUFBQktBQUFBQlJpV0ZsYUFBQUJQQUFBQUJSM2RIQjBBQUFCVUFBQUFCUnlWRkpEQUFBQlpBQUFBQ2huVkZKREFBQUJaQUFBQUNoaVZGSkRBQUFCWkFBQUFDaGpjSEowQUFBQmpBQUFBRHh0YkhWakFBQUFBQUFBQUFFQUFBQU1aVzVWVXdBQUFBZ0FBQUFjQUhNQVVnQkhBRUpZV1ZvZ0FBQUFBQUFBYjZJQUFEajFBQUFEa0ZoWldpQUFBQUFBQUFCaW1RQUF0NFVBQUJqYVdGbGFJQUFBQUFBQUFDU2dBQUFQaEFBQXRzOVlXVm9nQUFBQUFBQUE5dFlBQVFBQUFBRFRMWEJoY21FQUFBQUFBQVFBQUFBQ1ptWUFBUEtuQUFBTldRQUFFOUFBQUFwYkFBQUFBQUFBQUFCdGJIVmpBQUFBQUFBQUFBRUFBQUFNWlc1VlV3QUFBQ0FBQUFBY0FFY0Fid0J2QUdjQWJBQmxBQ0FBU1FCdUFHTUFMZ0FnQURJQU1BQXhBRGIvMndCREFBWUVCUVlGQkFZR0JRWUhCd1lJQ2hBS0Nna0pDaFFPRHd3UUZ4UVlHQmNVRmhZYUhTVWZHaHNqSEJZV0lDd2dJeVluS1NvcEdSOHRNQzBvTUNVb0tTai8yd0JEQVFjSEJ3b0lDaE1LQ2hNb0doWWFLQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0NqL3dBQVJDQUQ2QVBvREFTSUFBaEVCQXhFQi84UUFIUUFCQUFFRkFRRUJBQUFBQUFBQUFBQUFBQVFCQWdNRkJnY0lDZi9FQUR3UUFBSUJBd0lFQkFRQ0J3Y0ZBQUFBQUFBQkFnTUVFUVVoQmhJeFFSTlJZWEVISWpLQkZFSUlJek5TY3BHaEZTUmlnckhCMFNVMGt1SHcvOFFBR3dFQkFBSURBUUVBQUFBQUFBQUFBQUFBQUFNRUFRSUZCZ2YveEFBdEVRQUNBZ0VEQXdJRkJRQURBQUFBQUFBQUFRSURFUVFoTVFVU1FSTWlNbEZTWVhFR0ZCVkNvU094OFAvYUFBd0RBUUFDRVFNUkFEOEEzZ0FQSUgxY0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHZTBzcmk3a2xiMHBUOWNiZnpEYVc3TlpTVVZtVE1BT2xzK0Zha3NTdXF5ajV4aC95Ym0yMEd3b1kvVTg4dk9ieVZKNjJxTzJjbEN6cWRNTmx2K0RnbEdVdnBUYjlFWm9XVjFQNmJlby84cDZQVHRxTk5ZaFNoSDJpWlVraXUrcGZLSlVsMWQvMWllY3gwcStmUzJxZnlLVDB1K2oxdHFuOGowZ1lScC9KUytrMC9sclBwUjVqTzB1SVA1Nk5SZjVXWW1tbmhwcCtwNms0cHJkWkk5ZXp0cXl4Vm93bDd4TjQ5U1g5b2trZXIvVkU4MEIzRjF3M1pWay9EaktrLzhKcGI3aGk2bzVkdktOYVBsMFphcjFsVTlzNC9KY3E2alJadG5INU5DQytyUnFVSnVGYUVvU1hhU0xDeVhrMDFsQUFBeUFBQUFBQUFBQUFBQUFBQUFBQUFDbVFDcGx0cmF0ZFZWVG9RbE9UN0luYU5vMWJVWjg3ekNndXMydXZvanRyQ3hvMk5KVTdlQ2l1Nzd2M0ttbzFjYWZhdDJjN1Y5UWpUN1k3eU5KcGZETk9HS2w2K2VmN2k2TC9rNktsU2hTZ28wNEtNVjBTUmtCeUxiNTJ2TW1jRzYreTU1bThnQUVKRUFBQUFBQUFBQUNqUlVBRWE3czZGM0J4dUtVWnA5MnR6bDlVNFpxVSthcFl2bmgrNCt2Mk94RDNKNnRUWlY4TDJKNk5UWlEvWTl2a2VXU2hLbktVYWljWkxacDdNb2VnNnRwRkRVWU51UEpXN1RYKzV4R29XTmF3ck9uWGpqeWt1ak96UnFZM2Njbm9OTHJZYWhZNGZ5SW9BTEJkQUFBQUFBQUFBQUFBQUFBS1pON3cvb2tyeHhyM0thb0o3THZML0FORnZEbWtPL3ErTFdXTGVELzhBSm5iMDRxRVZHS1NTMlNSUTFlcTlQMlE1T1JyOWQyZjhkZlBrclRweHB3akduRlJpbGhKRndCeDI4bkNBQU1BQUFBQUFBQUFBQUFBQUFBQUFBRWE5dEtWNVJsU3JSVFQ3OTBTUVpqSnhlVVpUYWVVZWQ2eHBsWFRxK0pmTlNmMHlOZWowMjh0cWQzUWxTcXg1b3Y4QW9lZjZ0cDlUVHJwMDVid2U4WmVhTzNwZFVyVjJ5NVBRNkhXK3N1eWZ4ZjhBWkNBQmNPa0FBQUFBQUFBQUNWcGRsTyt1NFVvSjh2V1Q4a1JUdWVHTEJXbGtxazFpclUzZWV5OGlEVTNlakR1OGxQVzZqMEs4cmw4RzF0YUVMZWhDbFNqeXdpc1lNd0I1OXR0NVo1aDd2TEFBTUdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBYS9WN0tuZjJzcVUwbExyR1hreWV6SEpibTBaT0RVa2JRazR0U1hLUE1xdE9WQ3JLblVXSnhlR2kwNmJpMnhUVWJxbXQxdFBIbDVuTW85RFRhcllLYVBWYWE1WDFxYUFBSlN3QUFBQUFBYkhoK3ovRzZqVGkxbUVYelM5ajBKUlNXM1E1L2c2MThLeWxYYSthbzl2WTZFNG11dDc3TUxoSG1lbzNlcmMxNFd3QUJTS0lBQUFBQUFBQUFBQUFBQUFBQUFLTXFjWjhWT05xSEEvREZXK2x5enZhdWFkclNmNXArYjlGMVpMVFRPK2FyZ3QyYXptb0x1WndIeHIrTU4xd3BydHRwSERUdGFselIvV1hrNnNlZUs4cVdNN2ViZlhwMDNKWEEvd0FmZEMxaFU3ZmlHbTlJdkhoZUp2T2hKKy9XUDMyOVQ1VzFLOHIzOTdYdTd1bzZseFhuS3BVbStzcE41Yk1OS0VwempDQ2NwU2VFbDNaN24rQzBycFZVbHV2UGs0LzdxenVja2ZvaFpYZHZmVzBMaXpyMHJpaE5aalVwVFVvdGVqUm5QT1BnVndmVzRTNE5wcTlsVVY3ZXRWNnRPVDJwN2JMSFo0Nm5vNTRqVlZ3cXRsQ3Q1U2ZKMTY1T1VVNUlNeFRabE1WUWdKRVE3eUNxMHB3a3N4a3NibkEzVkYyOXhPbEw4cjJmbWp2NjYrVjVPVjRqb2ZOQ3N1dlJuUTBGdmJOd2ZrNi9Uck95WGI4elNnSUhZTzRBQUFDc0k4ODFGZFc4RkNabzFMeHRVdG9OZFpveEo0VFpwWkxzaTVmSTlBc0tLdDdPbFNXM0xGSWtGQ3A1bVRjbmxuajI4dkxBQTdHREFCNVp4MThaTkk0UzRycDZOWHQ2bHlveFR1S3RLUy9WTjlGanUrNTNYRFBFMmtjVFdTdXRGdnFWekJyTGluODhmZVBWRnF6UjMxMXEyVVgydnlSeHVoSjlxZTV1UUFWU1FBQUFBQUFBQUFBQmdHTzVyVTdlaFVyVjV4cDBxY1hPYzVQQ2lsMVo4VC9HVGplcnhueFpWclFrMXA5czNTdG9aMjVVL3E5MmV4ZnBLOGVyVDdCY01hYlZhdWJoS1YxT0wrbUhhUDNQbUI3bnMvMC8wLzA0ZnVacmQ4Zmc1V3N1N24yTGdvOTJlM2ZvMzhBZjIzcXo0ZzFTam5UcktYNm1NbHRWcS84QUM2KytEelBnTGhlNzR2NG10TkpzazgxWmMxV3BqYW5UWDFTZnN2OEFZKzV1SHRHczlBMGExMHZUS1NwMnR0QlFpbDFmbTM2dnFUOWQ2aCsycTlHRDk4djhScHBLZlVsM1BoR3lCUlBKVThLZGhBeHpXVVpDeWIyQmxFR3UvcVROTHExUHhiV2NjYnBaUnVMcDRUOXpXWEx5bXVxNkc5Y25DYWt2QmZvOXJVamtRWDFZOGxXY2ZKc3NQU25vMDhySUFBTWcyL0NrT2ZXS2JmNVl0LzBOUWIzZzVmOEFWSlB5Z3lIVVBGVW45aXRySGlpZjRPM0FCNTA4b0RuT1ArSjdmaERoVzkxZTU1WlNwUnhTcHQ0OFNvL3BpdjhBN29qb3p6WDQxZkQyKzQrMDJ6cDJHcHd0WjJqbE9OQ3JGK0hWazB0MjF1bXNlVDZsclJRcW5mRlhQRWZKSGM1S0Q3ZVQ0NzFiVUsrcWFuYzM5NU4xTGk0cVNxemsrN2J5WDZUcTkvcEYzQzUwMjdyVzFhTHlwVXBPTE52eGJ3THhGd3BWY2RiMHl0UXA1eEd1bHowcCswMXNjenlzK2t3Y0xJZXpEai9od25sUGZrK2h2aDkra0ZWbzhscHhqUmRhR3lWM1FpbEpmeFI3L1krZ09IdUlOSzRpc1ZkNk5mVWJ1aDBicHZlTDhtdXFmdWZueXRtYlhoL1g5VTBDK2pkYU5mWEZwWGorYWxOclBvMTNYb3ppNjNvRk4rWlZlMlgrZisvQmFxMWs0YlMzUitnb09lK0gxL3FHcWNGYU5mYXp5L2o3aTJqVnF1TWVWUE82ZU96YXdkQ2VKc2c2NXVEOGJIV2pMdVdRQURReUFBQUFBQWVjZkVENFI4UDhaWHM3KzVkZTExQ2NjT3RSbDlXT21VOW1lRjhWZkFiaWpTWE9wcGFvNnJiSjdlRkxscVk5WXY4QTJaOWRqQjFkTDFuVmFaS0tlVXZESzFtbGhONThubWZ3TitIOGVDK0hQSHZhU1d0WHFVcmg5WFRqMnByMjcrcDRqOGJPUCtJS25IK29XTnJxRmEwdE5Qck9qU3AwSnVLMjZ5ZU9yYlBybkhrZWQ4Yy9DRGhuakRVM3FONUM0dEw2V1BFcTJzMUh4ZjRrMDAzNjdNc2FIcVZhMVVyOVdzNSszQnBicDVlbW9WbXQvUjk0MzFEaTdoNjVvNnU1VmJ1eGxHSGo4djdTTFcyWDU3SHE2TkZ3aHdycFBDT2wvZ05EdHZBb3Q4MDI1T1VweTg1TjlUZW5NMXR0VnQ4cDByRVdUMHhsR0NVdVFZcWo3R1V3MWlxVExrZ1hPN05iY05KN2RNbXpyUnpFMWxlT0U4N0E2Rkp6VitzWGRUSG5ramtyVXY4QXU1TkVVOUpTODF4ZjJPL1Y4Q0FBSkNRRzg0UGxqVkpMemd6Um0wNFlxY21zVWZYTWY2RVY2elhKZllyYXRacGt2c2VnQUlIbkR5Z0RBQU1WeFFwWE5DZEM0cHdxMFpybGxDY1ZLTWw1TlBxZVZjWS9BemhqWE9ldHBrSjZSZHZPSFErYWszNndmVDdORmYwaitJZFUwRGd1ZzlJcjFMZWR6Y0tsVXJVOXBSanl0N1B0bkI0MThHL2lMeEpiY1phZHA5ZlVMaStzcnlzcWRXbGNUYzhaN3B2ZEhvT25hTFZLaDZxaXpITzN6eC9oUnZ0cjcreWFOWnhqOEhPSytIRldyL2cxZldVTXZ4N1o4MjNtNDlVY3J3Vm9OYlhlTU5MMG5sbEdWeGNSaFA1ZDR4em1UeDZKTSsrL00xRkxodlJxT3NyVmFPbVd0UFVVbkh4NFUxR1cvWHAvcVQxZnFTZlk0Mng5Mk5tdm1hUzBLem1MMk5wUmhHblRoVGdsR0VFb3hTV3lTTHdsZ0htVzg3blJTd0FDbVRBS2dvM2dvNXhTM2FYdXdDNEdKM0ZGZGFzUDVsWVZxVTNpTlNMKzVudFpuRE1nQ2VlZ01HQUFWU2Nta3VvREtBa3hvUjJ6dVVuUVdNeGU1SjZVc0ducUlqa2Vxek5QTVU4OVNOVmxsWVJHU3hXV1E3aHRKNE5YY3o2b25YTThKbzFWZVdjbUdkS2lQazB0OUxtdUpFY3kzTHpYbjdtSTlMU3NWeFgyUjNZTEVVQUFTRzRNOWhWOEc5bzFQM1pKbUFldmNOWldEV1VlNU5NOVJoSlNTYTZNdk5ib3R4K0kwMmhQT1h5NGZ1allKNVBNemoyeWNYNFBJVGk0eWNYNExnQWFtaHJPSXREc09JdEtyNmRxMUNOZTBxcmVMNnA5bW4yWnlQQnZ3bDRaNFUxUmFqWlVhdGE3ait6bldsemNuc3ZNOUJCWWhxcnE0T3VFbW92d2FPcUVuM05iZ0FGYzNCVEpVMGV0YWxPbE4wS0R3OGZOTHk5RGV1dDJQQ042NjVXUzdZbXp1YjIzdC8ydFJKK1M2bXB1ZGRiYlZ2VCs4alJ2TGJiYmJmbVd5bEdFWEtUVVlyZHR2Q1IwSWFTQzUzT25Yb1lSM2x1VEsyb1hWWi9OVmFYa3RpUE9wVW0vbXFTZnV6UlgzRStrV2NaT3BlMHB0Zmxwdm1iL0FKR2l1ZmlKWVFiVnZhMXFucTJvbHVORDhSTGtha3ZoUjNIdUZsUEtiUjVyVStJMXpKNG8yTkpmeFNiTmp3L3gxK052SVc5L2JSbytJOFJxUWUzM3lidW1TV1Rkd2Z5Ty9wWFZlakpPblZrc2V1VG90STFMOFduVHFKS3JGWjI3bkxTa2wzTDdHNWRMVWJhVVhqTTFGK3oyS2wxTVp4ZnpLbCttalpGdExjN2t5MjJITit4aFR6dVgwNWNrczlqbHdlSkk0Y2xtSk9LTXBHU2F5bmt0cVZGQk9VbjBMbWZKQmdnM2trcWpScnJpYVdkekxkMWN5bEo5eldYTmJLZU9wU2sxbHM2Vk5mQmh1cW1kL0kxdHhOOHIzSk5XcG1IWDdFQzQrYURTZlUxamh5U2ZCMWFZWU5YSjVrMzVzb1paMHVYOHliTWVQVTlDdFZTOWxJNmlraWdBTEVYM2Jvem5JQUFNblM4STNuS3FsdkovNG9vNm1FdTdaNXhZM0VyUzdwMW92Nlh2N0hvRkN2Q3JUalVwdjVaTEtPTnI2dTJmZXVHZWY2bFIyV2Q2NFpNVHlWTWNHaklVRG1QWUREN0ptVzNoelBNbHNTdVZZSllWZHl5eU9VOFBCQUJMclVsSlpXeklocktEaVpqTHVMYWo1WU4rU3ljRFZ1L0ZyVHFTZThwTnM3K2FUVFQ2SG5Hc1cwOVAxQ3BUYWFnM21EZmRGblNOSnRIVjZhb3ViaStTU3FpZUZrOGk0MzFtOHZ0VXVMZVZTVWFGR2JqR25GNFh1L005S2R6dmswK282SHBlb1hEclhOQ1NxeStxVUpPT1RxVlRqRjVaMkZYaDVQSm9RY25oYnk4aWJiV01wdmRaOUQwKzMwTFJyZUs4T3poSi92VGJrLzZrbE9uUmh5VUtjS1VGMFVJcElsbHFQcE4xRnM4L3MrSHJxcy9rdHFqWFhNbHlyK3B2ZEw0V3FScndxWGpoVHB3YWZMRjVrem9wVlcydHluTzMxWkE3Wk0yOU0yRTduNWRtak5vMEtsN3ExdFRYUlRVNWVpVzVDczdHNXZKNHQ2VXBlcjJTKzUzUERta3gwMkVwU2ZQWG1selM4dlJGVzY1UVRYa3A2elVRcHJjVjhSdlZzVnpncGtzbkk1WjV0SXJLbzR2WnRHQ3JVYlc3eXlrNTVJdGVyaEdjazBLOHN3WGszMk5aVXJQdVo2OVZ2T2VwQXJQYlBjMWJPbFREQzNNZFdiN0VhYlprcWVaSGxMSGRtcGZnakZVeTl6RS9Rdm04bU9YbVpMRVIzTEd5NHBnN1hUNFAwMjN3emFKVUFIUU53ZEp3dmZwZjNhckxwdkRQK2h6WmRUbktsT000UEVvdktaRmRVcllPTElOUlNyb09EUFNJU2ZrWklTWnFkSDFDTjVacVN3cHgybEh1YkNOUk5KcnVlZW5Cd2s0czh4T3R4YmpMd2JPMWtzWTc5U1NhbWpWNWNTVEp0TzVnMTgyekpxN0ZqREtrNE5QSkpJVmI5cEwzTTA3aU9IeTdzakdMWko3SVFpK1FRTlgweWhxVkRrclpVbDlNbDFSUEJDbTR2S0o0eWNYM1I1UFBiL2htK3Q1dndVcTBNN09QWCtSRS9zTFU1ZExXZjNQVEhISlpLTExLMWMwZEdIVkxrc1BEUE9hZkQycFR6K3JoRCtLU0pWTGhhczFtNHJ3aXZLS3l6dUhTZWNvbzZHWGt3OVZObVgxTzUrY0hLVzNERnBuTldwVm42ZERZME5Fc0tXOGJhTGE3eWJadTFReDJMbFNTVzVFN1p2eVFUMWRrdVpNalVxRVZGWVhMdGpDSk5PUEtpdXhaVW5nakt6YmtYU2w2bUdjKzJTeXBVNmtlVlRFVzExQnZHR1M2cFY1VzB5QlhxcmZCV3JWOCtwQ3F6eW5rd3k3VlVXMVpaZVYwSTFTV0NzNTRmcVlLa252N21DOUNKWlVsdThkREMzMUt5ZlZHT1Q2NUJaaXNHT1hWc3NLeWVXVUxXbTB6dWYySlVobklBTy9GS0t3amZBQUJreUFBQVNMRzdxV2RkVktiOTE1bzYyenY0VjZVWndlVSszZEhGR2V6dXAydFRtZzhwL1ZIekttcTB5dVdWeVV0VnBGY3Nyazd5RThycVo0ejI3Wk5KWVgxT3REbWc5KzY3b2xTdU9tT3VlaHc1UmNXMCtVY1NWTFR3YlNFekx6R3U4YkVsN0Y2clo2ZERCQTYyVHVaRmNrQlZ2bjNleUwvQUJzOUdESHBzbDh5SzVJZmpoMXRnT3hrdHlLT1JFZGRMdVdPdGxQY0dWV3lZNmhiS2ZtUXZHMjZsc3ErVTl3Yktwa3FkVEdTUFVxcVVlcGdsVmVPcEZuVmJ6SGZZRTBLaVRXcWJZempZanlxeFMzTVZTcW1zNTNaZ2xXekZHQ3hDc3ZuVTh1aEZxUzNFcDViMzJNRTVaemt3VzRRTFp5V1RET1djb1RlK1RFM2wrUUxNWWw4NXg2OTBSNnNzeXlLa2wyTWIzTCttME1yUGRQWkVzSUFBSFpqRlJXSWtxV0FBRFl5QUFBQUFBQUFBWDBhczZNMU9uSnFTTnRhNmxHcjh0VEVKdnVhWVlJTDlQQzVlN2todHBqWnp5ZFpUdVg0YVVudXU1ZlR1TVI2dHM1aTN2S2xIWnZtajVNbjBiMkUrL0xMeVp4N3RKWlY0eWpuejBqaWJsWFh6SmYwSy9pV3BmTDBScS9GNlBPeFZWY0xZcTVJL1FSdFlWdWFUYmVNbDg2eVdNR3BoVmNYbkxLdXMydlZqSnA2RzVQVnh2dmtLNHkybm5CQTUxNWx5cS9OOWhrMjlKRXlwVmVWZ3NWVEw2a2RTeSt1NWJLU1RXQmtLc2t6cWI3c3d1cnV1NWlsVVRMSnZiYnFZTjQxbVNwUDVkOThFYWRSdjdGSlRhemt4VHF4aXQyc21WRnllRWlhRUNybHNXVGV6M01GUzVYU0t5WVpWWlN6dmd1VjZDMmZPeFpqV3pOS29rbXBNd1NtMzZGb09sVG82NnQrV1RLQ1FBQmJOd0FBQUFBQUFBQUFBQUFBQUFBQUFBQytGV2NQcGsvWXowN3hwL05IUHNSUVEyYWVxejRvbWpyaS9Cc28zbE5ydW1YSzRnL3pJMVlLc3VtMXZodEVmb1I4RzM4V09QcVJWVlkvdkwrWnB3Ui94a2ZxTmYyLzNOdzdpbXR1ZEdPVjVTWDVzbXJ3TUVrZW0xcmxzeXRQRW5Udm81K1dMTVU3MnBMb2xFakFuam82WS8xTjFUQmVDNlZXYytzbVdnRmlNVkhaSWtTUzRBQU1tUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRC8vMlE9PQMIAAAAAAAAAAAFICRhb8O7cwZsl9s3MIy6qHdy1c55ZE02OghyoP9x+wlQAAIBCQEAAAAAAhkLAAcABwEHAgcDBwQRBzgACgE4AQwCDAMNAwcFCgEuEQYLATgCCwMHBjgDCwI4BAIA"
  },
  "typeOriginTable": [
    {
      "module_name": "cluck",
      "datatype_name": "CLUCK",
      "package": "0x66e06b8b5c12148467204294379fc164dcee5c9496313090a8951d69561a4a38"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "cluck": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x66e06b8b5c12148467204294379fc164dcee5c9496313090a8951d69561a4a38::cluck::CLUCK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}