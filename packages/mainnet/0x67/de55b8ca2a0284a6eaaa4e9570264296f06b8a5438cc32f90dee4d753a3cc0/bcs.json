{
  "dataType": "package",
  "id": "0x67de55b8ca2a0284a6eaaa4e9570264296f06b8a5438cc32f90dee4d753a3cc0",
  "version": 1,
  "moduleMap": {
    "manifest": ""
  },
  "typeOriginTable": [
    {
      "module_name": "manifest",
      "datatype_name": "MANIFEST",
      "package": "0x67de55b8ca2a0284a6eaaa4e9570264296f06b8a5438cc32f90dee4d753a3cc0"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "manifest": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x67de55b8ca2a0284a6eaaa4e9570264296f06b8a5438cc32f90dee4d753a3cc0::manifest::MANIFEST",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}