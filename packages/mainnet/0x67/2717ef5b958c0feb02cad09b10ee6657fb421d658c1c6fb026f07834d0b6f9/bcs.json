{
  "dataType": "package",
  "id": "0x672717ef5b958c0feb02cad09b10ee6657fb421d658c1c6fb026f07834d0b6f9",
  "version": 1,
  "moduleMap": {
    "dig": ""
  },
  "typeOriginTable": [
    {
      "module_name": "dig",
      "datatype_name": "DIG",
      "package": "0x672717ef5b958c0feb02cad09b10ee6657fb421d658c1c6fb026f07834d0b6f9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "dig": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x672717ef5b958c0feb02cad09b10ee6657fb421d658c1c6fb026f07834d0b6f9::dig::DIG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}