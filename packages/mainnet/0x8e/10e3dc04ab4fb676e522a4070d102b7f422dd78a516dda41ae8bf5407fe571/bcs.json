{
  "dataType": "package",
  "id": "0x8e10e3dc04ab4fb676e522a4070d102b7f422dd78a516dda41ae8bf5407fe571",
  "version": 1,
  "moduleMap": {
    "ods": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ods",
      "datatype_name": "ODS",
      "package": "0x8e10e3dc04ab4fb676e522a4070d102b7f422dd78a516dda41ae8bf5407fe571"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "ods": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x8e10e3dc04ab4fb676e522a4070d102b7f422dd78a516dda41ae8bf5407fe571::ods::ODS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}