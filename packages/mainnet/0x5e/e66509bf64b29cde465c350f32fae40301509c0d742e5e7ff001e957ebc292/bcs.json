{
  "dataType": "package",
  "id": "0x5ee66509bf64b29cde465c350f32fae40301509c0d742e5e7ff001e957ebc292",
  "version": 1,
  "moduleMap": {
    "gold": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFkB8UB1QEImgNgBvoD7WQK52gFDOxoQQAJAQ0CBgISAhMCFAABAgABAgcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAKAAEAAREFBgEAAgcICQECAgsMAQEAAw4FAQEMAw8OAQEMBBAKCwAFDAMEAAEEAgcDBwUNBA8CCAAHCAQAAwsCAQgABQsDAQgAAQoCAQgFAQkAAQsBAQkAAQgABwkAAgoCCgIKAgsBAQgFBwgEAgsDAQkACwIBCQABBggEAQUEBwsDAQkAAwUHCAQBCwMBCAACCQAFAQsCAQgADENvaW5NZXRhZGF0YQRHT0xEBk9wdGlvbgtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGdvbGQEaW5pdBFtaW50X2FuZF90cmFuc2ZlchVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMGb3B0aW9uE3B1YmxpY19zaGFyZV9vYmplY3QPcHVibGljX3RyYW5zZmVyBnNlbmRlcgRzb21lCHRyYW5zZmVyCnR4X2NvbnRleHQDdXJsXuZlCb9kspzeRlw1DzL65AMBUJwNdC5ef/AB6VfrwpIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCgIFBEdPTEQKAgkITWFnaWthcnAKAjs6QSB3aWxkIE1hZ2lrYXJwIGFwcGVhcmVkISAtIGh0dHBzOi8vdC5tZS9Hb2xkZW5NYWdpa2FycFN1aQoC9WPzY2RhdGE6aW1hZ2UvanBlZztiYXNlNjQsLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzRnSFlTVU5EWDFCU1QwWkpURVVBQVFFQUFBSElBQUFBQUFRd0FBQnRiblJ5VWtkQ0lGaFpXaUFINEFBQkFBRUFBQUFBQUFCaFkzTndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBOXRZQUFRQUFBQURUTFFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWxrWlhOakFBQUE4QUFBQUNSeVdGbGFBQUFCRkFBQUFCUm5XRmxhQUFBQktBQUFBQlJpV0ZsYUFBQUJQQUFBQUJSM2RIQjBBQUFCVUFBQUFCUnlWRkpEQUFBQlpBQUFBQ2huVkZKREFBQUJaQUFBQUNoaVZGSkRBQUFCWkFBQUFDaGpjSEowQUFBQmpBQUFBRHh0YkhWakFBQUFBQUFBQUFFQUFBQU1aVzVWVXdBQUFBZ0FBQUFjQUhNQVVnQkhBRUpZV1ZvZ0FBQUFBQUFBYjZJQUFEajFBQUFEa0ZoWldpQUFBQUFBQUFCaW1RQUF0NFVBQUJqYVdGbGFJQUFBQUFBQUFDU2dBQUFQaEFBQXRzOVlXVm9nQUFBQUFBQUE5dFlBQVFBQUFBRFRMWEJoY21FQUFBQUFBQVFBQUFBQ1ptWUFBUEtuQUFBTldRQUFFOUFBQUFwYkFBQUFBQUFBQUFCdGJIVmpBQUFBQUFBQUFBRUFBQUFNWlc1VlV3QUFBQ0FBQUFBY0FFY0Fid0J2QUdjQWJBQmxBQ0FBU1FCdUFHTUFMZ0FnQURJQU1BQXhBRGIvMndCREFBWUVCUVlGQkFZR0JRWUhCd1lJQ2hBS0Nna0pDaFFPRHd3UUZ4UVlHQmNVRmhZYUhTVWZHaHNqSEJZV0lDd2dJeVluS1NvcEdSOHRNQzBvTUNVb0tTai8yd0JEQVFjSEJ3b0lDaE1LQ2hNb0doWWFLQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0NqL3dBQVJDQURJQUp3REFTSUFBaEVCQXhFQi84UUFIUUFBQWdNQkFBTUJBQUFBQUFBQUFBQUFBQWNGQmdnRUFRSURDZi9FQUVFUUFBRURBd01DQkFNSEFRWUNDd0FBQUFFQ0F3UUFCUkVHRWlFSE1STWlRVkVVTW1FSUZTTkNjWUdSb1NSaWNySEI4RktDRmlVek5VTlVrckxSMHVIL3hBQWJBUUFCQlFFQkFBQUFBQUFBQUFBQUFBQUFBUU1FQlFZQ0IvL0VBREFSQUFFREF3TUNBd2NGQVFFQUFBQUFBQUVBQWdNRUVTRUZFakZCVVJNaWNRWVVJektCa2FGQ1VtR3g4TUhoLzlvQURBTUJBQUlSQXhFQVB3REtsRkZGQ0VVVVVVSVV4cGV5L2Yxd2NpaVFHTmpTbmR4UnV6Z2dZeGtlOVBQN1FtZ1VRWThGNzd4THo3REVoOVRyalhuY1NOcERlYzlnUW9qMDg1NEhxcE9sNUF2MG5jUVA3SXZ1TS9tVFcyT28yajdmcW15eWhjQytoYmNOMXRLbWxoUEJTVDdIMjlhZzFFNWlrYmM0VDdHQXRYNTcwVll0Y1dPTllibkhqeEhIWEVPTWVLUzRRVG5ldFBvQnhoSXF1MU5CdUxoTWtXUlJSUlNwRVVVVVVJUlJSUlFoRkZTTVN4M2FaSFRJaVd1ZSt3dk8xeHFPdFNUZzRPQ0JqdURYQzgydGwxYlR5Rk51b1VVcVFvWUtTT0NDUFExeUhBbXdLVWdqSlhwUlJSWFNSRkZGRkNFVVVVVUlVOUowamZJMFp5UTlCMnN0cEsxSzhWQndBTW44M3RVRFc0K2xsb1ptNlF1RFVobG1OY0Z2dU5zeVZOZmlzNWFRRXJTU1FjZzdzWXh6UzQxOTBrdDl2dE54alFVTWg3RGFVUG9oRGNuekpVU01IMkJCd2V4cUcyc2J1MnV3bmpEMlUzMEVzZG91VGJRbTJxMnIyV3VPcmVpSTJoeFJLRWJpcGFSdVVUbm5KNVBOUDU5c09NT3NxU01MUVVrRHNjakdLVm5SU3hKc3JLQzQrVnFFQnBraFRlejVRbEpQZjNIYW1xcGFSa2JnRCt0VTFiSUh5RzV3cERXMkN6ZDF2c0ZzaXJuUkUyeUNFcHRUa2hDMHNwOFJDa2h4WUljeHZBM0pCd0RnOGc5eldjZE1XRi9VTTUyTEdrUm82bTJpNlZ5TiszRzVLY2VWS2puekQwOTYzWjFHdDhXWllybzQ1RGp1dS9CclFsYWtBbkJCOHVmcms4ZldsYm96Ujl0dCt5NEloUlczSG1pMzRSanBTUmtnOG45cWUwM1VXR0lzL2JqbEpKQVNRVXFMMW8reGFWaFdaZC9ZYmVjbk4rUmJDM1NIQ2xLZHh4a0VBbFl4Mi9RVXBLMEYxL2dTWnIybDBXNkk1SVN5dDVLa3gyMUsyRExRR2NkdXgvZzFuMnJtQnhld09QVlJwQUFiQkZGRkZQSnRGTTNvOTA4YjFhOFowNStPWVRhM0dFeEZid3Q1d0lTUmtwd0VwQVh1emtuS2NiY0hJWHRvaG00M1dGQ0MvRE1sOURPL0dkdTVRR2NmdldpT2lWak5rakNUOGNwMUVlWTRzb0hrU3ZjMGxQUFA2ZjA0cXIxZXJkVFV6akdmTjBVMmhwL0dreU1CZEd0YnJZdW5ta21iTEVqUE5YQ08rRUR3UVZoSVdTNTg2ams4SCtUV2I3dEtFNjZ6SlkzWWZlVzc1dS9tVVR6L0FEVzFMaDBvaDYrY042bFhKRGFKS2dmQU1aTHFVN0I0ZmNrZjhKOUt6SjFmNmVQYUp1anEyM0haRU55Vzh5RmlNVzIyOEs4cWM1SXlSbkE0NFNhNDBlazhHQVNPTjN1eWI5MFZsUVpIYkJ3RXU2S0tLdDFDUlJSUlFoRkZGRkNGY09udXNabW1McmJ4SGJpTFpSTlErcjRnSEE1U0RraFF3TUpGYm8wVHFGdlVPbDROMlc1RzhTU0ZIK3pyeWc0V3BQSFA5MGU5Zm5QVDArenpybTlmZjF1MDNKbkJWaFpZZlVtTjREZWM0VXI1OGJ1NmllU2FxdFVoZVlqSkNCdUNmaGNOMjF5MHhOdE1kMmMrOFZPQXJjS2h0SXgzL1N1MUk5QjMrbGVqYXQ2QXRKT3hXRkFFWTRJelh1Y1pIYk9mZjFyekdwcVpwbi9FS3VXdEFHRjZxVUVBcUtraEl6a3FQQTRxc1hOYVZ6bnkycmNsU3Nia3F6bmdlM0JydnYxNWlRa3V4SDFMUzg0M2tiVTVIKytEVklrYXN0VER6alRyajRjU2VjTm5CN1ZjNkZHQVRJNDVTU1F5UEhsYXMxOVdMdS9jZFlYT004bHNJaFRwTFNDa0VGUThRakt1Y1o4bzdWUzZ2T3ROUFhLNWFxdTArQ3dIV1pVdDZRbkMwZ2hLbGxReUNSemdpb1I3U045WmdQekYyOXo0ZGdiblZKV2xSU1BVa0E1d0J5ZU9CejJyMEtPZUxhQUhEN3Fva3A1bWtselQ5bEEwVVVWSVVkVFdqVU5PNm90S0hrclZ1bHNwRzFRVGdsWStoeitsYU1pNldoNmUweE9zZG1WSW1TcGEvR1JHWGh4OXcrWElRaEFDaUFFazhEMFB0VlA2UmFjMHRlZmlwalVKUzVNSmJLMHFkZGNUc1g1amtZT0Q4dE8zUzlqbVMrbzlrdkRLV3hEaUpXaHpLc0t5VzNCd1ArZitsWithbzk3cldVd3VBM0p1T2JjSzNaQ2FhbmRLYkVuaXl1L1JxSElnZE43VEduUm40a2hzdjdtWG0xTnFUK01zaktWWUl5Q0R6NkdvYnFSTGNrUFFtbkVwQ0dwUzBncEhmSEhQTld6WDF5bDJ6VHJrbTN2aG1RbGFVaGV3SzduSFkxOG8xanQxNXN0dm1YR09aRWh4bEQ1VjRpMCtkU1FTY0E0Nzgxb200eXFoZm12UlRMNnc2WnRHbm9sa1haNGZ3NWtya0IxWGlMVnZDUTF0NFVvNHh1VjI5L3BTMHBDTElSUlJSU0lSUlJSUWhGT3I3TjJuMVR0UVBQOEFpaE1wK01wbUdTa0VOa0xDbHJLczVTZHFGSkdBYzd6eU1jcVN3S2RUZmJjcU9wYVhoSmJLRk41M0JXNFlJeHpuTmJxMEpNU3hvaTN5aXkxTHZtRmhTWE1sODVjVU9TY3E0VC9RVlVhdFZpQ1BaKzVUS1dJbjRnNmYydlpHazlSbzJwUmQya3BUNVFQRVYvOEFXb1IzUm10b3phNUM5VE5MYWFCV3BBV3ZrQUE4SEgwTlhJYWl1bUQvQU5TUGc0NDJwWDdmNGF0RHJqT3dKZVdoRzRmS29qbitheDhmaEFFMis2bnZxSjR5TjF2d2xkcE82V3lZNnpGdk1FVFp6enV4THpxRXF3a2pnWlA3L3dBMTI5U3RPV1dKWjBTR0xaRWJlVytsS2xvYUFVUVVxNHord3F6WGRtSXBsMk5GWVpiV3RHRXZ0QUFwSjlRUjdZcWozbG1iWVlhWlVkRTI5cTNoc1JsaFM5b09UdXdNOXNZL2VvWXJZd2ZCWWZOMDZKK1B6dkVqU1IvQ2pEZk5FMnUzd1dwK2wweUgvQ1NoYTB4bWp1VWxJQk9TZlUxSVFoWU5WNmZ1TGVuN0t4YnlwS21DbDFsRzBxS2Z6SlRrRVk0T2FtYlE5YnJ0Q2JjVkhobVVsQ0M4eHRTVk1MSTVTb2Qwbk9SZytvTmNWKzBrTGxLWmRoejNyWWhDZHBSRkczZjlUZ2owNHBpWFZOM3daTHNjT3ZvbmRyTDN6OTFRaDBnZUNRUzNwL1BQYTN0a2R2OEFCU1Y2dGFFZTAxZFpFdG94RXdWdXR0QkRSSUljTGVWbmJqQVNWSldjQThaQUFIWWFldE56WXNNeEZpblRtM0VvU1ZtVEplQ1ZIZHpqbjljZnRYeTFEYzVPd3V3dExmZTdLbk10dUpqbDVLeGo1Z1FnZytvejlhczlQMXF2anFMUDg3VDlFMVBUTmxiYXdIYm9rbDBDS21yRnFoU0ZLUXRLVVlJL0w1SE9mNXBsYUo2cTIvUnRnbXVhaGgzQ2UrSkhpaHhrTnFJUVVwVGp6S0I3NS9tdk16UzdXdDBqNzZlazZJUkZ6c1Mya1J4TEM4Wnp1MjUyN1IrbTZ1eUkxcDNwaG9XNnQyMlZCMWZMOFQ0cExVaDF0YnE4N0VsQXh1SkFDZDNIMXJSdzFqUTR6N2ZPNGdXN2RMWFZmSUNBSVNMZ1hYZDA4NnAyM3FYMUlldGJFV2NiY1k2bjB4NWlVYkFVQkl6aEtpTTV5ZjNOUFB3a013eTB3TmpiYmV4S1U4QklBNEZKcm9ycFNMZXIwMTFRUzB1MlM3b3c0d3UxSVFBMnhzVUdzZzRCNURJUGI4eHAwdm44RjNqQTJtdEkwa2dYd3ExZm5yMVJrUHlMUFlqSWNVdkRzakdUbkdVc0dsM1RJNmx3WmFiTGFDcUsrQTA1SVU1bHMrUUZER0NmWWNIK0tXOUs3bENLS0tLUkNLS0tzV2hOTHZhdXY3ZHRabE5SUmdPT091QXEybzNKU2RvSGRYbTRCSUI5eFhMM3RqYVhPTmdGMDFwY2RvNVZsNlA5T3RSYXJ2VnF1MXV0eW5yTEd1YkxjdVNsOXBKYkNWSVV2Q1ZLeWNKVUR3RFcyYk5wZUZhSkRiMFpjaFNrQTRDeU1IT2ZZRDNxby9aOTBMZE9uMmtKbHF2YnNSeVU5T1hLU1lxMUtUc1UyMmtBbFFUemxCOVBibW1KZEhWTnhGRmxXSE1qSGFzWnExYTJWNWViRU40VXVFdmFOalR6eXZWNjRSMmxMQ2w0VURqNVNhck1pK3g1VG9CYzdIYU1JUDhBclh5eE12TWwyUGEzQUpEUkpkOFVZQkhiajk2c3IybGJaNFo4S0lnUHBHVUVyVUJ1OSsvK2xVOVBwdFhxOEplY042ZnlwbDRhVWdQK1kvaFFwUE9EL0pvSjRQNmVsY1NsUDIyU21EZEZoeVN2Q2txYitYQjRIOVFmU3V6T2VDZkwyLzhBdzFrcW1ta3BaZGtnc1ZNdUNMaExqVlVsZWhMajhWYUVwZWN1N2pqc2hNanpCSlNRUUViZHVCbHc5L3BVeS9lcjVlTmp1aFlrYTV3MGtvZVc4bnc5cThBZ0FLV2trWU9mVVZGYWl0cjJ2NXFvZGk4SkRsbmNXM0orSlVXd1NwV1BMZ0hQTFN2YjBxeTM5KzM2TVdteGFiYlZCdUZ6UXBVYmI1a2VLZklrcUtzNEdRUFEvcFd2cHFFVkRJM1N4N24vQU81OUUzTk95Tm9INnZ3cXZjck5ZWkNWemRmelpkcXZSNGtNUkJ2YmJIeXQ0d2h6a3AyK3A1TldDQmNOU01XaUhGMEZCaVhHMk5JU0l5NVNkaTFNZ1kzSEswYzd2b1AwcmdnNmN1TnlmUXZXYmtlNHVxejRwUWR1OGpoUENRa2NESHBUUXNrYTIyR3lRMVIyUERRbEhncFNqS3VPVGprL1Exc3FiUm14QWVMMDZEaFZjOVlaQmJwL1hvcWxhOU8zN1ZyVWhPdm9hTGFwa2JZeGdMVGhZV01LM1pVdnR0VDdldFV2VzNUM1RGbUF0ZHRuWEo3VWJ6WWRpUkhsSjJPRFBteW9OaEtjQkt1Nmh5S2Jtb2JxOHV5VHB0cWZMS1lzWjExU2xKR2NoQ2lNQWdnOXZXa05vZldxTlNzSzFWcUJ4K2E3Ym5sTUplVzJsQ2tKS1J3RW93RHk0ZlNwa2phZWpidkxiQWtjZmhjUStMTTdZdzVzVThla052bVdyUU5zaFhGb05TbXkrVm9DZ3JHNTVhaHlDUjJJcTRPZ0tTUmtqOU85Sy9UWFVXM2xocHhTcFppa0VKUUdrbm5PUGZQZW1WQWtvbVJHSlRXN3czMjB1Sno3RUFqL0FEcWJlOW5EZ3FNV2xwc1ZudnJyMHlucHNLbmRNeFg1akRVUjlVaFR6elk4TURCR003U2ZMdTlENlZqNlZIZGlTRnNTRUZEcU9GSlBwWDZqWENPMU1oUHhaS1BFWWZiVTA0am56SlVDQ09QY1pyTnZXWG9UQmNqM2E2MkdKQWhGUlo4Snh4OTdDRGxDVlpTQW9jOCtucis5THlrV1JhSzZMaEZYQm55WWp4U1hXSFZOS0tleEtTUWNmeFhQU0lSV2tQczk5TlE3Y1didzFlQVM1QlE0cGd4dmwzS1FyR2QvcHR4bkFwSmFJdEVHOFQ1alZ5K0pMVE1ZdXBERGdRZDI5Q2VTVXE0d28rbnRXM2VrK2hJT2s3Y3hLaFNwTG9rdzJrN0hpazdVNEJISUF5Zjk0cWwxaW8yeCtFMDg4K2ltVTdRMXBrZDlQVlg4QWhJQ3VmMHFBdVRxaE1jUmtsT1Iva0tuWkxoYWp1TFQzU2trZnhWYWxPS2ZlY1djQWsrbnQycnozV3BnMWdZRGtxVFNOdTY1WHowS0NOUlhNQWZsNS84QVZYcHI3WDB6U3VwTERhNDJuWlYwYXVhd2hjbGxaQ1l1VkJPVkFJUG9jOXgyTmVMWTh6WkpzaWFWbzNQREJDemdkODFmZ29GWG9TQmtIOWEzZnN4STE5QTNhZUxwalVUZVlsVi9VOXViTFQ5eklTcGJESlVrRlBKeHp3ZlNxNHpMUzVFUSs0dERRWDVSdlVPK1RqazFjdFRuT25yajlXRjQvaXMvZGJMbXUwOU1vVWx0dERwK05iU1VxUEhaZlA4QUlxazlwcUZ0Vld3eE53WFlVbWljQkNYUFBCVXYwRWJucDF6MVBkbU55a1JuYmlsVVZUcVZCQzBlTEpPVUU4RVlLZTN1SytkcGVjNmczUzMzOHJNRVd4MUtESFYrTjRuWmVRY3B4N1k1cSs2SHVaT2dOTHZOaHZlOWJJcW5BUHlrdElQK3Y5S1d2U0NhaU5wdTQ0VzJaUGpndHRGZUNzK0dNQUR1ZWF1OUlNTlRVdmNQbWpzUCtLRE5jRFBCVEd1Yzc0TmxTMjJmaUhrSHlzaFlDdWZwZ25IclVsWWJMT3VEU2JoSXVVaEVhUzE1WUxpRkZMSno5VmQ4QStnNzF5YU10a2lSZDJyM0xZZVlkY1N0S2tGT0VqQXdEeitsTUxJQjcvMXJTT05zQlJRczlmYVh1cyt6YW0wSER0VTJUQ2lYQ1M2M01hanVGdEVoTzlnWWNTQ040d29qa0h1YStMMWloSXRNbUJiWXNlQTA4UVQ0RFFTbmRrZWJhTVpQSGV1LzdUZHVhbWFrMExJZVdVQ0s2KzduSUhaYkI1K2xlWXNxUE5aVzVGZFpmQU8wcWFVRkRQZkdSV1E5cFh2YTZNdDRXZzBWb3M0cnEwZERnd3JlemFwTE1XVEliQzFLZldsSVVjckt1eDU3SzkvU3AzNEM2K04vWnI3S2pzbFIyTkFxMm9TYzdRQnVBNDdVa2w2bGl3ZXNOeGgzRjZORWp0c0pJa1BPQkEzRnBCQTh4QTlhdlRXdUx1TmdpV2NQdytBaDlPNGh4czR3c0VEQkJUZy9vYW42ZnFFa0RSSFZjRUFnK3ZSTlZWRUozRjlPYzlRbVFxNFR0R3BTMDg1S3YveFBtU29xSThJRDAvTjN6OU8xUldxTldTcjVZNUZ2Tmlsc2VNVUVPWks4WVVGZHR2MHFRdEd0ckhEZERTYnZiQ2x4WEpWSlQ1ZmZIT0t1a1M3MnlkSFM5RHVFT1F3dklTdHQxS2tuQndjRUhIZmlyNXNySEh5NVZPNk43UG1GbGdUcXBva2FmWEl1Wm5xZGNrelZKVkdVenRVMXVDbDhuY1NjWUE3RE9hWE5PdjdTcEIxVGN5a3BLRFB5a2pzUnNQSXBLVXJyWHd1Vk42WW12MjlOMWtSVkJMaVlnR1NNOEY1cXQvd2I1RHRPbGJJOWNGcVEyN0ZaQ1ZKUVZaUGhnOWgyckxmUmZwWFBtM1F1ekJhNUVhYmJFdk50dWxTc2JpMDRuSUtNWkE5cTB6cGZTczJPcFRlb1hZMDZHaEFTd3dwU25FdGtZSEFVQUJ4eHhXWjFhUVRQRWNZeU9TcDhVWWF5OGh4MjZydy9yRzN6SkNJOFNRdFNYQ0VZOEpRSkpPUFg5YSt4UE9QVSsxU2R5MDFiVjIrU20zVytDek1MYWd5NEdnbll2SEJ5QmtjKzFMV1hiOVE2VWxPWCsrM0ZNaXpOWVNxTXcrdGFpcFdFcHdsUUFPRkVIazFqZFIwZVdWKzRPLzNaV0VFa1JGbTQ5ZXF0MHFLekxhQ1hCdVNUa1lOU2RuMUtxR2xhTCs3dGRLdndrdHRramFCNjQrdWFpN1pMYXVGdWpUR2R5V1pEYVhFQlh6QUVaR2VlL2FvdVRkN2RhSnNlRmZZNjVVeVlvQ09vSVNzSUdkdkpVUmprK2xOK3o4MVJUVE9heDFpUDBucWlvYTF6YlNCVDkxdThpNlBsRnVjQ3JZNGdOT2hTY0hQT2NldllpcXpyUFNzSFVXbjBXbVhITDBSdDRPaHNPRkJKRzdCeUQvZU5XNFdsY1pDOXFHbTBESjhuRmNxYzhjODU3MUgxT3VydmVSUExkcEJ3bGlFZTNhemhWalJVNk1waVJab2F2dzdRaHVJRzhIeUJJS0FOeDcvSmo5cVZlamx6ZEQzZUJiTmJPSWF1RXVTbHlLbG44VkpRTm8vTGtEc2U5UE9QQmlSM25uSTBabHAxNDduVkpRQVZubmtuSFBjL3pVTnJUVFRHb0xUS0NJME0zajRkeHVITGViQlZIY0lJU29MQXluQ3NISUdhbjZMN1FNb3FweEk4ajdYNzM3K2lhcklQRkYyOUZZbzkydWs2MElUcHhhVk9LSjhIZWhLZUFUbk82dXUwbldKbE9mZVFZOEVOa29DZG1kM0h0KzlMZlJPdElmVGl3eE5QNnNUTXVGL2plSXArWEdDWEVyQzFxV0FGdUtTbzRTb0RrY1l4VHEwN2QyTDdab3R6aUljUXhLUUhFSmNBQ2dENzRKcjFHT2VPVnUrTWdncWxMUzNCVlAxeHBpTGZMTE1tNm1ZVTQ1YjR6enNZcGNLQW55N2p3azgvSU85SmZwVGNZOXpzVWw2SzRWcEVvZ2twS1Q4aUQ2L3JXcFpEYlVoaGJUNlVPTk9Bb1doUXlsUVBCQkhyM3hXWGZ0SElaMFk4aU5wUkRWallWRVE4cHFBZ01KVTU0aEc0cFRnRldBQmsxQjFLaDkraE1ZTmozVXVpcWpUUDNkRlFyMm5US2VzV3BwdXRvRXVmWlljRnAxYk1SWlM0VkVSMjBrZVpPY0Z6a1pIR2FqWE9wc3RpZVdySmRJRVd4b2NLWWtlUkdjTHJVZk9FSWNJUWNxQ0FrRWhTdWM4bWxqY0x0Y0owdVhJbHpaRHowbElROHRiaEpkU0NrZ0s1NUFLVW5IOTBlMWNGUENsWVlteFNpKzBKdDFRNFNHUmh0ZGFHT3F1bS9iNHA0ZXVkajNQYjZmclZtMC8xRXRUMFJxdzZMbTdwbm1WSGJjWldCM0sxNVVvWUhsQys5WlVKSnprazVycHRzK1ZiSmpjdUJJZGp5Rzg3WEcxRktoa0VIQkgwSnFHTkpaR1M2TjdnZlZTenFjajdOa0FJV2g5UWFRdUdvSkxraTd3STB0YnFpNFFYdGczZHMrUlErdnI2MGxJMmhkUnlVclV6YlNRbFJRY3ZOamtmcXF2Yi9wN3Fqak4vdWZmSnhJVVA5YWs5TjY0K0JoT3QzRis1T3ZLZEt3cHRlUmdnZTZoemtHbnFXR3FpSjhWNGRkY1ZNOVBOWXRidHNteDBLMU0xZHV1dDZ2bHdrUTJGVHJTSkRwUTRFTkljVjhPcGFVN2lleXR3d1NTTWZTcGZyZjFCblhhSTNGWTA2KzR4R2x1Rkx6YmlscGNRa0VCZnlZd1J6a0hGWmFaZmNaUzZsdFdBNG5Zc1lCeU1oV1A1U0thbW0rcGMyZXROdnVyN0VlSUVwYlpiYlpPQU8yM2NjcXdCeHlUVFZkQTh1OFZvdU9vU1VMbWI3T05qMEs0YkQxSVRhcjFBdUF0QWRNVjlEd1I4UnQzWUlPTTdlTTFwUHAzMW9ZMWhQaHhaRnVqMjFENkZxVXBkd0N5amFDUUNDZ2Q4ZStheTVycXdRMmRWUWJacGxsUy9pV1ViR3lza3FjSzFER1ZZNzRGU3VtTkFha3RWMlJKdUZxVTNIU2xRVXJ4V3lPUWNjQldUejdVeFV3VWhoRHg1U1JmbktlQWxsbTJTWnRpL1pQcnFOT1IwdmNlMVcxdHU3ZDdraHNNSklhRFFVRk9CUVg1dDNiR09CelRGa05CK000eVR0TGlDMlQ4d1NTTy8xNzFYTGJaOUs5UU5JV2ZUOTYvdGoxcllhVzdIYmRjYkxUaVViRGtqZzl5S3J2U1BWZDZ2VnJudTZ0Y2JSSmJlQ1d2RFFFZ294bkp4M09jOG1zZHJGSTB3dHFZY1BhYzl6MnNub2pJWkRHN0s2WXVqQnA1OUYzYmtMbXV3ZngweDBzN1M5dHlkdWR4NS9ZL3BWOXRsd1RkNEVlVXRLR1pyd0tsdy9FQ25HOGNjOEE5Z24wSGV1Yjd6aDRPWDg4WjdFWnFyV2VaSHRYVVc1M2U1T0pZdHI3QmFiZkp6dVVmRDR3T1I4cXFib1pwTlZhNm5xK1J3VjFKRVl2TzBLN2tiU2M4RWNINlY4M0hXMjhlSXRLZm9vZ1pyZ3YwOXhEY2FURFdGTVNncDFDOFozSk9DRDlPOVFFcVM1SVVGdkt4Z1k3WXFoZHBqMnlGcnNLYkRHWlc3bEozcWQ0aUhJeUU1VGdFT0pYa1pHTWNkdjYwazlZYVBFSy9UOVJHWjRpcHlnMFdDakFiOG9PZDJUbjVQYjFwcFk1T1ZLcW5hN3VFVjZFaUkwNkZTRzN3cGFNRUZJMnFIT2ZxUldqMGVhV2tlR3hISFZTSDBVVWpkcmdwRjc3U2wyanFRaDNweE9RNG9ZU0ZURnB5UjdEd2VlNHF1YS84QXRFekxwcCtaWloraVg3YXVVaE9GUFRUa0pDZ2M3U3lNOXNkNmxIVzVTNDBtVnFWSGhQeFVsMk9lTUFnWkp3bnZqQ085SUxxZHFKZW83NjFJTWxFaERiQWJDa28yNDh5ajdmV3RyUTZpK3FmdDI0SEpWRFc2ZXltWnUzWEtybDVuZmVOeWZsN0NqeENQS1Zic1lBSGZqUGF1S2lpcmRWYUtLS0tFSW9vb29RaXVpRE1kZ3Y4QWl4L0MzNHhseHBMZ0g2QlFJQjQ3OTY1Nmt0TjJ6NzYxRmE3WDQzZ2ZIU21vM2k3ZDJ6ZXNKM1l5TTR6bkdSU0cxc3BSZStFNW9jT0kzZllFMll3anhvN2lGcFh5U0FEbmovZnJUYml2eDdoQ1M4enVMTG84dTRZN0hrNHJodC9UeFRVTmVvSlVwaCtMYkI0cnNOVEJVWDB0amNVNEp3ZHc0NTRxU1kwZkwxUzJMMVpMcjl5VytWa3N3RUpVZ1I5dVVFQUpVa2NxU3BYQUhjOStheGRmUk9sSU4rT1BSYW1HdGlBdWNkL1ZlM1JwQ1U2NDFJa1l3RUVZL3dDZXFuMXlkT2pOWDZTZzZYeGI0azl3cWxOdEFFT2ZpSVRrNUI5Q2Y1cDY2WXNjS3hXK01oTGNVejBzSWJrU2tOcFN0OVFBM0tVZTU3WjVKck5PcUpqdlZxNTJ1NXhreXJVcTFPK0dSS1NWRlJKU3JLU01ZK1d1NlZ1MS93QVJ0MkFXSittRld5ek9ubTNSbTEwME1IL2kzRFBIUHA2ZlNvdlVjSjZkQVMxSFR1V2x3S0lKeHhnMVg3aGFMckVoUHlGMzE5WmJRVkVlS3ZrREhIZXZXMldxNnpvVFVsRjdlUjRtU1VGMVoyNEordFZVTUhoUEV6SGNIc3IrUnJYTkxISGxOZlRUMXZ2ZG1pMjVDZkZrMmVNMUhraFNTQWxlemFRayt2TFovaWw4alYxcEtSaDV3OEFwSmFQbXF6OUdHbHhwZXBXM2xLVTRrc2hTMUQ1aitMenpWQVRmclNrQWZjS1RqQnlXa1pIOGlwZGJTc2RKdkZ5VHpaUU5QZFl1YVRnTHRsdVhxNnZLbFdTU0V3bERDQXNnRWtjSGdnK3RRM1VBUjdKcHVGY0xra0pscmZEVHppUm5lZGl6ejlQTC9TclhIYVZldE5EN3NVcTJsU2p0MjVUakNqbnRqdjNyNVcvU3lpOHMzMTVtN3hNRW9qeWtlS2xLc2pDdHE4ak9Od3o5VFMwdE00dWFYaXpmelpTSjZ0alduWWNwVDY3MTZpNXdXbkxIZW1vNkVCeEttbjR5aVh6aEoyZ2JDUHA1c0RrZldsRE5sdXpIRXJlRFFLVTdRR21VTmpHU2V5UUI2OTYwZjFPNmJRcnpEaHUyMHc3UXpCUSs2OG1QRUc1N0lCemhPMEVnSVBjKzFaNHVzRkVYd25ZdnhxNGptVXBla3h2QjNMR0NwSXdwUU9BcEI3NTh3NDdaMTFDeUdPUGJELzZzeFV5U1N2M1NGUjlGRkZUVkdSUlJSUWhGRkZGQ0VWTTZMdWpGajFqWXJ0TFE0dU5BbnNTblV0QUZha29jU29oT1NCbkE0eVJVTlJRUmZDRnIvd0MwVkdkZGtUWGtNdXVOb3N5eVZodFJTbi90cytZY2RzZC9URlpDQ2lCajByWFhTYTUzSHFOMGoxTFAxWStibmNBdVRDYU8xTElMZnc2Q0VZUUVqdTRyazg4L1FWbVhxQmFVMkxWMDYzTnh4R1N5RzhOQlpYakxhVmR5VDN6bnY2MUVwVHR2RTdrSjJUSURnbzYwM2VSYTNWcmpoc2xhQ2c3MDU0eUQvcFhyRXVzcVBmR2J1cHd5SnJjbE1vcmZKV1hIQXJkbFJ6azVQZm5KcmdvcVR0RnliY3JqZTZ3RitGWTVlc0xqS2h1Um5VUnZEY1R0SkNEbi9QdlVyMHFQaTZoazd3RmJZaWlBZWZ6bzlEK3BxajFjbVYvY3VpNE4xdFlUSHVNaDFURHI0eXBTa2JsSEdGWlNPVXA1QUI0L1dtdkJZeHBEUmE2ZDhlUjd0enpleTJsRWt2eGRKYWFWSFpMaE1CcFJBU1ZiZncwZHNmNGozcUVjYmNaSkNrckdPd1Y1ZU9QNlZGZEZOUTNPKzZaWmJ1YjZYa1I0Y1ZMV0VKVGpLVkE5djhBcS9TWWtlWHRVNjJGWTQ3a2Y1VmhxblVHMGRXNk56ZnFyR05oY3dPQlZVeDllM0gwbzljZXRTYysydS9FTE1SbFhoN2NqQ2hnL3lhWHFOV3hvK3VicFpaODRJWEVSd3lHMUhaOG5kUVQvQUh2ZXJXbWxaVkM4UnZpOWsyN3luekszbFliU1ZyVUVvU055bEZXMEFEbmsrMUt2cXZwbTNhdXRVaS8yK1U5Y1prSmhMRGNlM0xTNmxSOFRPRHRDam5DODQ5c1V4YjIyWGJGY20wSUJXWXpnU1BjbEI5LzlhemJwTFUxNTBIT2J0Y3g1TU9BOHN5WFVscExwSktkb1VDQVQrVWNmUTFaMGpIRzcybkk2SmlWM0FLcGR4dE02SzYvdnRrK01obEtWT0pmYlZsc0hhTXFPMFlCS2hqajh3RlJ0WG5VK3BJMTN2V3JKcTVBY1ZjSVRMVEtpMlU3MUlkam5BR09QSzJydmdjZStLbzFXNHZiS2hubkNLS0tLVklpaWlpaENLS0tLRUtYMC9xUzlhZGRXNVk3cE1nbHhTVk9wWWRLVU83YzRDMC9Lc2NuaFFJNUk5VFdqN2JwYTJhaDZjTWF1MVpKaVhxTmNJdzhkNk5iMm9rcExwUGg0Uzd0SExTeHR6OHFnamtGSndjczEwMitkTHRzeHVYYnBUOFNVM25ZOHc0VzFweUNEaFE1SEJJL2Vtbng3c3R3VjAxMXVWNXVrWk1LNXk0cUhGT0lZZVcwRnFUdEtnbFJHU01uSGJ0azF5MXBqWE9pWlYxNlI2WW12WGlWSWR1RGNPVzU0amFuQ2svREt6K2JKSkt6ejlLelpManZ3NVQwYVd5NHhKWldXM1duVWxLMEtCd1VxQjVCQkdDRFN4eUNRWTZJYzNhdmxWMHZURDBmcHRaMFNHbkdsbVI0Z1N0SlNTbFFXcEtzSDBJSUlQcURtcTVweFNrNmh0YWtLS1ZDVTBRb2VoM2ptdEdkZmdGOUF0THZLU0M4cTVvM0w3ay9oeVBYOXE0bGsydWEzdVYwMFlKVkc2UmF3dnhZa3htNXFXMklxR0cwQnBocHM3UUZKQVVwSUJWd0J5YzFxMjZ5a3dJRXFZdEtsb1lRcHdqMTQ1ckJXaVpyVURVOEIyVk8rQWlxY0RiOGtzcWVEU0ZjRlJiU3BKVUIzd0RuampKNHBqZFU5ZHpiOUN0a3U3d3BOdHVTbUpFSjJFMitwb0ViRVllVTJwSk8xUmNXQU0vOEFoa2JqelZIcXVpbXVxR09GZzNxVkpncVJHeXg1V3BOUFhWdTkybHFleTJwdExtNUlTcFdUd1NQVDlLeVQxWXZVK3c5WXRTeXJZdHB0MXhRYVVYR0czZ1VsQ0NlRnBJSEtSejNvNmU5VmpvNkhiMkUycDJaOEtoeEJDcHV4Q3Q2bEt5RTdEajV2YzlzMUVkU05lTjZ6ZWNlRnFNRjF4OFBLUHhBY3poSlRqNUUvVCtLVFM5SWZwOVU5d3l3akgzUlBVQ1ZnN3B1YVY2aHdyekh1RFRLN2pMVnNBVXFVeWhuYVZCUThvU3RXYzQ1empzS1RmVklnNmhZMjR4OEtuc2MvbVZWT29xK1pBMWp0elZHZElYTnNVVVVVVThtMFVVVVVJUlJSUlFoRkZGRkNFVVVVVUlXcXZzNzlRWm11SFdkSFhtREZSR3ROc2JWRWtSU3RDeWxyWTFod0VrS0pDd2NqYUJ0UEJ6d2wrdWR4ZHZHdTNMbkthYWJsUzQ3YW5pM2tieW5LQVNDU0FkcUVqakE0ejNKSnRYMlNwelVEcVBjWEh5UWxWcWNRTWU1ZVovOEFpb2pxM0V0U0xCYjVwYmtpOVBTM0dtM0VxSGhLam9RbFNnb0huY0ZPSjI0OUN2UFpOUkl3R3p1QTRzbmptTzVTNjAvL0FOL1czUDhBNWxyL0FONHJUUFZtM1ROUzlETERiOVBSSkZ4bXhKYUpMc2VPMnBiZ2JBZFFTRTkxZVp4SEF5Y0hQWUVqTFREeTQ3N2J6S3RycmFndEt2WWc1QnJZUFIzVW8rSnQ0VkxMME5Wb1pKRFFTc0I4b2FVN3lQWGVWNUhvY2pqRkZWZHRwQjBSRU53TFZqK1ZIZWlTbm8wdGx4aVF5c3R1dE9wS1ZvVURncFVEeUNDTUVHdmxWajZrdWgvcUpxbDFKeWx5NnlsQS9RdktOVnlwVFRjWFRLS0tLS1ZDS0tLS0VJb29vb1FpaWlpaENLS0tLRUlvb29vUWlwVFROcE44dmthM0J4YlplM2VkRGZpRVlTVmZMa1o3ZTlGRkllRW81VHMxSmM3Zm9mU1VZd0xlMUJ2VExUY1JwOUVWRFRrd2hJQzFySXdyYjVRbzhxOHhTRDgyNEk2NjNlZmRuVk9YQ1U2L2x4Ym9RVGhDRkx4dTJvSGxUbkE0QUE0QTlCUlJUY1RBMFhYY2h1YkxncTNkTzlWblRsNEM1a21lbUFwcFRSRVk3MU5ra0t5bEJVa0hsSUI1SGNubkdDVVU0UUhDeFhBSkdRbS9ydlNkcjFORVJIaFFVTnpXcFdSZW9jWUxFMUhtQ2xrSklDL0VPeFlVU2V4eDh4ck9WRkZOeE4yM0FYVHpmS0tLS0tkWENLS0tLRUlvb29vUWlpaWloQ0tLS0tFTC85az0FIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBCAEAAAAAAhsLADEJBwAHAQcCBwMRBzgACgE4AQwCDAQKAS4RBgwDDQQGAEB6EPNaAAALAwsBOAILBAcEOAMLAjgEAgA="
  },
  "typeOriginTable": [
    {
      "module_name": "gold",
      "datatype_name": "GOLD",
      "package": "0x5ee66509bf64b29cde465c350f32fae40301509c0d742e5e7ff001e957ebc292"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 3
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 16
    }
  }
}