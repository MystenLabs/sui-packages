{
  "dataType": "package",
  "id": "0x5eccbfbb30c1d9ede0eae090152b5520ce8d5d39589f02a8b564b87b383d5c44",
  "version": 1,
  "moduleMap": {
    "water": ""
  },
  "typeOriginTable": [
    {
      "module_name": "water",
      "datatype_name": "WATER",
      "package": "0x5eccbfbb30c1d9ede0eae090152b5520ce8d5d39589f02a8b564b87b383d5c44"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}