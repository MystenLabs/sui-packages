{
  "dataType": "package",
  "id": "0xd7d536c3f01bc287916200c5cf7e0eef4b7a82ec18001f9d632ed753a821bd02",
  "version": 1,
  "moduleMap": {
    "barbados": ""
  },
  "typeOriginTable": [
    {
      "module_name": "barbados",
      "datatype_name": "BARBADOS",
      "package": "0xd7d536c3f01bc287916200c5cf7e0eef4b7a82ec18001f9d632ed753a821bd02"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  }
}