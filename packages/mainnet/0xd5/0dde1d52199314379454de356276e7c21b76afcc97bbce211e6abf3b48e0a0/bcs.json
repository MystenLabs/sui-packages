{
  "dataType": "package",
  "id": "0xd50dde1d52199314379454de356276e7c21b76afcc97bbce211e6abf3b48e0a0",
  "version": 1,
  "moduleMap": {
    "xgpt": ""
  },
  "typeOriginTable": [
    {
      "module_name": "xgpt",
      "datatype_name": "XGPT",
      "package": "0xd50dde1d52199314379454de356276e7c21b76afcc97bbce211e6abf3b48e0a0"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 16
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 35
    }
  },
  "functionMap": {
    "xgpt": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xd50dde1d52199314379454de356276e7c21b76afcc97bbce211e6abf3b48e0a0::xgpt::XGPT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}