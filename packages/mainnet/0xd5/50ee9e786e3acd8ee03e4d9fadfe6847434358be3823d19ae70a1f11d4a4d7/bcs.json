{
  "dataType": "package",
  "id": "0xd550ee9e786e3acd8ee03e4d9fadfe6847434358be3823d19ae70a1f11d4a4d7",
  "version": 1,
  "moduleMap": {
    "test": ""
  },
  "typeOriginTable": [
    {
      "module_name": "test",
      "datatype_name": "TEST",
      "package": "0xd550ee9e786e3acd8ee03e4d9fadfe6847434358be3823d19ae70a1f11d4a4d7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "test": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xd550ee9e786e3acd8ee03e4d9fadfe6847434358be3823d19ae70a1f11d4a4d7::test::TEST",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}