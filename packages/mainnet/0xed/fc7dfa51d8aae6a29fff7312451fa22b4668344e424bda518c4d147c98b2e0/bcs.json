{
  "dataType": "package",
  "id": "0xedfc7dfa51d8aae6a29fff7312451fa22b4668344e424bda518c4d147c98b2e0",
  "version": 1,
  "moduleMap": {
    "suideng": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suideng",
      "datatype_name": "SUIDENG",
      "package": "0xedfc7dfa51d8aae6a29fff7312451fa22b4668344e424bda518c4d147c98b2e0"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "suideng": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xedfc7dfa51d8aae6a29fff7312451fa22b4668344e424bda518c4d147c98b2e0::suideng::SUIDENG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}