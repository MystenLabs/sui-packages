{
  "dataType": "package",
  "id": "0x508b1e55bb77fc10100b0a9549ef8b65765f017d8da74d843ea514d470af50d7",
  "version": 1,
  "moduleMap": {
    "boom": ""
  },
  "typeOriginTable": [
    {
      "module_name": "boom",
      "datatype_name": "BOOM",
      "package": "0x508b1e55bb77fc10100b0a9549ef8b65765f017d8da74d843ea514d470af50d7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "boom": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x508b1e55bb77fc10100b0a9549ef8b65765f017d8da74d843ea514d470af50d7::boom::BOOM",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}