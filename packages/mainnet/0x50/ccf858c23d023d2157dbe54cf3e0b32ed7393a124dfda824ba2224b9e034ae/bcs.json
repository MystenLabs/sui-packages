{
  "dataType": "package",
  "id": "0x50ccf858c23d023d2157dbe54cf3e0b32ed7393a124dfda824ba2224b9e034ae",
  "version": 1,
  "moduleMap": {
    "logo": ""
  },
  "typeOriginTable": [
    {
      "module_name": "logo",
      "datatype_name": "LOGO",
      "package": "0x50ccf858c23d023d2157dbe54cf3e0b32ed7393a124dfda824ba2224b9e034ae"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}