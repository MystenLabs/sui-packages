{
  "dataType": "package",
  "id": "0x7011098a8ce9ed7b0e9abe8ed0d31d8080d3026ddbb6a3ef615f53225422f1e7",
  "version": 1,
  "moduleMap": {
    "gull": ""
  },
  "typeOriginTable": [
    {
      "module_name": "gull",
      "datatype_name": "GULL",
      "package": "0x7011098a8ce9ed7b0e9abe8ed0d31d8080d3026ddbb6a3ef615f53225422f1e7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}