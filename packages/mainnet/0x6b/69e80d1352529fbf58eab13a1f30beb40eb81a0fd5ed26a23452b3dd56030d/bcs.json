{
  "dataType": "package",
  "id": "0x6b69e80d1352529fbf58eab13a1f30beb40eb81a0fd5ed26a23452b3dd56030d",
  "version": 1,
  "moduleMap": {
    "trump": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trump",
      "datatype_name": "TRUMP",
      "package": "0x6b69e80d1352529fbf58eab13a1f30beb40eb81a0fd5ed26a23452b3dd56030d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 15
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 33
    }
  },
  "functionMap": {
    "trump": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x6b69e80d1352529fbf58eab13a1f30beb40eb81a0fd5ed26a23452b3dd56030d::trump::TRUMP",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}