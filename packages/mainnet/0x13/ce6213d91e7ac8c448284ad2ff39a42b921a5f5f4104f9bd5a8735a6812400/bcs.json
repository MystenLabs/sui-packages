{
  "dataType": "package",
  "id": "0x13ce6213d91e7ac8c448284ad2ff39a42b921a5f5f4104f9bd5a8735a6812400",
  "version": 1,
  "moduleMap": {
    "ccn": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ccn",
      "datatype_name": "CCN",
      "package": "0x13ce6213d91e7ac8c448284ad2ff39a42b921a5f5f4104f9bd5a8735a6812400"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}