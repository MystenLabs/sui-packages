{
  "dataType": "package",
  "id": "0x4b9e99098edec64856bc9bbcd5a8156a8f0a829360d846b7e82e3e62d3549be9",
  "version": 1,
  "moduleMap": {
    "sbot": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sbot",
      "datatype_name": "SBOT",
      "package": "0x4b9e99098edec64856bc9bbcd5a8156a8f0a829360d846b7e82e3e62d3549be9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}