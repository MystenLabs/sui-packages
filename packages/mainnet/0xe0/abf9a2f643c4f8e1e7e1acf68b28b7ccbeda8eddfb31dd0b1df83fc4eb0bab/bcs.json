{
  "dataType": "package",
  "id": "0xe0abf9a2f643c4f8e1e7e1acf68b28b7ccbeda8eddfb31dd0b1df83fc4eb0bab",
  "version": 1,
  "moduleMap": {
    "mao": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mao",
      "datatype_name": "MAO",
      "package": "0xe0abf9a2f643c4f8e1e7e1acf68b28b7ccbeda8eddfb31dd0b1df83fc4eb0bab"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "mao": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe0abf9a2f643c4f8e1e7e1acf68b28b7ccbeda8eddfb31dd0b1df83fc4eb0bab::mao::MAO",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}