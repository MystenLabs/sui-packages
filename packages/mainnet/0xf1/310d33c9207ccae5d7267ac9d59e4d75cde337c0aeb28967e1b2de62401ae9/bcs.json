{
  "dataType": "package",
  "id": "0xf1310d33c9207ccae5d7267ac9d59e4d75cde337c0aeb28967e1b2de62401ae9",
  "version": 1,
  "moduleMap": {
    "mind": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mind",
      "datatype_name": "MIND",
      "package": "0xf1310d33c9207ccae5d7267ac9d59e4d75cde337c0aeb28967e1b2de62401ae9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 19
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 43
    }
  },
  "functionMap": {
    "mind": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xf1310d33c9207ccae5d7267ac9d59e4d75cde337c0aeb28967e1b2de62401ae9::mind::MIND",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}