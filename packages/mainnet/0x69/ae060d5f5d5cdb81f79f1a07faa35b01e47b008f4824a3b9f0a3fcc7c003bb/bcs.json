{
  "dataType": "package",
  "id": "0x69ae060d5f5d5cdb81f79f1a07faa35b01e47b008f4824a3b9f0a3fcc7c003bb",
  "version": 1,
  "moduleMap": {
    "mochi": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFjB8QB1wEImwNgBvsDyEMKw0cFDMhHNgALAQ0CBgISAhMCFAABAgABAgcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAJAAEAAREFBgEAAgcICQECAgoMAQEAAw4FAQEMAw8OAQEMBBAKCwAFDAMEAAEEAgcDBwUNBA8CCAAHCAQAAgsCAQgACwMBCAABCgIBCAUBCQABCwEBCQABCAAHCQACCgIKAgoCCwEBCAUHCAQCCwMBCQALAgEJAAEGCAQBBQQHCwMBCQADBQcIBAELAwEIAAIJAAUBCwIBCAAMQ29pbk1ldGFkYXRhBU1PQ0hJBk9wdGlvbgtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQRbWludF9hbmRfdHJhbnNmZXIFbW9jaGkVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBm9wdGlvbhNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIEc29tZQh0cmFuc2Zlcgp0eF9jb250ZXh0A3VybGmuBg1fXVzbgfefGgf6o1sB5HsAj0gko7nwo/zHwAO7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIBBgoCBgVNb2NoaQoCDg1Nb2NoaSB0aGUgUGV0CgLuBOwETW9jaGkgdGhlIFBldCBpcyBhIGRpZ2l0YWwgdG9rZW4gcmVwcmVzZW50aW5nIGFuIGFkb3JhYmxlIHZpcnR1YWwgcGV0IHdpdGggY3V0ZSBhbmQgbG92YWJsZSBjaGFyYWN0ZXJpc3RpY3MuIFRoaXMgdG9rZW4gaXMgZGVzaWduZWQgdG8gcHJvdmlkZSB1c2VycyB3aXRoIGFuIGVuZ2FnaW5nIGFuZCBpbnRlcmFjdGl2ZSBleHBlcmllbmNlIHdpdGhpbiB2aXJ0dWFsIHdvcmxkcyBvciBibG9ja2NoYWluLWJhc2VkIHBsYXRmb3Jtcy4gTW9jaGkgY2FuIGdyb3cgYW5kIGV2b2x2ZSBiYXNlZCBvbiB0aGUgY2FyZSBhbmQgYXR0ZW50aW9uIGl0IHJlY2VpdmVzIGZyb20gaXRzIG93bmVyLiBBZGRpdGlvbmFsbHksIHRoZSB0b2tlbiBjYW4gYmUgY3VzdG9taXplZCB3aXRoIHZhcmlvdXMgYWNjZXNzb3JpZXMsIHNraW5zLCBvciBzcGVjaWFsIGl0ZW1zIHRoYXQgY2FuIGJlIGVhcm5lZCB0aHJvdWdoIGFjdGl2aXRpZXMgb3IgcHVyY2hhc2VkIHdpdGhpbiB0aGUgTW9jaGkgZWNvc3lzdGVtLiBBcyBhbiBORlQsIE1vY2hpIGlzIGFsc28gdHJhZGFibGUgaW4gZGlnaXRhbCBhc3NldCBtYXJrZXRwbGFjZXMsIG9mZmVyaW5nIGNvbGxlY3RpYmxlIHZhbHVlIGFuZCBpbnZlc3RtZW50IHBvdGVudGlhbC4KAok+hz5kYXRhOmltYWdlL2pwZWc7YmFzZTY0LC85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0NFQUFrR0J4SVFFQlVRRUJBVkZSVVZGaGNYR0JJWEV4WVdGeGNXR0JVWEdSZ1lGaGdhSENnZ0dob2xIUlVWSWpFaEpTa3JMeTR1R0I4L09ETXNOeWd0TGlzQkNnb0tEZzBPR3hBUUd6RWpIeVUzTmkwdEx6QXRMekF0THkwdExpMHRMUzB0TFNzdExUQXRMUzByTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExmL0FBQkVJQU9FQTRRTUJJZ0FDRVFFREVRSC94QUFjQUFFQUFnTUJBUUVBQUFBQUFBQUFBQUFBQmdjREJBVUJBZ2oveEFCSUVBQUJBd0lEQkFZR0JRa0ZDUUFBQUFBQkFBSURCQkVGRWlFR01VRlJCeE1pWVhHQkZESkNVcEdoTTJKeWdxSVZGaU5Ea3FPeHdkRWtOSE95d2hkVFZHT0RrN1BEOFAvRUFCa0JBUUVCQVFFQkFBQUFBQUFBQUFBQUFBQURBZ0VFQmYvRUFDY1JBQUlDQVFRQUJnTUJBUUFBQUFBQUFBQUJBaEVERWlFeFFRUVRJakpSWVhHQmtWTEIvOW9BREFNQkFBSVJBeEVBUHdDOFVSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkVRQkVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFUkFFUkVBUkZxNGxpVU5Nd3lUeXNpWVBhZTROSGhydlBjZ05wRlhHTDlMbE0xM1YwY0V0Uzg2TnNDeHBQZGNGNThtclNialcwVlpyQlJzcG1IYzU3QTF3OGV0Y1QrQlk4eGRHL0xmZXhhaUtyQnNoajAvd0RlTVdETDhJNUpCOG1NWUY1L3N1clhldmpjeC83N3Y0enBxZndkMFIvMFdvaXFzOUZ0WVBVeHVZZVV3L2hPdmZ6S3h1SDZERjgvZEpMTi9Cd2tDYW44RFRIL0FFV21pcXcxbTAxTDY4VVZTMGJ5R3NjZndGanZ3bGZkTDB0OVU4UjRoaDgwRGp4Ri9NNUpBMXdIaG1UekYyUExmVzVhQ0xpWUh0WlJWdWxQVXNjNy9kazVaUDJIV2Q1MlhiV2swekRWQkVSZE9CRVJBRVJFQVJFUUJFUkFFUkVBUkZYbTEzU0wxY3ZvV0d4K2tWSkpZU0FYTVk3Y1FBUFhjT080TjF1ZENGeHRMazdHTGZCTzY2dWlnWVpKcFdSc0c5NzNCclI1bFFmR09scWhoT1dFU1ZEcjI3RGNyTC9hZllueUJYTHc3bzJxS3g0cWNacTN2ZHZFTEhBNWI4QzYyVm81dGpBOFZNY093N0Q2RFNuaGpZN2NTMXVhUS9hZWJ1UG1WTnlmNEtSZ3JwYnY2SWFOdGNicS93QzU0VjFiZmVrWTgvQnp6RzAvQXI3T0hiVFQ2dXFZWVFmWnpSaTM3RVRqODFOcE1ldWJSeGtuaGY4QW9Ga2drbmtOakl4bjFXZ09kNWk1c3MybjIyVmVPVWVVbCtTQy9tUGpML3BNWmMzN0VzLzhzcSs2SG9uZEpLSk1ScjVha04wYTNNKzl1SUwzdWM0RHViYnhWazA4SmJ2ZTUxL2V0OHJCWmx0WTBSZVNYUnpzSXdPbXBHNWFhQ09JY1Mxb0RqOXAyOTNtVjBVUlVxaVlSRVFCRVJBRmdxNlNPWnBaTEd4N1R2WTlvYzArSU9pem9nSUZqM1JUUXo5cUROVFAzZ3g2c3Z3SmpPNjMxUzFjRjFUamVDL1NEMDJsYjdWM1BjMXZlNzZSbmk0UGFPYXR0ZVdXSEJkYkcxa2ZlNUdObE51cVRFUUd4dnlTMnYxRWxnL3ZMZGJQSGVQT3lsQ2cyMTNSdFRWWk0xUC9BR2Fvdm1EMkN6SE9Hb0wyamNiKzAyeHZ6M0xoWUx0dlY0Yk1LSEdtT3Q3RlVCbTAzQXVQNnh2MWgyaHBtQkthbXZjZDBwN3gvaGF5S0Y0LzBtNGZTaXpaUFNIKzdDV3VIbkpmS1BpVDNLT3Qyd3h1dS91T0hDSmg5dVJwT25NUGtMR255YVVjMGNXTnZjdFpGVmcyWjJnbitueE5zUVBCanlDUEtPTm8rYXdiSXkxV0g0MytUNnFya25iTkZjRjc1SEF1eWw3WE5EM0hMNmtyZE4vd1RYOG83bzI1TGFSRVd5WVJFUUJFUkFGVG1IRWJQNHc5a3dIb3RWZkpNUnF4cGZjZHJnR2s1WERsbGR3VnhyaDdZN054NGpUT2drMGNPMUhKYTVqZUFiTzd4cllqaUNWaWF2ZzNDVmJQZ3k0N0c5ekE1ampsSHJOSEVjOU40VWRBWEk2UE5wcGFhWTRQaVBaa2pPV0dSeDBjUFpqekhlQ05XTzRqVGVCZWE0aGd1WjJhSWdYT29PN3hIOUZESkRYNmtlM3crZFl2UkwrbWpoRk9IdXRaeDU2NVdnZDVHcFBjcExERTFnczBBRGtCWmZOSlROaWFHdCtQTTh5c3l0amhwUjVjK1h6SlgwRVJGUWlFUkVBUkVRQkVSQUVSRUFSRVFCYzNIOERncm9YUVZEQTVwM0hUTXgxdEhNUEJ3NS94QzZTSlZnZ0d4ZlIrM0RacHBwbnh6TjA2cHpvaG5qQUxpNGtuY1NDMGRuZmw4bEphakhtalNOcFBlZEIvVmRwY1hGcVlDN2hBSGZXYVNDUEVBYXFVMDRyMG5veE9NcCt0V2FrZU1TdWUwRXRBTGdDQU9CUGVvbHR3T3IyaHc2VWIzQ05uNzE3Zi9hdTNENncrMFA0cmg5SW96WTNoalJ3ZkdmTDBnSC9TVkdFbTR1L285SGlNY1lTV2xWc3kwMFFJdldmUENJaUFJaUlBaUlnSUgwdVlKVHkwVDZxUTlYTEFMeHlEZTRrMmJFZVlMaUxjaWI4d2NQUTdSVCtqUzFsUkxJODFMd1doNzNPN0xMalAydHhjU2ZKclZ6dWxXZDlaV1VtRVJFak80U1NFY0w1bWc5K1ZnbGRiN0tzMmpwbVF4c2lqYUdzWTFyR3RHNE5hTEFEeUNtbGNyS3QxQkl6SWlLaElJdmt1QTRyMEZBZW90WEU4UWlwb25UenZESTJDN25IaC9VazZBRGVTb0MzcGlvdXN5bUNvREwyNjNMR1JibmxEODF2bjNMTGtseWFVVytDeUVXdlFWc2M4YlpvWGg3SGdPYTlwdUNEeFd3dEdRaUlnQ0lpQUlpSUFpSWdDdzFNV2RwYmNnOEhBMklQQXJNaUFpQmE3cm10ZjYyZG9PbS90RDRxTjQvZWJhcWtZTlJIRTBudUxSUEovTmlzU3BvTTB6SlJiczcrKzI3NXF1OWtENlZ0SFhWTjd0aGE2TWR4QlpFUGxGSjhWNTFEVHQ5bnJ5WlZOSnJwRnBvaUwwSGtDSWlBSWlJQXZDVjZvNzBnNGlhYkRLbVVHenVyTEduazZRaU5wOGk4SHlYRzZWblVyZEVJMkJKeERHNnZFdjFiTXpHSGZlOW1NSVBEOUd5NS94RmJLZy9SQmhvaHcxanJXTXBNcDhIR3pmd05ZcHdzNCtMTjVmZFFXQ3JrSUduRloxOFNSaHdzVnA4R0Z6dWN4ZmNjaGJ1K0N5UHBuRGRxaktaeDM2S1ZNOUxsRm9nblRnWG1nZ0xiNU92Ym50L2h5WmMzZGY1MlZLTDlWMTJIeHp4T2dtWUh4dUdWekhhZ2ovd0M0OEZCbTlFRkFKTTVrcUN5LzBQV015K0dZTXoyKzlmdlhKNDNKMmpPUEtvcW1mZlFrSlB5YTdQNnBuazZ2N0dWbWEzZDFuV2VkMVlDdzBkS3lHTnNVVEF4akFHdFkwV0RRTndBWFAya3daMVhFMXJLbVduZXg0ZXlXSjFpSEM0czl1NTdOVGRwVlVxVkVXN2RuUnFhaGtiUytSN1dORzl6bkJyUjRrNkJaQVZTbFBCSmlHWjlmVXlWQWpsbGpaR2JSeGRoeFpueU1BR1kyTy9kZml1eHN6dFRWMGVlZ05OTFdpRnJURytLM1dOamRjTVpNRHBwWWpNT0EzRlRqbVRsUjZKK0VuREdwL0phaStaWkEwRnppQUFDU1NiQUFieVR5V3JnOHNyNEkzMUVZamxjd0Y4YlhaZ3h4R3JiOGJMVDJ2bzVKNkNwaGk5ZVNDUnJSemNXRUFlZTd6VmIyUE11U0FZcjB5TmJLVzAxSjFrWVAwajVER1hhNzJ0RFRZY3I2OXdVMjJOMnRoeE9FeVJBc2V3Z1NST3RtYVNMZzNHOXAxc2U0N2lMTDgyRVcwSUlJMElJc1FSdkJCM0VjbGFIUVhSeWRkVVQySWlER3gzNE9mbXphY3kwRDhZVUlaSk9WTTlHVEZGUnRGeUl0SjlXZlpIeFJ0V2VJK0N0cVJIeTVVYnFMNWplQ0xoZlMwWU5QR0pwSTRKWHd0RHBHeHZMR25jWGhwTFFmRTJWZTlCVWJYVTlUTVhYa2ZPQTQ4YkNOcmdUNG1SNVZtUEZ4WlZaMGFuMFhHTVFvZHpYWnBHdDVCc2wyMis3TzM0S2N2Y2lrZll5MVVSRlFtRVJFQVJFUUJWLzAyejVjTURmZm5qYWZKcjMvQU1XQldBcS82YllNMkdCM3VUeHVQbUhzL2k4TEUvYXplUDNJazJ5RUFqbzRJeHViREMzNFJ0SDhsMmx3ZGtxa1NVdE84Ym53Uk8rTWJUL1ZkNWRod0orNElpTFJnSWlJQWlJZ0M4SzlSQVUzc3ByVGs4NVp6KytlcE4wV3c1MzExVVI2OVFJV25teUJnR25kZHp2Z29uZ2s0aHBKbm45VkpVay9kbGViS3hlamlnTUdGMHpYWHpQWjFycjc4MHBNaHYzak5ieVhrd3g5Ylo5YnhzNndRaVNWRVJlcytTY0RFOWpLQ3BrNjJha2pjODZsK3JTNC9XeWtadk82NjFKUXh3eGlLR05zYkdpd1l4b2EwRHVBV3lpNVNPMnpsdllRYkZmSzZqbWc3d3ZnVTdlUVdOQlpaZmt4MElOaXRsZUFMMWJTcEVXN2RncXFaajFHMWNkdjE4V3ZuRkkwZk9CcXRaVlR0ZjJkb3NQZU9PUnY3NlVmNjFqSjBVeDlscklpS2hJSWlJQWlJZ0M0ZTIyRm1ydytvcDJpN25Sa3NIL01aMjJmaWFGM0VYR3JPcDF1VngwVFl0MTFBMk8vYnAzRmhISEtlMHcrRmpsKzZWWXNiN2k0VlA0MUc3QXNXOUphMG1qcXljNGFDY3JpY3p4Ym0wM2UwY1d1Y0J1Vm5VRlkxeld2WTRPWThCelhOTndRUmNPQjRpeWxCMXN5MlJhbGFPb2k4YTYrb1hxc1FDSWlBSWlJQWlJZ0tMcTZVdnFKOEtIcno0azl0cjJJZ2U0VFBkNFpMcThvMkJvQUFzQUxBY2dGb053U25GU2F3UXM2OHR5R1czYXk4dVY3QUMrK3dBM0xvcWNJYWJMWmNyeVZmU29JaUtoRUlpSUFpSWdDSWlBOGNWVSsxWnpiUTRlemlCRzc5N0tmOUN0T3FmWnZqb3F0YVBTTnFtVzE5SGgxOG9uSC9OVU5Vc25LUmJHdG15MkVSRlVpRVJFQVJFUUJFUkFhR09ZUkRXUU9wNTJabU9IbUR3YzA4SERnVlU3WkszWjJUcTVXdXFLRnp1eThleVNlSEJqK2JEMlhIY1FicTUxaXFLZGtqU3lSclhOY0xPYTRBdElQQWc2RUxFb1diaFBUK0RoNEJ0QkJWTTZ5bWxhOXZ0TjNPYWVUMjcybGR5S2NPOGVTcm5IT2k3Sko2VGhWUTZtbEdvakxuQm5PelhqdE5CUEE1aDNBTGwvbmppV0hISmlsRTU3UnAxN0FHMzc4emJ4dVBkMlNzYW5Ia280eG53VytpZzJFOUk5Qk1CL2FSR2ZkbkhWMisrVGwrRGxMS1hFbVNETXh3Y1BlYTRPSHhDMnBwazNqa2pkUlkyek5PNHJJdDJZQ0xpMG0xZEZOSVlvNnVGendTTWdrYm11RFkyRjdueVhYWklEdUs1YU90TkgyaUl1bkFpSWdDSWlBSWlJQWlMVHFhamdQTXJqZEhVck1OWk9OU1RaclFTVHdBR3BLcjNvallhcXNyc1NjTkh2TWJEeEFjN3JDM3lhSVZzZEtXTzlUVGVpUmF6VlhZRFJxN3F5Y3J0T2JpY2dISE1lU2wyeEdCZWdVTVZPYlp3TTBoSEdSMnJ0ZUlHNGR6UW94OVVpMHZUQ3ZrN3lJaXVRQ0lpQUlpSUFpSWdDSWlBTDVjMEVXSXVEd1gwdVh0TmpMS0dsbHFYNmlOdHczM25uUmpSNHVJQzR3VlQwcndVbnBNZEZSVWNmcFQzTkwzUnR5bnQ2TVpadG1seHZtSkkwRnVkeHUwdlJJQTFwanJaSTVzb3p1YTBaTTNITGJLNjErWlh6MFdZUStlU1hGYW50U1NQZUl5ZUxpZjBqeHlIc0RrQTRLMnFlUEtPL2lvUmpyZG5wbExRcVJBZG05aXNRcGFsajVNVWRMQzIrYU54a2RtQkJBRm51SUd0amNjdTlTemEydk5OUVZNN2ZXWkRJNXYyc3B5L095NjZnbTNtUDA5UlJZaFJ4U1htZ2lCa1psY0xBT2JleElzNjJnTnIydXEwb3JZbGJtMVpEY0cyWHc4NFpCTFdsc1RwTlJNWk9yTjNFNUdpL1pQWkEzZzhWdlNPeERCaDFqSmZUS050c3pIazlaRzI5dEhjQnUxRng5VWIxclVPTjRaTFFVMU5YdGMzcTJSMkVrVW9hNXpHNWN6SHNHclRyeDFCMUM2T0o0aCtWV2lqbzQ1T29jNW5YVlRvM1JzRWJYQnhaRm1BTG5Hd0c3VDRrYjBRbEhibnF1ZjJlRlpzME1qY3JxM2Q4VjlFMzJaMm1ocm9STEMrNDNPYWRIeHV0NnJ4dzhkeDRYWGZCdXFoMml3MStGempGS0Z0bzdnVkZPTkd1WVRxNEFiaGY5azJPNHVDc3JBc1VqbmhaTkc2OGNqUTlwM2FjUWVSR3R4d0lLeHZHV21SNjR5aGxocmh3ZFZGQmNUMm1ueENsYy9BOHNqNHBza2drYmx1ektUZVBNUTAzT1hlZDErS2ozNTc0cFRhVm1GUFBOOGJaV04rTm50K2E0NTBiampiTGJSVlpTOUx0SzQya2lxR0hqNmpnUGc4SDVMcE02VGNPTytva0hqRE4vSnBYUE5SM3laRmdGMWxpZlV0SEcvZ29JN3BId3ovaVhIL29UZnpZdWZXOUsxQ3pTTmswaDRXWTFnK0xuQS9KY2VVNnNMTEJscUM3dUNqVzF1MWtHSFIza0lkS1IySVFlMDdrWGU2ejZ4OHJuUlJiOHY0emlQWm9hTDBkaC9YUEJCdHpFa2dBdDlscEs3Mnl2Um5GQko2VFhTZWxWRnc2N3J1amE3M3UxcTl3OTUzSVdBV2Q1Y0d2VEEwT2ozWm1lcHFEakdJajlJN1dHSWkyVVc3TDhwOVVBYU5iNW5XeFZub2l0R0tpaU1wT1RzSWlMUmtJaUlBaUlnQ0lpQUlpSUFxajZYSzk5WFdVMkV3SFhNMTcrV2Q5MnR2cnVZek04ams0Y2xiRlJNMWpYUGNiTmFDNG5rQUxrL0JVOTBheHVyc1Fxc1VrQjlad1pmZzZUY1BGa1FhMzd5bGxlMUZjUzN2NExRd1BEbVFSTWlqRm1STkRHandGcm52OEE1bGRWWTRXMkFDNW0xV1BOdyttZFZQamZJMXBhQzFnRiswNE51YmtBRFhldHBVakRia3pycXMra1RZR1dhUjliUU90SzloYk5EZkwxclMzS1MwN3JsdGdXblEyQjBJMW5tQll6RFd3Tm5wM2h6SGZGcDR0ZU9EaHlYUVJwU1FpM0ZsTzdCN1VSUlJ0dytyelF5eEV0SFdqSzAzY1NHbStyWEROYXh0ZlN4MVVvMm54S1NsaVpPMEF4c2xaMTRJSkloY2Nybk4xMExTV253QlhYMncyT3BzU2p0SzNMS0JaazdRTTdlUVB2TStxZkt4MVVFMkxxcEM2cHdhdTdaaWE1b3ViNW90R09iYzcyMmMwdE8renU0S21QSTE2SCttZUh4UGg0MzV5L2EvNmljU1J0ZTB0Y0E1cmdRUnZEbXVHbzhDQ3FsTlRWMHpwOENwZTMxazltT0RqbUViMjNjMEgyUVdscGNlRm44N2lXWWZqYnFURHFoa2h6VFVGNGRmYkdncDNudWNITStCVzkwUWJQWklEaU0zYW5xUzRoN3RTSXk3WFhtOXd6SHV5OGx6TzFQU3V6WGdJU3hhMitPdnY3L2hLTmk5bkdZZFN0cDJrT2Q2MGo3V3p5RUFFK0dnQUhJQmQ1ZUtxOXI5cktpc3JHWWJoVXhhNFAvU1ZETlFNcHNSZjNXNzNIaWJEbURodFJSN1ZGelpZdUtZYkZLMzlKRkcvdWV4cnJqekNxN3BNMk1pYkFheWtpYkdZaCtramphR3RNZkY0YUJZT2J2UE1YdnVDdDlyZExFMzcrYTV0VkNOV09GMnVCQkIzRnAwSVB6Q3hralp2Rkt0aUk3QllWaG1JVWJKemg5TjFnN0VyZXBZUUpHZ1gwTjdBZ2h3N25CVE9od1dtZytncG9ZdjhBRGlZei9LRlZXdzBwd3JHcGNQZVQxVStqQ2QxOVhRdXYzdExtSG02M0pYSXU0Mm1qT1JOTUlpS2hNSWlJQWlJZ0NJaUFJaUlBaUlnQ0lpQWh2U3ppZlVZWEtBYk9tdENQQjk4LzRHdldEb3V3dnFjUGd1TE9sdk83NzlpMi93QndNSGtvNzAxem1hZWlvV25WN3N4KzFJOXNVWi84aXN2RFlRd0JyUllOYUdnY2dCWWZJS0wzbVhXMk02Q3h6d3RlMHNlME9hNEVPYVFDQ0NMRUVIZUNGa1JXSUZZNGwwZTFORk1hckJhZ3hrK3RUUGQyU1BkYVNDSERrSDdybXpnc2NmU1hWMGZZeFRESkdrYjVZd1d0UGdIbklmSjZ0SmVGdDFqUlhCdlhmdVZsY3k5TXRBRzNiRlVFKzdsaUh6Nnl5ald4T0llbFl4VTFjMW9wSll6a2hOd1MxMlMxcmdYc3lOdmplNEZsY1F3K0VITUlZNys5a2JmNDJVZTIyMk1qeEFObFk3cWFtUDZPb2JjSFEzRFgyMUxiNmdqVUhkeEJMVW1wYzBabW96ZzRMYSt6UTJnd0ZsVkJPd05hMlNaalc5WmJVbU01bzh4M2tCM3lKVVcyYzZRWk1MZ0ZEWFVjcGREZHJITnlpN0w2QTVyQWdiZzVwSUl0NG5icE5yWnFKNHBjWWhkRzRhTnFtdHZISUI3UnR2OEFGdlBVTldEcENyR2VtWWN5VjRiRUpSTTU1dmxzSHM1ZHdQN1FWTXpqS091TDNSNVBDTExpeWVUTldudy93dWhXWTFpMk5mb3FlQTBsTTdSMGpzd0xtbmYyeUFYQzNzc0hjWFdVejJMMlNndytQTEVNempiUE00RE04amNQcXRIQm8rWjFYVm82aU9Sb2thNFBZNFhEMk9EbWtIaUNONDhGMVdXdHB1VUl4dDJ6NkU1VXFSOUxXcldhWDVMWlh4SzI0STdsVnEwU1RwbFRkTCtIT2EyREVJdEh4UGF3dUhEWFBFNC9aZUNQdnF6Tm44VGJWMHNOUzNkTEcxOXVSSTdUZkVHNDhseDlwTU1GWFNUVS9HU01odmM4YXNQazROUGtvNTBIWXBucEphVjIrQ1RNQnlaSmMyL2JiSjhWR0RxUmZJcmpmd1dXaUlybm5DSWlBSWlJQWlJZ0NJaUFJaUlBaUlnS2Z4biswN1V4dDNpQU1CN3VyaWRNUHh5Qld0UWpRK1A4bERNSzJNcUk4WG54R1NTSXNrRWdZMEY1ZU16bVpjMTJnQ3pXRWFFNzFONmFNdEJCNXFVSXU3WmFjbHBTUm1SRVZTSVJFUUJFUkFWajB5VlRYdm9hTjd3MXNrM1dTT2M0TmExamJNdTRuUUMwai8yVmgyajJ3dzB4bUZ3RlhmUVFzWm5CTzRXZWRBZTlwSlU2eDdaV2pybk5mVlFCN21BaHJzejJrQW05amxJdUw4MTVobXkxTFRHOEVFVVo5NXNiUTd6ZHZQeFdVNVJ1dXprOFdQSnBjbTl2Z3IvbzIyZHFvWm5WTHc2bWdlSFphTXZjNHV6V3lsNGR1dHpQYVBjTjlyMDdiTkFLOGpnYU9IbXNxNUNHa3BPZW9JaUxaZzVrb3M0K0tySFpNK2hiU1QwKzVrL1dXSEM3d0oyL0FCN1ZhMDFPUzY0c29Yam14ZFJMaXRQaUVFa1RSRjFXZHJpOE9JWTl4ZGxzMGpWanJhbmdvT0x1MFhVbHBway9SRVZ5QVJFUUJFUkFFUkVBUkVRQkVSQUVSRUI0dlVSQUVSRUFSRVFCRVJBRVJFQVJFUUJFUkFGNGlJRDFFUkFFUkVBUkVRQkVSQWYvMlE9PQMIAADBb/KGIwAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBCAEAAAAAAhkLAAcABwEHAgcDBwQRBzgACgE4AQwCDAMNAwcFCgEuEQYLATgCCwMHBjgDCwI4BAIA"
  },
  "typeOriginTable": [
    {
      "module_name": "mochi",
      "datatype_name": "MOCHI",
      "package": "0x69ae060d5f5d5cdb81f79f1a07faa35b01e47b008f4824a3b9f0a3fcc7c003bb"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "mochi": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x69ae060d5f5d5cdb81f79f1a07faa35b01e47b008f4824a3b9f0a3fcc7c003bb::mochi::MOCHI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}