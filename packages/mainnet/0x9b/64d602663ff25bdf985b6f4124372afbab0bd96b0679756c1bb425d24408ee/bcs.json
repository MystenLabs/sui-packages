{
  "dataType": "package",
  "id": "0x9b64d602663ff25bdf985b6f4124372afbab0bd96b0679756c1bb425d24408ee",
  "version": 1,
  "moduleMap": {
    "voting": ""
  },
  "typeOriginTable": [
    {
      "module_name": "voting",
      "datatype_name": "Votes",
      "package": "0x9b64d602663ff25bdf985b6f4124372afbab0bd96b0679756c1bb425d24408ee"
    },
    {
      "module_name": "voting",
      "datatype_name": "Project",
      "package": "0x9b64d602663ff25bdf985b6f4124372afbab0bd96b0679756c1bb425d24408ee"
    },
    {
      "module_name": "voting",
      "datatype_name": "AdminCap",
      "package": "0x9b64d602663ff25bdf985b6f4124372afbab0bd96b0679756c1bb425d24408ee"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 26
    }
  }
}