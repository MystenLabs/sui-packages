{
  "dataType": "package",
  "id": "0x9be11a77cee8ff85dc93566d7f12346701bd86058b5d6820b5d2e753f07f26a8",
  "version": 1,
  "moduleMap": {
    "doggos": ""
  },
  "typeOriginTable": [
    {
      "module_name": "doggos",
      "datatype_name": "DOGGOS",
      "package": "0x9be11a77cee8ff85dc93566d7f12346701bd86058b5d6820b5d2e753f07f26a8"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "doggos": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9be11a77cee8ff85dc93566d7f12346701bd86058b5d6820b5d2e753f07f26a8::doggos::DOGGOS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}