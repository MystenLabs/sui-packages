{
  "dataType": "package",
  "id": "0x8f0e23262280e631079f970bb8a424aa60dc87a32a7797d1f8ed76d1206c9334",
  "version": 1,
  "moduleMap": {
    "kek": ""
  },
  "typeOriginTable": [
    {
      "module_name": "kek",
      "datatype_name": "KEK",
      "package": "0x8f0e23262280e631079f970bb8a424aa60dc87a32a7797d1f8ed76d1206c9334"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "kek": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x8f0e23262280e631079f970bb8a424aa60dc87a32a7797d1f8ed76d1206c9334::kek::KEK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}