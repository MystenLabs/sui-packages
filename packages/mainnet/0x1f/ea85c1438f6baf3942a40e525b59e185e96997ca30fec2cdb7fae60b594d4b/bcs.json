{
  "dataType": "package",
  "id": "0x1fea85c1438f6baf3942a40e525b59e185e96997ca30fec2cdb7fae60b594d4b",
  "version": 1,
  "moduleMap": {
    "bone": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bone",
      "datatype_name": "BONE",
      "package": "0x1fea85c1438f6baf3942a40e525b59e185e96997ca30fec2cdb7fae60b594d4b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "bone": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1fea85c1438f6baf3942a40e525b59e185e96997ca30fec2cdb7fae60b594d4b::bone::BONE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}