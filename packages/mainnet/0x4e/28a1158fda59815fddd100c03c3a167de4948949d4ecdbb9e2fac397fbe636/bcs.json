{
  "dataType": "package",
  "id": "0x4e28a1158fda59815fddd100c03c3a167de4948949d4ecdbb9e2fac397fbe636",
  "version": 1,
  "moduleMap": {
    "dogat": ""
  },
  "typeOriginTable": [
    {
      "module_name": "dogat",
      "datatype_name": "DOGAT",
      "package": "0x4e28a1158fda59815fddd100c03c3a167de4948949d4ecdbb9e2fac397fbe636"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}