{
  "dataType": "package",
  "id": "0x4ec732428d4e6a912ec576b457c119e71d5ee2f0f84de00caac40da1e21c8163",
  "version": 1,
  "moduleMap": {
    "flow": ""
  },
  "typeOriginTable": [
    {
      "module_name": "flow",
      "datatype_name": "FLOW",
      "package": "0x4ec732428d4e6a912ec576b457c119e71d5ee2f0f84de00caac40da1e21c8163"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 18
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 40
    }
  },
  "functionMap": {
    "flow": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x4ec732428d4e6a912ec576b457c119e71d5ee2f0f84de00caac40da1e21c8163::flow::FLOW",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}