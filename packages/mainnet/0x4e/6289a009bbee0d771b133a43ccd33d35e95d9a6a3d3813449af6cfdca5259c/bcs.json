{
  "dataType": "package",
  "id": "0x4e6289a009bbee0d771b133a43ccd33d35e95d9a6a3d3813449af6cfdca5259c",
  "version": 1,
  "moduleMap": {
    "pox": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pox",
      "datatype_name": "POX",
      "package": "0x4e6289a009bbee0d771b133a43ccd33d35e95d9a6a3d3813449af6cfdca5259c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "pox": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x4e6289a009bbee0d771b133a43ccd33d35e95d9a6a3d3813449af6cfdca5259c::pox::POX",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}