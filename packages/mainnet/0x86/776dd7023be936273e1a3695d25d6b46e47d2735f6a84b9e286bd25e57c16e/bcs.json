{
  "dataType": "package",
  "id": "0x86776dd7023be936273e1a3695d25d6b46e47d2735f6a84b9e286bd25e57c16e",
  "version": 1,
  "moduleMap": {
    "move": ""
  },
  "typeOriginTable": [
    {
      "module_name": "move",
      "datatype_name": "MOVE",
      "package": "0x86776dd7023be936273e1a3695d25d6b46e47d2735f6a84b9e286bd25e57c16e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 5
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 20
    }
  },
  "functionMap": {
    "move": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x86776dd7023be936273e1a3695d25d6b46e47d2735f6a84b9e286bd25e57c16e::move::MOVE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}