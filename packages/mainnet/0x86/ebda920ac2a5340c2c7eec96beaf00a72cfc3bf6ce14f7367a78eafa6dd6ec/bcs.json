{
  "dataType": "package",
  "id": "0x86ebda920ac2a5340c2c7eec96beaf00a72cfc3bf6ce14f7367a78eafa6dd6ec",
  "version": 1,
  "moduleMap": {
    "trp": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trp",
      "datatype_name": "TRP",
      "package": "0x86ebda920ac2a5340c2c7eec96beaf00a72cfc3bf6ce14f7367a78eafa6dd6ec"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "trp": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x86ebda920ac2a5340c2c7eec96beaf00a72cfc3bf6ce14f7367a78eafa6dd6ec::trp::TRP",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}