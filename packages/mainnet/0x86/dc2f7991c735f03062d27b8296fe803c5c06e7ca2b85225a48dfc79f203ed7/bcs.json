{
  "dataType": "package",
  "id": "0x86dc2f7991c735f03062d27b8296fe803c5c06e7ca2b85225a48dfc79f203ed7",
  "version": 1,
  "moduleMap": {
    "brix": ""
  },
  "typeOriginTable": [
    {
      "module_name": "brix",
      "datatype_name": "BRIX",
      "package": "0x86dc2f7991c735f03062d27b8296fe803c5c06e7ca2b85225a48dfc79f203ed7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 14
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 31
    }
  },
  "functionMap": {
    "brix": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x86dc2f7991c735f03062d27b8296fe803c5c06e7ca2b85225a48dfc79f203ed7::brix::BRIX",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}