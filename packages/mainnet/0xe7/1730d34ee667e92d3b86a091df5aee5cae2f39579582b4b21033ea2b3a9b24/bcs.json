{
  "dataType": "package",
  "id": "0xe71730d34ee667e92d3b86a091df5aee5cae2f39579582b4b21033ea2b3a9b24",
  "version": 1,
  "moduleMap": {
    "pixeldog": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pixeldog",
      "datatype_name": "PIXELDOG",
      "package": "0xe71730d34ee667e92d3b86a091df5aee5cae2f39579582b4b21033ea2b3a9b24"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "pixeldog": {
      "addToDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0xe71730d34ee667e92d3b86a091df5aee5cae2f39579582b4b21033ea2b3a9b24::pixeldog::PIXELDOG>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe71730d34ee667e92d3b86a091df5aee5cae2f39579582b4b21033ea2b3a9b24::pixeldog::PIXELDOG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "removeFromDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0xe71730d34ee667e92d3b86a091df5aee5cae2f39579582b4b21033ea2b3a9b24::pixeldog::PIXELDOG>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}