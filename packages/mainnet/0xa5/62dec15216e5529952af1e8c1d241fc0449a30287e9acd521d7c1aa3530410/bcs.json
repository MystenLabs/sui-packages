{
  "dataType": "package",
  "id": "0xa562dec15216e5529952af1e8c1d241fc0449a30287e9acd521d7c1aa3530410",
  "version": 1,
  "moduleMap": {
    "peter": ""
  },
  "typeOriginTable": [
    {
      "module_name": "peter",
      "datatype_name": "PETER",
      "package": "0xa562dec15216e5529952af1e8c1d241fc0449a30287e9acd521d7c1aa3530410"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "peter": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xa562dec15216e5529952af1e8c1d241fc0449a30287e9acd521d7c1aa3530410::peter::PETER",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}