module 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::update_leverage {
    struct LeverageUpdatedEvent has copy, drop, store {
        vault_id: 0x2::object::ID,
        total_deposited_a: u64,
        total_borrowed_b: u64,
        aum_in_a: u64,
        total_lp_supply: u64,
        new_leverage: u64,
    }

    fun calc_update_leverage_params<T0, T1, T2>(arg0: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>, arg1: u64, arg2: &0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T0>, arg3: &0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T1>, arg4: &0x7903ed759a2e2749ecdb64a8f100b0a547185f2ef7ea286048aa1f174c8a8b9a::oracle::KriyaOracle, arg5: &0xa0f0687f5122e80366716e6594d9a5aae2015b24003d9bcb6b4576af357635b2::registry::CoinDecimalsRegistry, arg6: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::storage::Storage, arg7: &0x2::clock::Clock) : (u64, bool) {
        assert!(arg1 >= 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::leverage_scaling(), 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::error::invalid_leverage());
        let (v0, _, _) = 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::utils::calc_aum<T0, T1, T2>(arg0, arg2, arg3, arg4, arg5, arg6, arg7);
        let v3 = 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::utils::get_cur_leverage<T0, T1, T2>(arg0, arg2, arg3, arg4, arg5, arg6, arg7);
        assert!(v3 != arg1, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::error::invalid_leverage());
        assert!(0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::leverage<T0, T1, T2>(arg0) != arg1, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::error::invalid_leverage());
        if (arg1 > v3) {
            (((((arg1 - v3) as u256) * (v0 as u256) / (0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::leverage_scaling() as u256)) as u64), true)
        } else {
            (((((arg1 - v3) as u256) * (v0 as u256) / (0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::leverage_scaling() as u256)) as u64), false)
        }
    }

    public fun get_update_leverage_receipt<T0, T1, T2>(arg0: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::VaultCap, arg1: &mut 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>, arg2: u64, arg3: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::storage::Storage, arg4: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T0>, arg5: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T1>, arg6: &0x7903ed759a2e2749ecdb64a8f100b0a547185f2ef7ea286048aa1f174c8a8b9a::oracle::KriyaOracle, arg7: &0xa0f0687f5122e80366716e6594d9a5aae2015b24003d9bcb6b4576af357635b2::registry::CoinDecimalsRegistry, arg8: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::VaultAcl, arg9: &0x4643a9779fe25d1f13143071f35f6688a8e3ecd24d798f1560dc61dc5baee197::acl::AggregatorAcl, arg10: &0x2::clock::Clock, arg11: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::version::Version, arg12: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::version::assert_current_version(arg11);
        0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        let v0 = 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::issue<0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), 0x1::option::some<0x2::object::ID>(0x4643a9779fe25d1f13143071f35f6688a8e3ecd24d798f1560dc61dc5baee197::acl::access_id(arg9)), arg12);
        let (v1, v2) = calc_update_leverage_params<T0, T1, T2>(arg1, arg2, arg4, arg5, arg6, arg7, arg3, arg10);
        let (v3, v4) = 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::slippage<T0, T1, T2>(arg1);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u128, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"slippage_up", v3);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u128, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"slippage_down", v4);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, bool, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"is_deposit", v2);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::object::ID, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"pool_id", 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::pool_id<T0, T1, T2>(arg1));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"new_leverage", arg2);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u8, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"flow_id", 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::utils::update_leverage_flow_id());
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::object::ID, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"vault_id", 0x2::object::id<0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>>(arg1));
        if (v2) {
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x1::type_name::TypeName, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"input_type", 0x1::type_name::get<T1>());
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, bool, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"fix_input", false);
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"amount", v1);
        } else {
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x1::type_name::TypeName, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"input_type", 0x1::type_name::get<T0>());
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, bool, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"fix_input", true);
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(&mut v0, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg8), b"amount", v1);
        };
        v0
    }

    public fun process_update_leverage_receipt<T0, T1, T2>(arg0: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::VaultCap, arg1: &mut 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>, arg2: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::VaultAcl, arg3: &mut 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt, arg4: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::storage::Storage, arg5: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T0>, arg6: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T1>, arg7: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::incentive::Incentive, arg8: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::incentive_v2::Incentive, arg9: &0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg10: &0x7903ed759a2e2749ecdb64a8f100b0a547185f2ef7ea286048aa1f174c8a8b9a::oracle::KriyaOracle, arg11: &0xa0f0687f5122e80366716e6594d9a5aae2015b24003d9bcb6b4576af357635b2::registry::CoinDecimalsRegistry, arg12: &0x2::clock::Clock, arg13: &0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::version::Version, arg14: &mut 0x2::tx_context::TxContext) {
        0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::version::assert_current_version(arg13);
        0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        let v0 = 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg2);
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"flow_id") == 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::utils::update_leverage_flow_id(), 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::error::invalid_flow_id());
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::object::ID, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"vault_id") == 0x2::object::id<0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>>(arg1), 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::error::invalid_vault());
        let v1 = 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg2), b"new_leverage");
        if (0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, bool, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg2), b"is_deposit")) {
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::balance::Balance<T1>, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg2), b"funds", 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::deposit<T0, T1, T2>(arg1, 0x2::coin::from_balance<T0>(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T0>, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"funds"), arg14), 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"repay_amount"), arg4, arg5, arg6, arg7, arg8, arg9, arg12));
        } else {
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::balance::Balance<T0>, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::access(arg2), b"funds", 0x2::coin::into_balance<T0>(0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::withdraw<T0, T1, T2>(arg1, 0x2::coin::from_balance<T1>(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T1>, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"funds"), arg14), 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u64, 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault_acl::Access>(arg3, v0, b"repay_amount"), arg4, arg5, arg6, arg7, arg8, arg9, arg12, arg14)));
        };
        0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::update_leverage<T0, T1, T2>(arg1, v1);
        let (v2, v3, v4) = 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::utils::calc_aum<T0, T1, T2>(arg1, arg5, arg6, arg10, arg11, arg4, arg12);
        let v5 = LeverageUpdatedEvent{
            vault_id          : 0x2::object::id<0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::Vault<T0, T1, T2>>(arg1),
            total_deposited_a : v3,
            total_borrowed_b  : v4,
            aum_in_a          : v2,
            total_lp_supply   : 0xa515122dd351f8acf9e4a307fc713e7c21b076d0192c49d3674684a583354a85::vault::total_vt_supply<T0, T1, T2>(arg1),
            new_leverage      : v1,
        };
        0x2::event::emit<LeverageUpdatedEvent>(v5);
    }

    // decompiled from Move bytecode v6
}

