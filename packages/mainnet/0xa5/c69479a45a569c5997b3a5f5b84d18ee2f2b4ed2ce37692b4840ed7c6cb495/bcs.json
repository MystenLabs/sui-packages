{
  "dataType": "package",
  "id": "0xa5c69479a45a569c5997b3a5f5b84d18ee2f2b4ed2ce37692b4840ed7c6cb495",
  "version": 1,
  "moduleMap": {
    "bitno": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bitno",
      "datatype_name": "BITNO",
      "package": "0xa5c69479a45a569c5997b3a5f5b84d18ee2f2b4ed2ce37692b4840ed7c6cb495"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 6
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 23
    }
  },
  "functionMap": {
    "bitno": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xa5c69479a45a569c5997b3a5f5b84d18ee2f2b4ed2ce37692b4840ed7c6cb495::bitno::BITNO",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}