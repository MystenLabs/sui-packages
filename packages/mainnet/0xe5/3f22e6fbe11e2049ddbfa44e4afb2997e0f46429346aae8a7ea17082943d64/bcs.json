{
  "dataType": "package",
  "id": "0xe53f22e6fbe11e2049ddbfa44e4afb2997e0f46429346aae8a7ea17082943d64",
  "version": 1,
  "moduleMap": {
    "groonch": ""
  },
  "typeOriginTable": [
    {
      "module_name": "groonch",
      "datatype_name": "GROONCH",
      "package": "0xe53f22e6fbe11e2049ddbfa44e4afb2997e0f46429346aae8a7ea17082943d64"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "groonch": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe53f22e6fbe11e2049ddbfa44e4afb2997e0f46429346aae8a7ea17082943d64::groonch::GROONCH",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}