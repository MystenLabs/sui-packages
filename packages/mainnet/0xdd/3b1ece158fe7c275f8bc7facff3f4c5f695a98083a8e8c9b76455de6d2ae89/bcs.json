{
  "dataType": "package",
  "id": "0xdd3b1ece158fe7c275f8bc7facff3f4c5f695a98083a8e8c9b76455de6d2ae89",
  "version": 1,
  "moduleMap": {
    "aorun": ""
  },
  "typeOriginTable": [
    {
      "module_name": "aorun",
      "datatype_name": "AORUN",
      "package": "0xdd3b1ece158fe7c275f8bc7facff3f4c5f695a98083a8e8c9b76455de6d2ae89"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 14
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 31
    }
  },
  "functionMap": {
    "aorun": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xdd3b1ece158fe7c275f8bc7facff3f4c5f695a98083a8e8c9b76455de6d2ae89::aorun::AORUN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}