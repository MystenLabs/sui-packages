module 0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f::voting {
    struct Votes has key {
        id: 0x2::object::UID,
        total_votes: u64,
        master_list: vector<Project>,
        team_orca: 0x2::vec_set::VecSet<u64>,
        team_polar_bear: 0x2::vec_set::VecSet<u64>,
        voting_active: bool,
    }

    struct Project has copy, drop, store {
        id: u64,
        name: 0x1::string::String,
        description: 0x1::string::String,
        video_blob_id: 0x1::string::String,
        walrus_site_url: 0x2::url::Url,
        github_url: 0x2::url::Url,
        votes: u64,
        address: address,
    }

    struct Approval has key {
        id: 0x2::object::UID,
        team: u64,
        team_name: 0x1::string::String,
        ballot: vector<u64>,
    }

    struct AdminCap has store, key {
        id: 0x2::object::UID,
    }

    struct VOTING has drop {
        dummy_field: bool,
    }

    fun assert_valid_project_ids(arg0: vector<u64>, arg1: &mut Votes) {
        let v0 = 0x2::vec_map::empty<u64, u64>();
        0x1::vector::reverse<u64>(&mut arg0);
        while (!0x1::vector::is_empty<u64>(&arg0)) {
            let v1 = 0x1::vector::pop_back<u64>(&mut arg0);
            assert!(0x2::vec_set::contains<u64>(&arg1.team_orca, &v1) || 0x2::vec_set::contains<u64>(&arg1.team_polar_bear, &v1), 4);
            0x2::vec_map::insert<u64, u64>(&mut v0, v1, 0);
        };
        0x1::vector::destroy_empty<u64>(arg0);
    }

    fun assert_voting_is_active(arg0: bool) {
        assert!(arg0, 5);
    }

    public fun ballot(arg0: &Approval) : vector<u64> {
        arg0.ballot
    }

    fun init(arg0: VOTING, arg1: &mut 0x2::tx_context::TxContext) {
        let v0 = 0x1::vector::empty<0x1::string::String>();
        let v1 = &mut v0;
        0x1::vector::push_back<0x1::string::String>(v1, 0x1::string::utf8(b"name"));
        0x1::vector::push_back<0x1::string::String>(v1, 0x1::string::utf8(b"image_url"));
        0x1::vector::push_back<0x1::string::String>(v1, 0x1::string::utf8(b"description"));
        0x1::vector::push_back<0x1::string::String>(v1, 0x1::string::utf8(b"project_url"));
        let v2 = 0x1::vector::empty<0x1::string::String>();
        let v3 = &mut v2;
        0x1::vector::push_back<0x1::string::String>(v3, 0x1::string::utf8(b"Peer Approval NFT for {team_name}"));
        0x1::vector::push_back<0x1::string::String>(v3, 0x1::string::utf8(b"https://aggregator-devnet.walrus.space/v1/XeCu0SEBPalw_ItFZbmBngfjT7udXSdA69cX3fbK0Qc"));
        0x1::vector::push_back<0x1::string::String>(v3, 0x1::string::utf8(b"Peer approval token for the Breaking the Ice hackathon. "));
        0x1::vector::push_back<0x1::string::String>(v3, 0x1::string::utf8(b"https://approve.breakingtheice.xyz"));
        let v4 = 0x2::package::claim<VOTING>(arg0, arg1);
        let v5 = 0x2::display::new_with_fields<Approval>(&v4, v0, v2, arg1);
        0x2::display::update_version<Approval>(&mut v5);
        0x2::transfer::public_transfer<0x2::package::Publisher>(v4, 0x2::tx_context::sender(arg1));
        0x2::transfer::public_transfer<0x2::display::Display<Approval>>(v5, 0x2::tx_context::sender(arg1));
        let v6 = 0x1::vector::empty<vector<u8>>();
        let v7 = &mut v6;
        0x1::vector::push_back<vector<u8>>(v7, b"Suitizen");
        0x1::vector::push_back<vector<u8>>(v7, x"53756974697a656e20697320616e206f6e2d636861696e206964656e7469747920696e69746961746976652e204f7572206d697373696f6e20697320746f2063726561746520616e206964656e7469747920636172642066756c6c7920636f6d70617469626c6520776974682074686520535549206e6574776f726b2c20656d706f776572696e6720636974697a656e732077697468207468652072696768747320746f20706172746963697061746520696e20766172696f7573206f6e2d636861696e20636f6d6d756e69747920616374697669746965732e0a0a55736572732063616e2070757263686173652074686520535549204e616d65205365727669636520616e64207468656e206170706c7920666f7220616e206964656e746974792063617264206f6e207468652053756974697a656e20776562736974652e20447572696e6720746865206170706c69636174696f6e2070726f636573732c207765207363616e20796f75722066616369616c20666561747572657320616e642c20696e636f72706f726174696e6720736f6d652072616e646f6d6e6573732c2067656e657261746520616e20617661746172207468617420726570726573656e747320796f7520696e207468652053554920776f726c642e20546869732061766174617220697320696d6d757461626c652c207265666c656374696e672074686520696465612074686174206f6e652063616e6e6f74206368616e676520746865697220617070656172616e636520696e20746865207265616c20776f726c642e20596f75722066616369616c2066656174757265732c20616c6f6e672077697468207468652067656e657261746564206176617461722c2061726520656e6372797074656420616e64207265636f72646564206f6e2057616c7275732e0a0a57652061726520616c736f206275696c64696e6720616e206f6e2d636861696e20636f6d6d756e697479207468617420696e636c756465732061637469766974696573206c696b65202244697363757373696f6e2220616e642022566f74696e67222e20496e20746865206675747572652c20776520706c616e20746f20657870616e642074686520636f6d6d756e6974792077697468206d6f726520616374697669746965732e0a0a4e6f772c204c65742773206265636f6d6520612053756974697a656e21");
        0x1::vector::push_back<vector<u8>>(v7, b"https://github.com/CJMario89/suitizen");
        0x1::vector::push_back<vector<u8>>(v7, b"https://suitizen.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v7, b"-BM_1f-EF2QzxCfSQeQuWxjgs8aNLRa2WTZd-tzDvZw");
        0x1::vector::push_back<vector<u8>>(v7, 0x2::address::to_bytes(@0x1e18ea43b913ad84acf41a2d6d65af6e565209da3dc04c6f8b6cb1de529e780c));
        let v8 = 0x1::vector::empty<vector<u8>>();
        let v9 = &mut v8;
        0x1::vector::push_back<vector<u8>>(v9, b"Random Direction Shoot Game");
        0x1::vector::push_back<vector<u8>>(v9, x"47414d452052554c45530a0a6e6f726d616c206d6f64653a0a0a572f412f532f44206f72204172726f77206b65797320746f206d6f76652e0a0a466972652062756c6c6574732072616e646f6d6c792e0a0a506f696e7473206172652073636f726564206261736564206f6e2074686520696e697469616c20726164697573206f6620656e656d6965732064657374726f7965642e0a0a4166746572203130302062756c6c6574732c207468652073636f72652077696c6c20626520736574746c65642e0a0a496620796f75722073636f72652063616e206265206f6e20746865206c6973742028746f702074656e292c20796f752063616e2063686f6f736520746f207061792061206365727461696e20616d6f756e7420746f2075706461746520746865206c69737420616e6420676574206120756e69717565204e465420636f6c6c656374696f6e206174207468652073616d652074696d652e0a0a7261696e626f77206d6f64653a0a0a596f75722062756c6c6574732077696c6c206265206f662072616e646f6d20636f6c6f72732c20616e642062756c6c657473206f6620646966666572656e7420636f6c6f7273206861766520646966666572656e7420656666656374732e0a0a5768656e20796f752067697665206120666174616c20626c6f772c20796f75722073636f7265206d617920696e637265617365207369676e69666963616e746c792e0a0a497420697320776f727468206e6f74696e67207468617420796f75206e65656420746f207061792061206365727461696e20616d6f756e7420696e20616476616e636520746f20656e61626c65207261696e626f77206d6f64652e");
        0x1::vector::push_back<vector<u8>>(v9, b"https://github.com/zcy1024/WalrusDevnetHackathon");
        0x1::vector::push_back<vector<u8>>(v9, b"https://zcy1024-walrusdevnethackathon.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v9, b"lzHY6gnFLr3ZhLraFELutYNEso6GczYPyGWzdJTUQ3w");
        0x1::vector::push_back<vector<u8>>(v9, 0x2::address::to_bytes(@0x665e60b765225202159ed2ae7933030d48e3cad1e6f3ce9342d50c3d58f4ad80));
        let v10 = 0x1::vector::empty<vector<u8>>();
        let v11 = &mut v10;
        0x1::vector::push_back<vector<u8>>(v11, b"AdToken");
        0x1::vector::push_back<vector<u8>>(v11, b"AdToken is a next-gen peer-to-peer ad network that connects businesses with global influencers and publishers. We offer cost-effective, dynamic ad campaigns using blockchain technology and our AdToken AdSense solution, with real-time, gas-free payments. Our platform features versatile ad formats and events, paired with our pricing algorithm for optimised pricing and targeting, ensuring maximum ROI and efficient operations for all users.");
        0x1::vector::push_back<vector<u8>>(v11, b"https://github.com/AdToken-2024/adtoken-dapp");
        0x1::vector::push_back<vector<u8>>(v11, b"https://adtoken.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v11, b"LW9WpZFC-4hQ9R_7R8cC7FDjPIjxb6yRCZH5zLiwS0w");
        0x1::vector::push_back<vector<u8>>(v11, 0x2::address::to_bytes(@0x3296f947ef005a05250f295f6190ae61ad02f201be39199facdeac736eab9973));
        let v12 = 0x1::vector::empty<vector<u8>>();
        let v13 = &mut v12;
        0x1::vector::push_back<vector<u8>>(v13, b"Tuskscipt");
        0x1::vector::push_back<vector<u8>>(v13, x"5475736b536372697074206973206120547970655363726970742d6261736564206e706d207061636b6167652064657369676e656420746f2073696d706c69667920646576656c6f706d656e74206f6e207468652057616c727573206e6574776f726b2e2042792070726f766964696e6720616e20696e747569746976652041504920666f72207365616d6c65737320646174612073746f7261676520616e642072657472696576616c2c205475736b53637269707420656e61626c657320646576656c6f7065727320746f20656173696c7920696e7465677261746520646563656e7472616c697a65642073746f7261676520736f6c7574696f6e7320696e746f20626f7468205765623220616e642057656233206170706c69636174696f6e732e2057697468206275696c742d696e20737570706f727420666f72205479706553637269707420747970657320616e6420666c657869626c6520646174612068616e646c696e672c205475736b53637269707420627269646765732074686520676170206265747765656e20747261646974696f6e616c20616e6420646563656e7472616c697a6564206461746120617661696c6162696c6974792c206d616b696e6720697420656173696572207468616e206576657220746f206275696c6420696e6e6f76617469766520626c6f636b636861696e206170706c69636174696f6e732077697468206d696e696d616c206566666f72742e0a0a496e206164646974696f6e20746f205475736b5363726970742c20746869732070726f6a65637420696e636c7564657320612073746172746572206b69742063616c6c6564206372656174652d7475736b2d6170702c2077686963682068656c707320646576656c6f7065727320696e746567726174652053756920616e642057616c72757320696e746f207468656972205265616374206170706c69636174696f6e732e2057686174206d616b657320746869732074656d706c61746520756e6971756520697320697473206162696c69747920746f20636f6e7665727420612052656163742061707020696e746f20612057616c727573206441707020746861742063616e206265206465706c6f796564206469726563746c79206f6e207468652057616c727573206e6574776f726b2e20466f72206d6f72652064657461696c732c20636865636b206f75742074686520524541444d452e6d642061742068747470733a2f2f6769746875622e636f6d2f536f7262696e2f7475736b2d646170703f7461623d726561646d652d6f762d66696c65236465706c6f79696e672d746f2d77616c7275732020616e6420746865206c697665207475736b2d64617070206f6e2057616c7275732061742068747470733a2f2f346239306864356131726d677a7435626b677130626373693278397271337536676d6938656b36766d32343073706a6f67642e77616c7275732e736974652f2e0a0a537461727420696e746567726174696e672057616c72757320696e746f20796f757220644170702077697468206e706d2069207475736b7363726970742c206f72206372656174652061206e657720756e697175652069646561206f6e2053756920616e642057616c7275732077697468206e7078206372656174652d7475736b2d6170702e0a0a2d2044656d6f20566964656f20426c6f6249442028646f776e6c6f6164206173202e6d7034293a205833557173717a35324f61614e7a716a59335f6d6c516a66484b32794e6949496f6f527242766633490a2d207475736b736372697074204e504d3a2068747470733a2f2f7777772e6e706d6a732e636f6d2f7061636b6167652f7475736b7363726970740a2d207475736b73637269707420536f757263653a2068747470733a2f2f6769746875622e636f6d2f536f7262696e2f7475736b7363726970740a2d206372656174652d7475736b2d617070204e504d3a2068747470733a2f2f7777772e6e706d6a732e636f6d2f7061636b6167652f6372656174652d7475736b2d6170700a2d206372656174652d7475736b2d617070206f6e2057616c7275733a2068747470733a2f2f346239306864356131726d677a7435626b677130626373693278397271337536676d6938656b36766d32343073706a6f67642e77616c7275732e736974652f0a0a2d206372656174652d7475736b2d61707020536f757263653a2068747470733a2f2f6769746875622e636f6d2f536f7262696e2f6372656174652d7475736b2d617070");
        0x1::vector::push_back<vector<u8>>(v13, b"https://github.com/SovaSniper/tuskscript");
        0x1::vector::push_back<vector<u8>>(v13, b"https://4b90hd5a1rmgzt5bkgq0bcsi2x9rq3u6gmi8ek6vm240spjogd.walrus.site");
        0x1::vector::push_back<vector<u8>>(v13, b"2-X3Uqsqz52OaaNzqjY3_mlQjfHK2yNiIIooRrBvf3I");
        0x1::vector::push_back<vector<u8>>(v13, 0x2::address::to_bytes(@0x7a043717b2c2bed351b0a5c11a2e17d28d5fc40577b5830ae43c7d983d911bd6));
        let v14 = 0x1::vector::empty<vector<u8>>();
        let v15 = &mut v14;
        0x1::vector::push_back<vector<u8>>(v15, b"SuieTail");
        0x1::vector::push_back<vector<u8>>(v15, x"e28098537569655461696ce280992c20706f776572656420627920414920616e6420626c6f636b636861696e20746563686e6f6c6f67792c20656e61626c65732063726561746f72732020746f206d6f6e6574697a65207468656972206f776e2041492063686174626f74732c207768696c652075736572732061726520736174697366696564207769746820696e2d646570746820616e6420616363757261746520726573706f6e7365732e205573696e672052657472696576616c2d4175676d656e7465642047656e65726174696f6e2028524147292c20696e636964656e636573206f662068616c6c7563696e6174696f6e73206f7220696e636f7272656374206f75747075747320617265207369676e69666963616e746c7920726564756365642c207468657265627920696d70726f76696e672074686520636f6e74656e74e28099732072656c696162696c69747920616e6420726963686e6573732e20576974682074686520626c6f636b636861696e207265776172642073797374656d2c2063726561746f72732061726520666169726c7920616e64207472616e73706172656e746c7920636f6d70656e7361746564206261736564206f6e2074686520616d6f756e74206f6620746f6b656e73206372656174656420666f722067656e65726174696e6720726573706f6e7365732e2057652061696d20746f2063726561746520612076697274756f7573206379636c65206f6620646563656e7472616c697a65642041492077686572652063726561746f727320616e642075736572732063616e20667265656c7920656e676167652077697468206469766572736520637573746f6d2041492063686174626f74732e");
        0x1::vector::push_back<vector<u8>>(v15, b"https://github.com/orgs/SuieTail/repositories");
        0x1::vector::push_back<vector<u8>>(v15, b"https://5keknpr1vc05ujgwd0jk4q9kna0jgbergs39plvo2yh3pmkdp0.walrus.site");
        0x1::vector::push_back<vector<u8>>(v15, b"3w2OPHhGbvnj1SzIZFKb66TDsY6ujko0vWJAIiaXd4Y");
        0x1::vector::push_back<vector<u8>>(v15, 0x2::address::to_bytes(@0x28ccfb7702648d63ea9570f26b4c93ac14b9d427362af9a64add2808efed3560));
        let v16 = 0x1::vector::empty<vector<u8>>();
        let v17 = &mut v16;
        0x1::vector::push_back<vector<u8>>(v17, b"sui-ai-agents");
        0x1::vector::push_back<vector<u8>>(v17, x"5375692d41492d4167656e747320696e74726f647563657320612063757474696e672d6564676520646563656e7472616c697a6564204149206167656e74206e6574776f726b2074686174206d6572676573204149207769746820776562332c2061696d696e6720746f206372656174652061207065726d697373696f6e6c657373206e6574776f726b20666f72204149206167656e74732e205574696c697a696e6720776562332c2069742070696f6e6565727320616e204172746966696369616c20496e74656c6c6967656e63652066696e616e63652073797374656d202841694669292c20656e68616e63696e67207472616e73706172656e63792c2073656375726974792c20616e6420656666696369656e637920696e206465706c6f79696e672c206f7065726174696e672c20616e64207472616e73616374696e672041492073657276696365732076696120626c6f636b636861696e2e205375692d41492d4167656e747320656e766973696f6e73206120667574757265206f6620646563656e7472616c697a656420696e74656c6c6967656e7420736572766963657320616e642066696e616e6369616c2065636f73797374656d732c206f66666572696e6720616e2061636365737369626c652c2072656c6961626c6520706c6174666f726d20666f7220646576656c6f706572732c20627573696e65737365732c20616e6420757365727320746f2065786368616e676520616e64206d616e6167652041492073657276696365732e0a0a5468697320706c6174666f726d2073747265616d6c696e657320746865206f7065726174696f6e616c206672616d65776f726b20666f72204149206167656e74732c2073696d706c696679696e67207468652070726f63657373206f66206d616e6167696e67204150497320616e6420737562736372697074696f6e73206279207574696c697a696e67204167656e742073657276696365732e20546865736520736572766963657320656e61626c65206167656e747320746f206175746f6e6f6d6f75736c79206d616b65206465636973696f6e7320616e642074616b6520616374696f6e7320776974686f7574206d616e75616c2041504920696e746567726174696f6e732c20666163696c6974617465642062792074686520696e746567726174696f6e206f662063727970746f63757272656e6379207472616e73616374696f6e732077697468696e206120646563656e7472616c697a65642041492066696e616e6369616c2073797374656d2e0a0a5375692d41492d4167656e7473207573652057616c72757320746f2073746f72652063616c6c206167656e7420726573756c74732c20736f2065766572797468696e672069732066756c6c7920646563656e7472616c697a6564");
        0x1::vector::push_back<vector<u8>>(v17, b"https://github.com/fantasyni/sui-ai-agents");
        0x1::vector::push_back<vector<u8>>(v17, b"https://2yjupvm8x2yun1ooob9yu7ixkp4a1irk10xnn5sd94ra3dbhva.walrus.site/#/");
        0x1::vector::push_back<vector<u8>>(v17, b"3yEQlCV_2fQ4ZETNNUnLdmv2BPQFi5EpZAVtN-izRTo");
        0x1::vector::push_back<vector<u8>>(v17, 0x2::address::to_bytes(@0x7e3b752c4c49fda9af01caeb34ec39475f3d7f9002ee06e53fa275421d7b7f2c));
        let v18 = 0x1::vector::empty<vector<u8>>();
        let v19 = &mut v18;
        0x1::vector::push_back<vector<u8>>(v19, b"Itheum");
        0x1::vector::push_back<vector<u8>>(v19, b"Itheum tokenizes data using the Data NFT standard, which we pioneered, enabling transparent trading of bulk data with AI companies. We currently focus on tokenization of music and gaming data.");
        0x1::vector::push_back<vector<u8>>(v19, b"https://github.com/zedgehorizon/zstorage");
        0x1::vector::push_back<vector<u8>>(v19, b"https://itheumwalrusmusic.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v19, b"9JCY_1fxmT73gY3PWuG4BL9zEe_910EvgGJJ1k7kv1w");
        0x1::vector::push_back<vector<u8>>(v19, 0x2::address::to_bytes(@0x106ca49bce7503c7b5d5b6582796d8b8ba085fdee928bf02f31c27759866da17));
        let v20 = 0x1::vector::empty<vector<u8>>();
        let v21 = &mut v20;
        0x1::vector::push_back<vector<u8>>(v21, b"DriftBottle");
        0x1::vector::push_back<vector<u8>>(v21, x"447269667420626f74746c65206f6e20636861696eefbc9a0a2d20497320746865726520736f6d657468696e6720796f7527766520616c776179732077616e74656420746f2073617920627574206e6576657220666f756e642074686520636f75726167653f20576861742061726520796f7520616672616964206f663f2057686174e280997320686f6c64696e6720796f75206261636b3f2053656e64206120647269667420626f74746c6520616e642072656c656173652074686520776f72647320746861742068617665206265656e207765696768696e67206f6e20796f75722068656172742e0a2d20497320746865726520736f6d656f6e6520796f752063616e27742073746f70207468696e6b696e672061626f75742c20736f6d656f6e6520796f75206c6f6e6720746f20737065616b20746f2062757420646f6ee280997420646172653f20577269746520796f7572206665656c696e677320696e206120647269667420626f74746c652c20616e64206d617962652069742077696c6c2066696e64206974732077617920746f207468656d2e0a2d2048617320616e796f6e65206576657220746f6c6420796f752c202249206c6f766520796f75206d6f7265207468616e20616e797468696e67223f0a2d204665656c696e67206f7665727768656c6d65643f204e656564206120706c61636520746f206c657420697420616c6c206f75743f20577269746520646f776e207468652062757264656e73206f6e20796f757220686561727420616e642073656e64207468656d206472696674696e6720617761792e0a2d2044696420796f75206b6e6f773f205468617420796561722c20492077616974656420666f7220796f75e280a620756e74696c20746865207665727920656e642e20");
        0x1::vector::push_back<vector<u8>>(v21, b"https://github.com/orgs/DriftBottleOnSui/repositories");
        0x1::vector::push_back<vector<u8>>(v21, b"https://drift-bottle.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v21, b"9sINIHO2nHR0usD8ZBlX1FdqEsmbefwhU1Wc0XhQsmg");
        0x1::vector::push_back<vector<u8>>(v21, 0x2::address::to_bytes(@0xc4301a727914c051c987331f30d002ef907f6f6e4badfec8981e6275ed22486c));
        let v22 = 0x1::vector::empty<vector<u8>>();
        let v23 = &mut v22;
        0x1::vector::push_back<vector<u8>>(v23, b"Walrus game");
        0x1::vector::push_back<vector<u8>>(v23, b"A little game about walruses, penguins, and fish. Each walrus minted comes with its own site tied to the NFT. Use the walrus to catch fish, the fire to cook the fish, and then buy penguins with cooked fish who will then catch more fish for you. The walrus with the most penguins and fish wins.");
        0x1::vector::push_back<vector<u8>>(v23, b"https://github.com/builders-of-stuff/walrus-game");
        0x1::vector::push_back<vector<u8>>(v23, b"https://27cq3tlycwm5nihei6oxv6pbo2c1z5dpv6y67e7ux6swvwgra8.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v23, b"13syIo0JUrTtS1tgXulsR-JlcTlbwrdmC-6Q7_H-hPg");
        0x1::vector::push_back<vector<u8>>(v23, 0x2::address::to_bytes(@0x4bae201a4883c6cc4cb9402761450b6456699b19b65f4eeffd7ad976e670f20d));
        let v24 = 0x1::vector::empty<vector<u8>>();
        let v25 = &mut v24;
        0x1::vector::push_back<vector<u8>>(v25, b"Walnet");
        0x1::vector::push_back<vector<u8>>(v25, x"436c6f756420436f6d707574696e67207769746820426c6f636b636861696e20546563686e6f6c6f67790a0a496e20746f646179277320666173742d6368616e67696e67207465636820776f726c642c206d6f726520616e64206d6f72652070656f706c65206e65656420706f77657266756c20636f6d7075746572732e2057616c6e65742069732061206e657720736f6c7574696f6e20746f20746869732070726f626c656d2e20497420636f6d62696e657320636c6f756420636f6d707574696e672077697468207468652053756920626c6f636b636861696e20746f206372656174652061207374726f6e6720616e6420736166652073797374656d20666f722075736572732e0a0a57616c6e657420206c65742075736572732061636365737320706f77657266756c20636f6d7075746572207265736f757263657320666f72206d616e7920646966666572656e74207461736b732e205468697320636f6d62696e6174696f6e206d616b65732057616c6e657420612075736566756c20746f6f6c20666f7220766172696f757320636f6d707574696e67206e656564732e");
        0x1::vector::push_back<vector<u8>>(v25, b"https://github.com/Weminal-labs/walrus-net-online");
        0x1::vector::push_back<vector<u8>>(v25, b"https://walnet.weminal.com/");
        0x1::vector::push_back<vector<u8>>(v25, b"41bVuxIsY29r_2ILBRsaqyWQEzFQQwd6Lf2h3J77EVw");
        0x1::vector::push_back<vector<u8>>(v25, 0x2::address::to_bytes(@0xbb899c52fe74ba86ae5da01599554b92870064e92e5f38722dacb8ff9b350b8d));
        let v26 = 0x1::vector::empty<vector<u8>>();
        let v27 = &mut v26;
        0x1::vector::push_back<vector<u8>>(v27, b"Suiftly.io");
        0x1::vector::push_back<vector<u8>>(v27, x"43444e206f7074696d697a6174696f6e7320666f72205375692057616c7275732e204c6f6164206d6f737420626c6f627320756e64657220313030206d696c6c697365636f6e64732e200a0a4d616e79207761797320746f20696e746567726174652c20696e636c7564696e672061204e504d207061636b61676520666f72206175746f6d617469632043444e20746f2057616c727573206661696c6f76657220616e6420626c6f622061757468656e7469636174696f6e2e0a0a44656d6f3a2068747470733a2f2f73756966746c792e77616c7275732e736974650a0a566964656f3a2068747470733a2f2f63646e2e73756966746c792e696f2f626c6f622f61344433656d6a67596c655553754375614975353162365041454269435f64646439647a73706f766869550a0a4d6f726520696e666f3a2068747470733a2f2f73756966746c792e696f");
        0x1::vector::push_back<vector<u8>>(v27, b"https://github.com/chainmovers/suiftly");
        0x1::vector::push_back<vector<u8>>(v27, b"https://suiftly.walrus.site");
        0x1::vector::push_back<vector<u8>>(v27, b"a4D3emjgYleUSuCuaIu51b6PAEBiC_ddd9dzspovhiU");
        0x1::vector::push_back<vector<u8>>(v27, 0x2::address::to_bytes(@0x8d047b7ebcb83787a005ce9b13f77380e84235fce4be138380d70607c43fa690));
        let v28 = 0x1::vector::empty<vector<u8>>();
        let v29 = &mut v28;
        0x1::vector::push_back<vector<u8>>(v29, b"Suitok");
        0x1::vector::push_back<vector<u8>>(v29, b"Suitok is a decentralized Web3 platform for video creators, powered by Walrus, that lets users upload, store, and share videos securely using blockchain technology. Future updates will include Sui smart contract integration and new monetization opportunities for creators.");
        0x1::vector::push_back<vector<u8>>(v29, b"https://github.com/suitokdev/suitok");
        0x1::vector::push_back<vector<u8>>(v29, b"https://suitok.walrus.site");
        0x1::vector::push_back<vector<u8>>(v29, b"AC3B-r1gxfQIqmskbkY-BOhZ8OqXkkKHICgfarDZU3A");
        0x1::vector::push_back<vector<u8>>(v29, 0x2::address::to_bytes(@0xded44d653ef8ec17c3cfca05a270b9234e1e98f4b8cb04ef34d1d1449f64bc6a));
        let v30 = 0x1::vector::empty<vector<u8>>();
        let v31 = &mut v30;
        0x1::vector::push_back<vector<u8>>(v31, b"FormPilot (aka Crazyforms)");
        0x1::vector::push_back<vector<u8>>(v31, x"497473206861726420746f207573657220666565646261636b202620496e7369676874732e2e2e0a0a446f6e277420776f727279207765206d616b65206974206561737920627920766172696f7573207375697465206f6620746f6f6c7320696e746567726174656420696e206f6e6520706c6174666f726d20616c736f2073747265616d6c696e6520796f757220776f726b666c6f77730a0a486572652061726520746865207375697465206f6620746f6f6c73202d0a0a2d20416666696c69617465730a2d20457363726f77730a2d205265616c2074696d6520726577617264730a2d204c4c4d2073756d6d6172697a65720a2d20566f74696e67730a2d2041697264726f70730a2d204d61726b6574706c61636520746f20646973636f7665720a2d204c4c4d2076616c696461746f720a2d20436c61696d20636f75706f6e2026206769766561776179730a2d20537570706f727473206d756c7469636861696e0a0a557365206361736573202d200a0a2d2055736572207369676e75707320796f757220706c6174666f726d2c20776865726520796f752063616e2073656e6420666565646261636b20666f726d206261736564206f6e20697420696e63656e746976652074686520757365722077697468207265616c74696d6520726577617264730a0a2d20496620796f752077616e7420746f206469737472696275746520736f6d65206769766577617973202d204c6f616420796f757220746f6b656e7320696e746f20657363726f7720706f6f6c732062617365642069742075736572732063616e20636c61696d20776974682074686569722077616c6c657473206163636f7264696e676c790a0a2d20596f752063616e2073756d6d6172697a6520616c6c20746865207573657220726573706f6e73657320696e2073686f72742070617261677261706820776861742074686579207468696e6b2061626f757420706c6174666f726d207573696e67204c4c4d2073756d6d6172697a65720a0a2d20596f752063616e20616464696e67206c697374206f662063686f6963657320746861742075736572732063616e20766f746520616e6420756e6465727374616e64207468656972206f70696e696f6e730a0a2d20596f752063616e2072656c6561736520666f726d2077686f65766572207375626d6974732077696c6c2067657420696e7374616e742061697264726f70730a0a2d20536861726520666f726d20616e64206561726e2072657761726473207573696e6720616666696c696174652070726f6772616d200a0a2d2028756e64657220646576656c6f706d656e7429204c4c4d2076616c696461746f722076616c6964617465732074686520726573706f6e736573206f662074686520666f726d20616e64206261736564206f6e2069742c2049742077696c6c20646973747269627574652074686520726577617264206163636f7264696e676c7920");
        0x1::vector::push_back<vector<u8>>(v31, b"https://github.com/BalanaguYashwanth/crazyforms");
        0x1::vector::push_back<vector<u8>>(v31, b"https://49ackm64tza2xuj5zl7cbubfez8hxeb6m1klwu02msov8a6dyp.walrus.site/#/");
        0x1::vector::push_back<vector<u8>>(v31, b"WfUUOEeMsTh18r6Jw3m95eIlj6fgn50lsH2pEs3RGlw");
        0x1::vector::push_back<vector<u8>>(v31, 0x2::address::to_bytes(@0x20f9bd8ae1f21512e45aa00a6b4ca7ce24bd0e7fdf8ed86a38f9a2f7f9602505));
        let v32 = 0x1::vector::empty<vector<u8>>();
        let v33 = &mut v32;
        0x1::vector::push_back<vector<u8>>(v33, b"Sui-Gallery");
        0x1::vector::push_back<vector<u8>>(v33, b"AI-decentralized art gallery where anyone can be an artist or a collector. How it works: Create your art with the help of AI and mint it as your own. Showcase your art on a stand-alone Walrus Site where interested buyers can bid a price for it.");
        0x1::vector::push_back<vector<u8>>(v33, b"https://github.com/SuiGallery/sui_gallery");
        0x1::vector::push_back<vector<u8>>(v33, b"https://6683buvw2z7jvkg37ufutxtei0beoo45uew8vmr7uxa2vnkhxg.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v33, b"JopvwwiMJPbXnuVesP8KF-Y4GVDVbIwpsCdLoArWgR8");
        0x1::vector::push_back<vector<u8>>(v33, 0x2::address::to_bytes(@0x740abd37a5a91e258c6c5de999e83d908c8a4558dba7ffbd6a9759bf5d8ee66c));
        let v34 = 0x1::vector::empty<vector<u8>>();
        let v35 = &mut v34;
        0x1::vector::push_back<vector<u8>>(v35, b"Doomsday Protocol: Rebirth in Another World");
        0x1::vector::push_back<vector<u8>>(v35, b"A strategic card battle game featuring an AI agent built with Sui's latest random modules, seamlessly integrated with Walrus for static content storage.");
        0x1::vector::push_back<vector<u8>>(v35, b"https://github.com/xiaodi007/AI-CardGame");
        0x1::vector::push_back<vector<u8>>(v35, b"https://xq917z4n9e1acc9lljw6lhopnjigg0xdu971sb07w0pdrs8rs.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v35, b"DiGYqS9SVCvlyIVgP22LhxVBPcY5ECCtiNqCugYPjAc");
        0x1::vector::push_back<vector<u8>>(v35, 0x2::address::to_bytes(@0xde5448c74d811c5409041537078665ab8497a28fb125a95d7d8a12300cc655d5));
        let v36 = 0x1::vector::empty<vector<u8>>();
        let v37 = &mut v36;
        0x1::vector::push_back<vector<u8>>(v37, b"SuiSurvey");
        0x1::vector::push_back<vector<u8>>(v37, b"On-chain survey/polling/voting. Ensured privacy, data safety, security and ease of reward distribution. ");
        0x1::vector::push_back<vector<u8>>(v37, b"https://github.com/sui-survey/suisurvey");
        0x1::vector::push_back<vector<u8>>(v37, b"https://sui-survey.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v37, b"dnDfByrKBxWjRJhaILljLcUEASw9GpT2cgURDXuxjGo");
        0x1::vector::push_back<vector<u8>>(v37, 0x2::address::to_bytes(@0x407e4bc7f4d5d9c45814e85766e387afd344131236240dd34bc93d6f41f080c5));
        let v38 = 0x1::vector::empty<vector<u8>>();
        let v39 = &mut v38;
        0x1::vector::push_back<vector<u8>>(v39, b"CRE8SPACE");
        0x1::vector::push_back<vector<u8>>(v39, b"Cre8Space is a decentralized platform that empowers content creators to retain full ownership of their content, offering transparent and fair monetization opportunities through blockchain technology. The platform decentralizes used Walrus for content storage and management, giving creators a direct avenue for monetizing their work, collaborating with peers, and engaging their audience with transparency. Creators have direct ownership of the content they store in the platform. Powered by Sui blockchain technology and Walrus, Cre8Space provides an ecosystem that supports content authenticity, discoverability, and incentivization.");
        0x1::vector::push_back<vector<u8>>(v39, b"https://github.com/ibriz/cre8Space");
        0x1::vector::push_back<vector<u8>>(v39, b"https://cre8space.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v39, b"gKNGmwkwXwepY9ZbJJw5VhfMZ8irBQ81evx4cYL1woA");
        0x1::vector::push_back<vector<u8>>(v39, 0x2::address::to_bytes(@0xd04fd2e5bcc26f5eb343200949f736bd02143db26b84d27186e080453d26f592));
        let v40 = 0x1::vector::empty<vector<u8>>();
        let v41 = &mut v40;
        0x1::vector::push_back<vector<u8>>(v41, b"Suipet");
        0x1::vector::push_back<vector<u8>>(v41, b"This is a growth-oriented pet that will level up as you answer questions and check in. You can change the appearance of the pet.");
        0x1::vector::push_back<vector<u8>>(v41, b"https://github.com/gonahot");
        0x1::vector::push_back<vector<u8>>(v41, b"https://ppcrgfwi58d6m81yobkipe37uvcr50w5ouuasm14livks9not.walrus.site");
        0x1::vector::push_back<vector<u8>>(v41, b"gpS7ldWithDwN2Tt4FMe7W5mM0h_2jP9lCtIERHGbBo");
        0x1::vector::push_back<vector<u8>>(v41, 0x2::address::to_bytes(@0x1aa50d1de8de613816f4e3061bfc71dc8a3a5a5bf475041e29adf16fee2808a5));
        let v42 = 0x1::vector::empty<vector<u8>>();
        let v43 = &mut v42;
        0x1::vector::push_back<vector<u8>>(v43, b"SuiS3");
        0x1::vector::push_back<vector<u8>>(v43, x"57616c7275732070726f766964657320656666696369656e7420616e6420726f6275737420646563656e7472616c697a65642073746f726167652e204261736963616c6c79206974206d61696e7461696e732061206d617070696e672066726f6d20626c6f6220696420746f20636f6e74656e742c20692e652e206120666c6174206e616d657370616365207374727563747572652e2054686520666c61742073746f72616765206d6f64656c2070726573656e7473206368616c6c656e67657320696e207465726d73206f662068756d616e2075736162696c69747920616e64206d616e6167656d656e742e200a5375695333206973206120746f6f6c20746861742070726573656e747320616e204157532053332d7374796c6520434c492c20666163696c69746174696e672074686520656666656374697665206d616e6167656d656e74206f662057616c7275732720666c617420646174612073746f7261676520696e2061207374727563747572656420616e64206d65616e696e6766756c206869657261726368792c207468726f756768207468652072656c61746564206d657461646174612073746f726564206f6e205375692e");
        0x1::vector::push_back<vector<u8>>(v43, b"https://github.com/siphonelee/SuiS3");
        0x1::vector::push_back<vector<u8>>(v43, b"https://3k72mblg9csrgajc53ijbsq6ia2fwebliz5984j5h2p15axdxw.walrus.site");
        0x1::vector::push_back<vector<u8>>(v43, b"GqU497wZUty12Jou_bUFb9FdGg3xYsh85fzcCkUimJw");
        0x1::vector::push_back<vector<u8>>(v43, 0x2::address::to_bytes(@0x431149315f9369bf6cb30c504cfc5ca3c28c8d238ffe1c4556ff1877ddf3ed34));
        let v44 = 0x1::vector::empty<vector<u8>>();
        let v45 = &mut v44;
        0x1::vector::push_back<vector<u8>>(v45, b"Loonah");
        0x1::vector::push_back<vector<u8>>(v45, b"Loonah empowers users by providing a fully decentralized platform for hosting static websites (React, vue) on walrus and abstracting any need for extra hassle, just connect your github to loonah using oauth and select a repo, sit back and let loonah do the rest.");
        0x1::vector::push_back<vector<u8>>(v45, b"https://github.com/loonah-app");
        0x1::vector::push_back<vector<u8>>(v45, b"https://www.loonah.xyz");
        0x1::vector::push_back<vector<u8>>(v45, b"H9NPh1yDhe9nwLaNuwmZl0Jy2MSAa7Ft_r21u8dNpn0");
        0x1::vector::push_back<vector<u8>>(v45, 0x2::address::to_bytes(@0x30edaa4d186d2c9b7d3c470d561dc703c22d3d5c1fc24630e733ab4b4ae9a81b));
        let v46 = 0x1::vector::empty<vector<u8>>();
        let v47 = &mut v46;
        0x1::vector::push_back<vector<u8>>(v47, b"Orai3D The Evolution of 3d Design Tools");
        0x1::vector::push_back<vector<u8>>(v47, x"4f726169334420697320616e20696e6e6f76617469766520706c6174666f726d2074686174206f666665727320612064796e616d696320656e7669726f6e6d656e7420666f722064657369676e696e6720616e6420636f6c6c61626f726174696e67206f6e20646563656e7472616c697a6564203344206173736574732e204f72616933442073696d706c6966696573207468652070726f63657373206f662064657369676e696e6720616e64206d696e74696e67204e46547320627920696e746567726174696e672041492d67656e65726174656420696d6167657320616e64207573657220696e746572616374696f6e207468726f7567682057656d696e616c277320617373697374616e63652e2054686520706c6174666f726d207365637572656c792073746f726573207468652067656e65726174656420696d61676573206f6e204575656e6f277320646563656e7472616c697a65642073746f726167652e0a0a576520656e636f75726167657320757365727320746f207368617265207468656972206372656174696f6e732077697468206f746865722061727469737473");
        0x1::vector::push_back<vector<u8>>(v47, b"https://github.com/Weminal-labs/walrus-3d");
        0x1::vector::push_back<vector<u8>>(v47, b"https://orai3d.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v47, b"HQuAfVwwPx_FSF4H6VinGkhDcZiRYkTAtW21kqwMB-g");
        0x1::vector::push_back<vector<u8>>(v47, 0x2::address::to_bytes(@0xbb899c52fe74ba86ae5da01599554b92870064e92e5f38722dacb8ff9b350b8d));
        let v48 = 0x1::vector::empty<vector<u8>>();
        let v49 = &mut v48;
        0x1::vector::push_back<vector<u8>>(v49, b"Cyferio");
        0x1::vector::push_back<vector<u8>>(v49, b"Cyferio is a Trustless Modular Calculator (TMC), a modular co-processor, and a Rollup Stack that enables verifiable FHE. TMC unlocks privacy-preserving, massively parallel execution of computations for both Web2 and Web3 applications.");
        0x1::vector::push_back<vector<u8>>(v49, b"https://github.com/cyferio-labs");
        0x1::vector::push_back<vector<u8>>(v49, b"https://1pxivrs1ha2w8dpv4nzx3sxkic9oplah23jqcrgfmrckq29k9q.walrus.site");
        0x1::vector::push_back<vector<u8>>(v49, b"j_syZ8Lwx7nMYmcFZkU0B60RRF8jm3KcWRtjrsnJ1VM");
        0x1::vector::push_back<vector<u8>>(v49, 0x2::address::to_bytes(@0xca15e20d5041a0d395edfb741f247242c2482b071956a18b8e6ca479e63fb36));
        let v50 = 0x1::vector::empty<vector<u8>>();
        let v51 = &mut v50;
        0x1::vector::push_back<vector<u8>>(v51, b"Walrus Sites GA");
        0x1::vector::push_back<vector<u8>>(v51, b"Using GitHub Actions to deploy a Walrus website provides an automated workflow that allows automatic deployment with each code change, eliminating the need to worry about Walrus CLI configurations. In addition, GitHub simplifies version control and history tracking, providing clear proof of origin for each deployment, increasing reliability and transparency.");
        0x1::vector::push_back<vector<u8>>(v51, b"https://github.com/zktx-io/walrus-sites-ga");
        0x1::vector::push_back<vector<u8>>(v51, b"https://github.com/marketplace/actions/walrus-sites-ga");
        0x1::vector::push_back<vector<u8>>(v51, b"JSQ-xt7E7KNSKgiAL3IBT5B5_3Hk_ZMiMZFHGqynkYU");
        0x1::vector::push_back<vector<u8>>(v51, 0x2::address::to_bytes(@0xb2c16052a9d44929cf1624ba14a577211a1dcb57f0979f9ff87b871ae28d1edc));
        let v52 = 0x1::vector::empty<vector<u8>>();
        let v53 = &mut v52;
        0x1::vector::push_back<vector<u8>>(v53, b"GachaGame_SUI");
        0x1::vector::push_back<vector<u8>>(v53, b"A gashapon machine game on the sui chain. Although it is very simple, I hope you can have fun.");
        0x1::vector::push_back<vector<u8>>(v53, b"https://github.com/StarryDeserts/GachaGame_SUI");
        0x1::vector::push_back<vector<u8>>(v53, b"https://starrydesert.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v53, b"Lg2wWxtnESiqYBOfEgmuM-7qpHYiMG7IvPs990s1ghM");
        0x1::vector::push_back<vector<u8>>(v53, 0x2::address::to_bytes(@0xaebc14ac420d5cb714ce4439e231e80e31bfe2e5384b3ce8df773dddc59bf01d));
        let v54 = 0x1::vector::empty<vector<u8>>();
        let v55 = &mut v54;
        0x1::vector::push_back<vector<u8>>(v55, b"SecretLink");
        0x1::vector::push_back<vector<u8>>(v55, x"5365637265744c696e6b0a57616c7275732050726f746f636f6c2d626173656420656e637279707465642073746f7261676520666163696c697469657320616c6c6f7720757320746f206d616e6167652075736572732720656e63727970746564206461746120696e20612066617374657220616e64206d6f7265206d616e61676561626c65206d616e6e65720a0a0a466561747572653a0a312e20456e642d746f2d456e6420456e6372797074696f6e0a596f7572206461746120697320656e63727970746564206265666f7265206974206c656176657320796f7572206465766963652e0a0a322e20496d6d757461626c65205265636f7264730a53756920426c6f636b636861696e20416e642057616c7275732050726f746f636f6c20656e737572657320796f75722073686172656420636f6e74656e742072656d61696e732074616d7065722d70726f6f6620616e642076657269666961626c652e0a0a332e20446563656e7472616c697a65642053656375726974790a4e6f2073696e676c6520706f696e74206f66206661696c7572652e20596f75722064617461206973206469737472696275746564206163726f737320746865206e6574776f726b2e0a0a0a486f77205365637265744c696e6b20576f726b730a312e2055706c6f616420436f6e74656e740a55706c6f616420796f75722066696c65206f7220656e746572207465787420746f20626520656e637279707465642e0a0a322e2047656e657261746520456e6372797074696f6e204b65790a4120756e6971756520656e6372797074696f6e206b65792069732067656e65726174656420696e20796f75722062726f777365722e0a0a332e20456e637279707420446174610a596f757220636f6e74656e7420697320656e63727970746564207573696e672041455320656e6372797074696f6e2e0a0a342e2053746f726520456e6372797074656420446174610a456e6372797074656420646174612069732073746f72656420696e205355492057616c7275732064697374726962757465642073746f726167652e0a0a352e2047656e657261746520536861726561626c65204c696e6b0a4120756e69717565206c696e6b206973206372656174656420666f7220616363657373696e672074686520656e6372797074656420636f6e74656e742e");
        0x1::vector::push_back<vector<u8>>(v55, b"https://github.com/Euraxluo/secretlink");
        0x1::vector::push_back<vector<u8>>(v55, b"https://secretlink.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v55, b"oBFdZsNSQcQFwcHLaEL5Ar5LdbcB6Qw3qMTpiYKxDEI");
        0x1::vector::push_back<vector<u8>>(v55, 0x2::address::to_bytes(@0x42ebe17a32756d7a73d003290b8894ca6e393bf45221af8b643ede72e85964e7));
        let v56 = 0x1::vector::empty<vector<u8>>();
        let v57 = &mut v56;
        0x1::vector::push_back<vector<u8>>(v57, b"Walrus Share");
        0x1::vector::push_back<vector<u8>>(v57, x"57616c72757320536861726520697320612066696c652073686172696e6720617070206261736564206f6e207468652057616c7275732070726f746f636f6c2e2057616c727573205368617265206170702063616e206e6f74206f6e6c792070726f766964652057616c7275732d62617365642064697374726962757465642073746f726167652c2062757420616c736f20766572696679207468652073686172696e67207065726d697373696f6e73206f662066696c65732e205468697320656e7375726573207468617420746865206f726967696e616c2066696c65206f776e65722063616e206761696e2062656e65666974732066726f6d2066696c652073686172696e672e0a0a5468652057616c727573205368617265206170706c69636174696f6e2075736573206a6176617363726970742072756e6e696e672077697468696e20796f7572207765622062726f7773657220746f20656e637279707420616e6420646563727970742066696c657320636c69656e742d736964652c20696e2d62726f777365722e20416c6c20636c69656e742d736964652063727970746f67726170687920697320696d706c656d656e746564207573696e6720746865205765622043727970746f204150492e2046696c65732061726520656e63727970746564207573696e67204145532d434243203235362d6269742073796d6d657472696320656e6372797074696f6e2e2054686520656e6372797074696f6e206b657920697320646572697665642066726f6d207468652070617373776f726420616e6420612072616e646f6d2073616c74207573696e672050424b4446322064657269766174696f6e207769746820313030303020697465726174696f6e73206f66205348413235362068617368696e672e0a0a57616c727573205368617265206170706c69636174696f6e2070726f7669646573207468726565207761797320746f2073686172652066696c65733a20667265652c20766572696669636174696f6e20636f646520616e6420706169642e0a0a55736520667265653a205768656e20746865207573657220766973697473207468652055524c20796f752070726f76696465642c20746865792063616e20766965772074686520706963747572657320796f752073686172656420666f7220667265652e0a0a55736520766572696669636174696f6e20636f64653a205768656e20746865207573657220766973697473207468652055524c20796f752070726f76696465642c20746865792077696c6c206e65656420746f20656e7465722074686520766572696669636174696f6e20636f646520796f752070726f766964656420746f20766965772074686520706963747572657320796f75207368617265642e0a0a557365207061793a205768656e20746865207573657220766973697473207468652055524c20796f752070726f76696465642c207468652075736572206e6565647320746f20636f6e6e65637420746f206869732077616c6c657420616e64207061792053554920636f696e73206163636f7264696e6720746f207468652066656520796f75207365742e20416674657220746865207061796d656e74206973207375636365737366756c2c2068652063616e20766965772074686520706963747572657320796f75207368617265642e0a0a426563617573652074686520646576656c6f70657273206f662057616c727573205368617265206e65656420746f20636f6e74696e756f75736c79206d61696e7461696e20746865207570646174657320616e6420757365206f66207468652073797374656d2c2075736572206e65656420746f2070617920312053756920436f696e207768656e207573696e672057616c72757320536861726520746f20656e637279707420616e642073686172652066696c65732e");
        0x1::vector::push_back<vector<u8>>(v57, b"https://github.com/croal99/walrus-share.git");
        0x1::vector::push_back<vector<u8>>(v57, b"https://5qfz5r7xy7nn2dfk9v6kbknizkwy2yxeqpgplxk84sv83fc1ox.walrus.site");
        0x1::vector::push_back<vector<u8>>(v57, b"pUtWTEIBJRt6MVCDcKaVcEYjqO7WFXvc3-Ne5h2k45k");
        0x1::vector::push_back<vector<u8>>(v57, 0x2::address::to_bytes(@0x6f25929f026483a440f5f16e03661087eb41604528050b989f48624b049c4b78));
        let v58 = 0x1::vector::empty<vector<u8>>();
        let v59 = &mut v58;
        0x1::vector::push_back<vector<u8>>(v59, b"BlobSee");
        0x1::vector::push_back<vector<u8>>(v59, b"Walrus Sites file manager. 100% client-side media/files navigator with optional client-side AES encryption, solid caching and a lot of fun and huge respect for blobs.");
        0x1::vector::push_back<vector<u8>>(v59, b"https://github.com/suidouble/blobsee");
        0x1::vector::push_back<vector<u8>>(v59, b"https://blobsee.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v59, b"QpNwixUTSr7DpUaAGmzKob8c6DROKiu0oz7tPFSKqXQ");
        0x1::vector::push_back<vector<u8>>(v59, 0x2::address::to_bytes(@0x9e40f545a7d69f1d59c84357a1cf33951bac6f60a9fb6b66e6669188beb4b3a7));
        let v60 = 0x1::vector::empty<vector<u8>>();
        let v61 = &mut v60;
        0x1::vector::push_back<vector<u8>>(v61, b"SuiPump:Token Market");
        0x1::vector::push_back<vector<u8>>(v61, x"53756950756d703a20546f6b656e204d61726b65742070726f6a6563742077617320696e7370697265642062792050756d7046756e2e2053696e63652050756d7046756e206973206120746f6b656e2074726164696e67206d61726b6574206f6e2074686520536f6c616e6120626c6f636b636861696e2c2077652077616e74656420746f20696d706c656d656e742073696d696c61722066756e6374696f6e616c697479206f6e207468652053756920626c6f636b636861696e2e205765206d6f64656c6564207468652066726f6e74656e64206c61796f75742061667465722050756d7046756e20616e6420757365642052656163742c20567565332c20616e642056697465206173206f75722066726f6e74656e6420746563686e6f6c6f677920737461636b2c207769746820476f20617320746865206261636b656e6420415049206172636869746563747572652e205765206275696c7420612073797374656d206f6e207468652053756950756d702077656273697465207468617420656e61626c657320746f6b656e206372656174696f6e2c2074726164696e672c20616e64206f746865722066756e6374696f6e616c69746965732e20546f6b656e2074726164696e6720697320636f6e74726f6c6c6564206279206120626f6e64696e672063757276652c2077686572652074686520746f6b656e20707269636520696e63726561736573206173206d6f72652070656f706c652070757263686173652069742e205468652066726f6e74656e642069732066756c6c79206465706c6f796564206f6e2057616c7275732c2077697468206d6f73742066756e6374696f6e616c697469657320696d706c656d656e746564206f6e207468652066726f6e74656e642c2065786365707420666f7220736f6d6520696e666f726d6174696f6e2072657472696576656420766961204150492072657175657374732e0a0a54686520726561736f6e20666f72207573696e6720746865204150492069732074686174207768656e206120757365722063726561746573206120636f696e2c2077652067656e65726174652061206e6577206164647265737320666f72207468617420636f696e20746f20666163696c69746174652074726164696e672e20546f20636f6d706c6574652066756e6374696f6e73206c696b652061646472657373206372656174696f6e2c20636f6e7472616374206465706c6f796d656e742c20616e6420696e666f726d6174696f6e20656e7472792c207765206465616c20776974682064796e616d69632064617461207468617420697320646966666963756c7420746f206173736f6369617465207468726f7567682057616c72757320616c6f6e652c20736f20776520616c736f2073746f7265207468697320696e666f726d6174696f6e20696e2061204d7953514c20646174616261736520746f2070726576656e742064617461206c6f737320647572696e672074657374696e672e205768696c6520746865206d61696e207061676520616e642074686520646973706c6179206f6620757365722d6372656174656420636f696e73206172652068616e646c65642062792072656164696e67206261636b656e6420696e666f726d6174696f6e2c20616c6c206f7468657220636f696e20696e666f726d6174696f6e20646973706c6179732061726520616368696576656420627920657865637574696e67207175657269657320616e6420636f6d6d616e6473206469726563746c79206f6e207468652066726f6e74656e642e0a0a44756520746f206c696d69746174696f6e7320696e207465616d2073697a6520616e6420746563686e6963616c206578706572746973652c204920656e636f756e7465726564206d616e79206973737565732c20706172746963756c61726c79207769746820636f6d6d756e69636174696f6e206265747765656e207468652066726f6e74656e6420616e64206d79206f776e207365727665722e2053696e6365207468697320776173206d792066697273742074696d6520776f726b696e67206f6e20737563682061206c617267652070726f6a6563742c20616e64204920776173206c6561726e696e6720617320492077656e7420616c6f6e672c20746865726520617265207374696c6c20736f6d6520756e7265736f6c7665642073746162696c697479206973737565732e204f6e207468652057616c72757320736974652c20736f6d6574696d65732074686520656e746972652070726f6365737320776f726b7320736d6f6f74686c792c207768696c65206174206f746865722074696d65732c2062756773206f636375722e20486f77657665722c206f766572616c6c2c207468652070726f6a656374207375636365737366756c6c7920696d706c656d656e74732074726164696e672066756e6374696f6e616c697469657320616e642076697375616c697a65732074726164696e6720696e666f726d6174696f6e2e200a0a5468697320686173206265656e2061206a6f75726e6579206f66206c6561726e696e6720616e6420696d706c656d656e74696e6720537569204d6f76652066726f6d203020746f20312c20616e64204920686f706520746f20636f6e74696e756520696d70726f76696e6720696e20746865206675747572652e20492073696e636572656c792077656c636f6d6520796f757220666565646261636b20616e642073756767657374696f6e7321205468616e6b20796f7521");
        0x1::vector::push_back<vector<u8>>(v61, b"https://github.com/Ocrand/SuiPump-Token-Market");
        0x1::vector::push_back<vector<u8>>(v61, b"https://suipump.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v61, b"r3lwCdv6CCAkMCs63Ol2DSeHqNF-Rjan07h8TspOXHs");
        0x1::vector::push_back<vector<u8>>(v61, 0x2::address::to_bytes(@0xa623659bc73a8653f2d613e8302a8ffcd87fe7d04bbe6a32dda0258c3000f8e4));
        let v62 = 0x1::vector::empty<vector<u8>>();
        let v63 = &mut v62;
        0x1::vector::push_back<vector<u8>>(v63, b"Walrus Pass");
        0x1::vector::push_back<vector<u8>>(v63, b"Walrus Pass is an innovative solution designed to securely manage and verify digital assets such as subscription models, proof of purchase, concert tickets, licenses, and more. Leveraging the security and transparency of blockchain technology, Walrus Pass enables users to effectively prove their rights to various assets.");
        0x1::vector::push_back<vector<u8>>(v63, b"https://github.com/zktx-io/walrus-pass-monorepo");
        0x1::vector::push_back<vector<u8>>(v63, b"https://docs.zktx.io/walrus/walrus-pass.html");
        0x1::vector::push_back<vector<u8>>(v63, b"tafMqHCbsQZ99sofKgsOI1dHxepBvOlq1PmR-Oy9hrA");
        0x1::vector::push_back<vector<u8>>(v63, 0x2::address::to_bytes(@0x84dc3b2dcf706a775de5788bdb689c58155617c676f64c61a4bdcdc7c23521f9));
        let v64 = 0x1::vector::empty<vector<u8>>();
        let v65 = &mut v64;
        0x1::vector::push_back<vector<u8>>(v65, b"Lotan");
        0x1::vector::push_back<vector<u8>>(v65, b"an open-source protocol with very friendly interface to help builders, users to interact with the game-changer in SUI's NFT technology - Walrus");
        0x1::vector::push_back<vector<u8>>(v65, b"https://github.com/lotan-app/lotan-monorepo");
        0x1::vector::push_back<vector<u8>>(v65, b"https://lotan.app/");
        0x1::vector::push_back<vector<u8>>(v65, b"tTj3aq3IW6HFAgbQv-I8KrAigT1M46vLnV18amklHY8");
        0x1::vector::push_back<vector<u8>>(v65, 0x2::address::to_bytes(@0xd261f297e1272920177e68e26b8a1076701f8a7d71e3149e315364acd4d233fb));
        let v66 = 0x1::vector::empty<vector<u8>>();
        let v67 = &mut v66;
        0x1::vector::push_back<vector<u8>>(v67, b"Walcast");
        0x1::vector::push_back<vector<u8>>(v67, b"An open-source kit to optimize your developer workflow. ");
        0x1::vector::push_back<vector<u8>>(v67, b"https://github.com/Weminal-labs/walrus-raycast");
        0x1::vector::push_back<vector<u8>>(v67, b"https://walcast.walrus.site");
        0x1::vector::push_back<vector<u8>>(v67, b"TWBkPHwrxMdDJkELpApslGZTRGCFSdO6YEvkm0mgKPE");
        0x1::vector::push_back<vector<u8>>(v67, 0x2::address::to_bytes(@0x80d6241496f68b205dee09025b156ee6f6a944d88a5238cdf05d148a05bf399a));
        let v68 = 0x1::vector::empty<vector<u8>>();
        let v69 = &mut v68;
        0x1::vector::push_back<vector<u8>>(v69, b"Cable");
        0x1::vector::push_back<vector<u8>>(v69, b"Cable is an end-to-end encrypted wallet-to-wallet messaging app, powered by Walrus.");
        0x1::vector::push_back<vector<u8>>(v69, b"https://github.com/ronanyeah/cable");
        0x1::vector::push_back<vector<u8>>(v69, b"https://cable.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v69, b"uoHoCrVmGhMe-zCSs0qnsZA6LlArYFJX0i9kjdiJvhg");
        0x1::vector::push_back<vector<u8>>(v69, 0x2::address::to_bytes(@0xb302c9bf51543ee07bc48fcce8703ed3e5c72040b8ffc46569c31963c99acc6e));
        let v70 = 0x1::vector::empty<vector<u8>>();
        let v71 = &mut v70;
        0x1::vector::push_back<vector<u8>>(v71, b"Walrus Disk");
        0x1::vector::push_back<vector<u8>>(v71, x"57656c636f6d6520746f207468652057616c727573204469736b2c206120646563656e7472616c697a65642073746f72616765206170706c69636174696f6e20746861742075736573207468652057616c7275732070726f746f636f6c20746f2073746f726520656e637279707465642066696c65732e2057616c7275732070726f746f636f6c20666f6375736573206f6e2070726f766964696e67206120726f6275737420627574206166666f726461626c6520736f6c7574696f6e20666f722073746f72696e6720756e7374727563747572656420636f6e74656e74206f6e20646563656e7472616c697a65642073746f72616765206e6f646573207768696c6520656e737572696e67206869676820617661696c6162696c69747920616e642072656c696162696c697479206576656e20696e207468652070726573656e6365206f662042797a616e74696e65206661756c74732e0a0a5468652057616c727573204469736b206170706c69636174696f6e2075736573206a6176617363726970742072756e6e696e672077697468696e20796f7572207765622062726f7773657220746f20656e637279707420616e6420646563727970742066696c657320636c69656e742d736964652c20696e2d62726f777365722e2057616c727573204469736b206d616b6573206e6f206e6574776f726b20636f6e6e656374696f6e7320647572696e6720746869732070726f636573732c20746f20656e73757265207468617420796f7572206b657973206e65766572206c6561766520746865207765622062726f7773657220647572696e67207468652070726f636573732e0a0a5468652057616c727573204469736b206170706c69636174696f6e2073746f7265642074686520656e637279707465642066696c657320696e207468652057616c7275732073797374656d20616e6420746865206b65797320696e20746865206c6f63616c6c792c207468757320656e737572696e6720746865207365637572697479206f66207468652066696c65732e205768656e20796f75206e6565642074686573652066696c65732c207468652057616c727573204469736b206170706c69636174696f6e2063616e20656173696c7920757365207468652057616c7275732070726f746f636f6c20746f20646f776e6c6f61642074686520656e637279707465642066696c657320616e64207468656e2064656372797074207468656d207769746820746865206c6f63616c206b65792e0a0a416c6c20636c69656e742d736964652063727970746f67726170687920697320696d706c656d656e746564207573696e6720746865205765622043727970746f204150492e2046696c65732061726520656e63727970746564207573696e67204145532d434243203235362d6269742073796d6d657472696320656e6372797074696f6e2e2054686520656e6372797074696f6e206b657920697320646572697665642066726f6d207468652070617373776f726420616e6420612072616e646f6d2073616c74207573696e672050424b4446322064657269766174696f6e207769746820313030303020697465726174696f6e73206f66205348413235362068617368696e672e0a0a596f752063616e207669736974207468652064656d6f20696e2068747470733a2f2f336c6531383762796172626a6865626f6a726b6f336966657a33306b6c6771716f6c363830727873706c356c356f726368722e77616c7275732e7369746520");
        0x1::vector::push_back<vector<u8>>(v71, b"https://github.com/croal99/walrus-disk.git");
        0x1::vector::push_back<vector<u8>>(v71, b"https://3le187byarbjhebojrko3ifez30klgqqol680rxspl5l5orchr.walrus.site");
        0x1::vector::push_back<vector<u8>>(v71, b"vGUTk7xNAxPc3BkkNMfIQYyf91RoXibHKfOuEXoc58o");
        0x1::vector::push_back<vector<u8>>(v71, 0x2::address::to_bytes(@0x6f25929f026483a440f5f16e03661087eb41604528050b989f48624b049c4b78));
        let v72 = 0x1::vector::empty<vector<u8>>();
        let v73 = &mut v72;
        0x1::vector::push_back<vector<u8>>(v73, b"Sui Meet");
        0x1::vector::push_back<vector<u8>>(v73, b"web3 matching site. Meet your significant other, friend with common interests, or simply make meaningful connections");
        0x1::vector::push_back<vector<u8>>(v73, b"https://github.com/orgs/Sui-Meet/repositories");
        0x1::vector::push_back<vector<u8>>(v73, b"https://sui-meet.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v73, b"VlV67jggAlJQbHPybKp4pButStXjkuDbBcqHotZ901U");
        0x1::vector::push_back<vector<u8>>(v73, 0x2::address::to_bytes(@0xc7f91313484b74cf2c75634f21feae0630ecedef5cb25a543884e8184b20b6fd));
        let v74 = 0x1::vector::empty<vector<u8>>();
        let v75 = &mut v74;
        0x1::vector::push_back<vector<u8>>(v75, b"Walrus NFT Generator");
        0x1::vector::push_back<vector<u8>>(v75, b"The Walrus NFT Generator is  website that allows you to create unique, multi-layered NFTs by combining your uploaded images using our unique algorithm. All images and NFTs are securely stored on Walrus, providing decentralized and secure data storage to ensure your digital artifacts are protected and accessible at any time.");
        0x1::vector::push_back<vector<u8>>(v75, b"https://github.com/TanyDev-pro/gen-nft-sui");
        0x1::vector::push_back<vector<u8>>(v75, b"https://gen-nft.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v75, b"Vzt3Raos9U8jkOr8nKgE2EYunhEMSXxfrbtKneiET2Y");
        0x1::vector::push_back<vector<u8>>(v75, 0x2::address::to_bytes(@0x9a4b36b75092d2eadd6a865edea0342503ec0429c18d218f15d42484ce6de9ea));
        let v76 = 0x1::vector::empty<vector<u8>>();
        let v77 = &mut v76;
        0x1::vector::push_back<vector<u8>>(v77, b"de-docker-hub");
        0x1::vector::push_back<vector<u8>>(v77, b"Decentralized Docker Hub, store the Docker image in walrus");
        0x1::vector::push_back<vector<u8>>(v77, b"https://github.com/rickiey/de-docker-hub-walrus");
        0x1::vector::push_back<vector<u8>>(v77, b"https://wuea98mxtzewdatthsgqpxtf7z2bb0c8pigoof3sx08gkg1s4.walrus.site");
        0x1::vector::push_back<vector<u8>>(v77, b"w_67oW9UyS4JSUnegIJarPiNQWZGWevUkVHFcI9zyTc");
        0x1::vector::push_back<vector<u8>>(v77, 0x2::address::to_bytes(@0x99d1abd299edcd4d016f639f7ecb4daa15f98560873edf975111cc5e2c799999));
        let v78 = 0x1::vector::empty<vector<u8>>();
        let v79 = &mut v78;
        0x1::vector::push_back<vector<u8>>(v79, b"IceArrow");
        0x1::vector::push_back<vector<u8>>(v79, b"A secure way to share secrets online. It's a hybrid web app and a browser extension. Encrypted secret messages and files are stored on Walrus as well as the app frontend.");
        0x1::vector::push_back<vector<u8>>(v79, b"https://github.com/kkomelin/icearrow");
        0x1::vector::push_back<vector<u8>>(v79, b"https://icearrow.xyz");
        0x1::vector::push_back<vector<u8>>(v79, b"WDo0YRepgWRQP58v8HjKlBsBT8ihA2JytOb3tM-r7tA");
        0x1::vector::push_back<vector<u8>>(v79, 0x2::address::to_bytes(@0xa9f5456414a7e7ad647b352f95c62fc2880682ad32ae6652688d9b9d5d76b0ab));
        let v80 = 0x1::vector::empty<vector<u8>>();
        let v81 = &mut v80;
        0x1::vector::push_back<vector<u8>>(v81, b"Walrus Site Uploader");
        0x1::vector::push_back<vector<u8>>(v81, x"412073696d706c6520616e6420757365722d667269656e646c7920746f6f6c20746f2068656c70206465706c6f7920776562706167657320746f2057616c7275732e0a0a576520706c616e20746f20616464206d6f72652075736566756c206d616e6167656d656e742066656174757265732c2073756368206173206d616e6167696e672077656270616765732077697468696e206163636f756e74732c2064656c6574696e67206f7220616464696e672070616765732c20616e642072656e6577696e6720737562736372697074696f6e732e");
        0x1::vector::push_back<vector<u8>>(v81, b"https://github.com/Isatis-labs/walrus-site-uploader");
        0x1::vector::push_back<vector<u8>>(v81, b"https://walrus-site-uploader.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v81, b"Yn20KZtd8TmCg1ssovnhzC7Kv6xtTRnIEij9UZOabCU");
        0x1::vector::push_back<vector<u8>>(v81, 0x2::address::to_bytes(@0x335f7f85e0ca0e2c6b328e974bb4ae4076f28fa4d09da6297f24559fbdad63f));
        let v82 = 0x1::vector::empty<vector<u8>>();
        let v83 = &mut v82;
        0x1::vector::push_back<vector<u8>>(v83, b"Walrus Wayback");
        0x1::vector::push_back<vector<u8>>(v83, b"Walrus Wayback Machine is an innovative tool that enables users to permanently archive and restore websites using Walrus. It preserves websites in their original form, making them accessible and unaltered for future generations as part of our shared digital heritage.");
        0x1::vector::push_back<vector<u8>>(v83, b"https://github.com/umbrelchee/wayback.walrus.site");
        0x1::vector::push_back<vector<u8>>(v83, b"https://wayback.walrus.site");
        0x1::vector::push_back<vector<u8>>(v83, b"ZS79fNgnAAMTedEN-fvZMhecg4W69o8mt5W71Q1zyj0");
        0x1::vector::push_back<vector<u8>>(v83, 0x2::address::to_bytes(@0x6343ffd15155e984a15908bea5fee617104f855544b279ed89fa3b726dc087ce));
        let v84 = 0x1::vector::empty<vector<u8>>();
        let v85 = &mut v84;
        0x1::vector::push_back<vector<u8>>(v85, b"BlobVault");
        0x1::vector::push_back<vector<u8>>(v85, b"BlobVault is a secure file encryption and decryption platform that allows users to encrypt files, upload them to the Walrus system, and later decrypt and retrieve them using a secret key and Blob ID - In the future this platform will turn into a decentralized emailing service.");
        0x1::vector::push_back<vector<u8>>(v85, b"https://github.com/FudDeath/BlobVault");
        0x1::vector::push_back<vector<u8>>(v85, b"https://encrypt.walrus.site/");
        0x1::vector::push_back<vector<u8>>(v85, b"ZvexreFjRKcpF9HQlf4GoxD9wkQr7ORcKm8xZaqp-5U");
        0x1::vector::push_back<vector<u8>>(v85, 0x2::address::to_bytes(@0xb871a42470b59c7184033a688f883cf24eb5e66eae1db62319bab27adb30d031));
        let v86 = 0x1::vector::empty<vector<vector<u8>>>();
        let v87 = &mut v86;
        0x1::vector::push_back<vector<vector<u8>>>(v87, v6);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v8);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v10);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v12);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v14);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v16);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v18);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v20);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v22);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v24);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v26);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v28);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v30);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v32);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v34);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v36);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v38);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v40);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v42);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v44);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v46);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v48);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v50);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v52);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v54);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v56);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v58);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v60);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v62);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v64);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v66);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v68);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v70);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v72);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v74);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v76);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v78);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v80);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v82);
        0x1::vector::push_back<vector<vector<u8>>>(v87, v84);
        let v88 = 0x1::vector::empty<vector<u8>>();
        let v89 = &mut v88;
        0x1::vector::push_back<vector<u8>>(v89, b"Test 1");
        0x1::vector::push_back<vector<u8>>(v89, b"desc");
        0x1::vector::push_back<vector<u8>>(v89, b"");
        0x1::vector::push_back<vector<u8>>(v89, b"");
        0x1::vector::push_back<vector<u8>>(v89, b"");
        0x1::vector::push_back<vector<u8>>(v89, 0x2::address::to_bytes(@0x8e8cae7791a93778800b88b6a274de5c32a86484593568d38619c7ea71999654));
        let v90 = 0x1::vector::empty<vector<u8>>();
        let v91 = &mut v90;
        0x1::vector::push_back<vector<u8>>(v91, b"Test 2");
        0x1::vector::push_back<vector<u8>>(v91, b"desc");
        0x1::vector::push_back<vector<u8>>(v91, b"");
        0x1::vector::push_back<vector<u8>>(v91, b"");
        0x1::vector::push_back<vector<u8>>(v91, b"");
        0x1::vector::push_back<vector<u8>>(v91, 0x2::address::to_bytes(@0xcad6934633aeda60f7195ddbc6e09420b1d40713c3dc3bbb8afbb5dec4b82a95));
        let v92 = 0x1::vector::empty<vector<u8>>();
        let v93 = &mut v92;
        0x1::vector::push_back<vector<u8>>(v93, b"Test 3");
        0x1::vector::push_back<vector<u8>>(v93, b"desc");
        0x1::vector::push_back<vector<u8>>(v93, b"");
        0x1::vector::push_back<vector<u8>>(v93, b"");
        0x1::vector::push_back<vector<u8>>(v93, b"");
        0x1::vector::push_back<vector<u8>>(v93, 0x2::address::to_bytes(@0x2655dd32a88c41d65b7ef5114785f663a045cd0d6c5a1de4c7fb3f9090843fbf));
        let v94 = 0x1::vector::empty<vector<u8>>();
        let v95 = &mut v94;
        0x1::vector::push_back<vector<u8>>(v95, b"Test 4");
        0x1::vector::push_back<vector<u8>>(v95, b"desc");
        0x1::vector::push_back<vector<u8>>(v95, b"");
        0x1::vector::push_back<vector<u8>>(v95, b"");
        0x1::vector::push_back<vector<u8>>(v95, b"");
        0x1::vector::push_back<vector<u8>>(v95, 0x2::address::to_bytes(@0x2a1f32f6b8beca0970553a40e0b2bfcce072f28bce1d53f57c48bbf4c1aab602));
        let v96 = 0x1::vector::empty<vector<vector<u8>>>();
        let v97 = &mut v96;
        0x1::vector::push_back<vector<vector<u8>>>(v97, v88);
        0x1::vector::push_back<vector<vector<u8>>>(v97, v90);
        0x1::vector::push_back<vector<vector<u8>>>(v97, v92);
        0x1::vector::push_back<vector<vector<u8>>>(v97, v94);
        let v98 = 0x1::vector::empty<Project>();
        let v99 = vector[];
        let v100 = 0;
        while (v100 < 0x1::vector::length<vector<vector<u8>>>(&v96)) {
            let v101 = Project{
                id              : v100,
                name            : 0x1::string::utf8(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 0)),
                description     : 0x1::string::utf8(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 1)),
                video_blob_id   : 0x1::string::utf8(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 4)),
                walrus_site_url : 0x2::url::new_unsafe(0x1::ascii::string(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 3))),
                github_url      : 0x2::url::new_unsafe(0x1::ascii::string(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 2))),
                votes           : 0,
                address         : 0x2::address::from_bytes(*0x1::vector::borrow<vector<u8>>(0x1::vector::borrow<vector<vector<u8>>>(&v96, v100), 5)),
            };
            0x1::vector::push_back<Project>(&mut v98, v101);
            0x1::vector::push_back<bool>(&mut v99, true);
            v100 = v100 + 1;
        };
        let v102 = Votes{
            id              : 0x2::object::new(arg1),
            total_votes     : 0,
            master_list     : v98,
            team_orca       : 0x2::vec_set::empty<u64>(),
            team_polar_bear : 0x2::vec_set::empty<u64>(),
            voting_active   : false,
        };
        0x2::transfer::share_object<Votes>(v102);
        let v103 = AdminCap{id: 0x2::object::new(arg1)};
        0x2::transfer::transfer<AdminCap>(v103, 0x2::tx_context::sender(arg1));
    }

    public fun master_list(arg0: &Votes, arg1: u64) : Project {
        *0x1::vector::borrow<Project>(&arg0.master_list, arg1)
    }

    public fun project_votes(arg0: &Project) : u64 {
        arg0.votes
    }

    fun select_project(arg0: &mut Votes, arg1: &Approval, arg2: u64) : &mut Project {
        if (arg1.team == 1) {
            assert!(0x2::vec_set::contains<u64>(&arg0.team_polar_bear, &arg2), 6);
            0x1::vector::borrow_mut<Project>(&mut arg0.master_list, arg2)
        } else {
            assert!(0x2::vec_set::contains<u64>(&arg0.team_orca, &arg2), 6);
            0x1::vector::borrow_mut<Project>(&mut arg0.master_list, arg2)
        }
    }

    entry fun split_teams(arg0: &AdminCap, arg1: &mut Votes, arg2: &0x2::random::Random, arg3: &mut 0x2::tx_context::TxContext) {
        let v0 = arg1.master_list;
        let v1 = 0x1::vector::length<Project>(&arg1.master_list);
        let v2 = 0x2::random::new_generator(arg2, arg3);
        0x2::random::shuffle<Project>(&mut v2, &mut v0);
        let v3 = vector[];
        let v4 = 0;
        while (v4 < v1) {
            let v5 = 0x1::vector::pop_back<Project>(&mut v0);
            let v6 = v5.address;
            if (v4 < v1 / 2) {
                0x2::vec_set::insert<u64>(&mut arg1.team_orca, v5.id);
                let v7 = Approval{
                    id        : 0x2::object::new(arg3),
                    team      : 1,
                    team_name : v5.name,
                    ballot    : vector[],
                };
                0x2::transfer::transfer<Approval>(v7, v6);
                let v8 = 0x1::string::utf8(b"TeamOrca");
                0x1::debug::print<0x1::string::String>(&v8);
                0x1::debug::print<address>(&v6);
            } else {
                0x2::vec_set::insert<u64>(&mut arg1.team_polar_bear, v5.id);
                let v9 = Approval{
                    id        : 0x2::object::new(arg3),
                    team      : 0,
                    team_name : v5.name,
                    ballot    : vector[],
                };
                0x2::transfer::transfer<Approval>(v9, v6);
                let v10 = 0x1::string::utf8(b"TeamPolarBear");
                0x1::debug::print<0x1::string::String>(&v10);
                0x1::debug::print<address>(&v6);
            };
            0x1::vector::push_back<bool>(&mut v3, true);
            v4 = v4 + 1;
        };
        0x1::vector::destroy_empty<Project>(v0);
    }

    public entry fun toggle_voting(arg0: &AdminCap, arg1: bool, arg2: &mut Votes) {
        arg2.voting_active = arg1;
    }

    public fun total_votes(arg0: &Votes) : u64 {
        arg0.total_votes
    }

    public fun vote(arg0: vector<u64>, arg1: &mut Votes, arg2: &mut Approval) {
        assert_valid_project_ids(arg0, arg1);
        assert_voting_is_active(arg1.voting_active);
        if (0x1::vector::length<u64>(&arg2.ballot) == 0 && false || true) {
            let v0 = arg2.ballot;
            while (!0x1::vector::is_empty<u64>(&v0)) {
                let v1 = select_project(arg1, arg2, 0x1::vector::pop_back<u64>(&mut v0));
                v1.votes = v1.votes - 1;
                arg1.total_votes = arg1.total_votes - 1;
            };
            0x1::vector::destroy_empty<u64>(v0);
        };
        arg2.ballot = arg0;
        0x1::vector::reverse<u64>(&mut arg0);
        while (!0x1::vector::is_empty<u64>(&arg0)) {
            let v2 = select_project(arg1, arg2, 0x1::vector::pop_back<u64>(&mut arg0));
            v2.votes = v2.votes + 1;
            arg1.total_votes = arg1.total_votes + 1;
        };
        0x1::vector::destroy_empty<u64>(arg0);
    }

    // decompiled from Move bytecode v6
}

