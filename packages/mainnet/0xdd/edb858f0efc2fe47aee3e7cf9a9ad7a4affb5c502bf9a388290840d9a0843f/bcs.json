{
  "dataType": "package",
  "id": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f",
  "version": 1,
  "moduleMap": {
    "voting": ""
  },
  "typeOriginTable": [
    {
      "module_name": "voting",
      "datatype_name": "Votes",
      "package": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f"
    },
    {
      "module_name": "voting",
      "datatype_name": "Project",
      "package": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f"
    },
    {
      "module_name": "voting",
      "datatype_name": "Approval",
      "package": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f"
    },
    {
      "module_name": "voting",
      "datatype_name": "AdminCap",
      "package": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f"
    },
    {
      "module_name": "voting",
      "datatype_name": "VOTING",
      "package": "0xddedb858f0efc2fe47aee3e7cf9a9ad7a4affb5c502bf9a388290840d9a0843f"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}