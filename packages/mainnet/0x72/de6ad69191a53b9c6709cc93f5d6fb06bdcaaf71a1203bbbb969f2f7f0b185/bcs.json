{
  "dataType": "package",
  "id": "0x72de6ad69191a53b9c6709cc93f5d6fb06bdcaaf71a1203bbbb969f2f7f0b185",
  "version": 1,
  "moduleMap": {
    "suillionaire": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFkB8UB5QEIqgNgBooEqUAKs0QFDLhEQQARAQwCBgISAhMCFAACAgABAQcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAJAAEAARAFBgEAAgcICQECAgoMAQEAAw0FAQEMAw4OAQEMBA8KCwAFCwMEAAEEAgcDBwUNBA8CCAAHCAQAAwsCAQgABQsDAQgAAQoCAQgFAQkAAQsBAQkAAQgABwkAAgoCCgIKAgsBAQgFBwgEAgsDAQkACwIBCQABBggEAQUEBwsDAQkAAwUHCAQBCwMBCAACCQAFAQsCAQgADENvaW5NZXRhZGF0YQZPcHRpb24MU1VJTExJT05BSVJFC1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVcmwEY29pbg9jcmVhdGVfY3VycmVuY3kLZHVtbXlfZmllbGQEaW5pdBFtaW50X2FuZF90cmFuc2ZlchVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMGb3B0aW9uE3B1YmxpY19zaGFyZV9vYmplY3QPcHVibGljX3RyYW5zZmVyBnNlbmRlcgRzb21lDHN1aWxsaW9uYWlyZQh0cmFuc2Zlcgp0eF9jb250ZXh0A3VybHLeataRkaU7nGcJzJP11vsGvcqvcaEgO7u5afL38LGFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoCDQxTVUlMTElPTkFJUkUKAg0MU1VJbGxpb25haXJlCgJzclN1aWxsaW9hbmlyZTogQSBtZW1lY29pbiBzdGFydGluZyB3aXRoIDEgU1VJIGxpcXVpZGl0eS4gTm8gc29jaWFscywgTm8gd2Vic2l0ZS4gUm9hZG1hcDogU2VuZCBpdCB0byBtaWxsIG1hcmtldGNhcAoC7T7rPmRhdGE6aW1hZ2UvanBlZztiYXNlNjQsLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzRnSFlTVU5EWDFCU1QwWkpURVVBQVFFQUFBSElBQUFBQUFRd0FBQnRiblJ5VWtkQ0lGaFpXaUFINEFBQkFBRUFBQUFBQUFCaFkzTndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFBOXRZQUFRQUFBQURUTFFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWxrWlhOakFBQUE4QUFBQUNSeVdGbGFBQUFCRkFBQUFCUm5XRmxhQUFBQktBQUFBQlJpV0ZsYUFBQUJQQUFBQUJSM2RIQjBBQUFCVUFBQUFCUnlWRkpEQUFBQlpBQUFBQ2huVkZKREFBQUJaQUFBQUNoaVZGSkRBQUFCWkFBQUFDaGpjSEowQUFBQmpBQUFBRHh0YkhWakFBQUFBQUFBQUFFQUFBQU1aVzVWVXdBQUFBZ0FBQUFjQUhNQVVnQkhBRUpZV1ZvZ0FBQUFBQUFBYjZJQUFEajFBQUFEa0ZoWldpQUFBQUFBQUFCaW1RQUF0NFVBQUJqYVdGbGFJQUFBQUFBQUFDU2dBQUFQaEFBQXRzOVlXVm9nQUFBQUFBQUE5dFlBQVFBQUFBRFRMWEJoY21FQUFBQUFBQVFBQUFBQ1ptWUFBUEtuQUFBTldRQUFFOUFBQUFwYkFBQUFBQUFBQUFCdGJIVmpBQUFBQUFBQUFBRUFBQUFNWlc1VlV3QUFBQ0FBQUFBY0FFY0Fid0J2QUdjQWJBQmxBQ0FBU1FCdUFHTUFMZ0FnQURJQU1BQXhBRGIvMndCREFBWUVCUVlGQkFZR0JRWUhCd1lJQ2hBS0Nna0pDaFFPRHd3UUZ4UVlHQmNVRmhZYUhTVWZHaHNqSEJZV0lDd2dJeVluS1NvcEdSOHRNQzBvTUNVb0tTai8yd0JEQVFjSEJ3b0lDaE1LQ2hNb0doWWFLQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0NqL3dBQVJDQUQ2QVBvREFTSUFBaEVCQXhFQi84UUFIQUFCQUFJQ0F3RUFBQUFBQUFBQUFBQUFBQWNJQlFZQkFnUUQvOFFBUkJBQUFnRURBZ1FDQmdZR0NRTUZBQUFBQUFFQ0F3UUZCaEVIRWlFeFFWRVRGR0Z4Z1pFSUlrS2hzY0VWSXpKU1luSWtNMU9Da3FLeTBlRVdORU1sZE1MUzR2L0VBQm9CQVFBREFRRUJBQUFBQUFBQUFBQUFBQUFDQXdVRUJnSC94QUF6RVFBQ0FnRUNBZ1lKQlFBREFBQUFBQUFBQVFJREJBVVJJVUVTRXlJeFVYRVVJMkdCa2FIQjBmQVZNak94NFNSQzhmL2FBQXdEQVFBQ0VRTVJBRDhBdFNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBY09TakZ1VFNTN3NBNUJpYlhVdUR1cWpwMjJZeDlTYWZMeXh1SU43KzdjeXFrcEpOUGRQczBmRkpQdVpGU1V1NW5JRzRQcElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRGZwdUFBWTY3emVMczkvV3NqWjBXdTZuV2luK0ppcXV2TkwwWHRVemxpbjdLbTVCMlFqM3RGY3JZUi9kSkwzbXl6a294YmIyU1c3YjhDdlBGM2lUV3lrNjJId1ZTcFN4c1c0MXJoYnhkZjJMK0g4ZmNTN0hpRHBPZlJaMnkrTXYrRDAwTlI2YXZ2cTBzbmpLdS9nNmtmek9iSTJ2ajBJVFNPVEsyeUlkWFhZbDgvcVU4MzM3UGRHU3hlZHl1S21wWTNKWGxxMTEycFZwUlQ5NjMyZnhMWTNPbXROWmltNVZjWGpMcUwrM0dsQnY1bzFUTThHZE1YcWs3SlhXUHFQczZWVnpqdjdZeTM2ZXhOR1k5THVoeHJsdjhqR2xvMThPMVZKUDVFYTRIalBxS3djWVpLTnZrcVM3dWNmUnorY2VuM0VwNlk0dGFkek1vVXJtdExIWE11bkpjOUl0K3lTNmZQWWpIVVBCZk8yQ25VeGRhaGtxUzZxSy9WMU52NVgwK1RJMnlPUHU4YmN5dDhoYlZyYXZIdkNyQnhaRlpPVml2YXhicjIvY2dzek53M3RhdDE3ZnVYWXAxSVZZUm5UbEdjSkxlTW92ZE5lYVoyS2lhUTEzbk5MVklxd3VuVXROOTVXdGI2MU4rNWQ0djJvc0RvUGlUaU5WUmhRMzlTeVRYVzJxeS9hZjhFdnRmajdEVHhzK3UvaDNNMmNUVktzbnN2aEx3TjZCd2prN2pTQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTVJxM0xSd2VtOGprWnRmMGVqS2NmYkxib3Zuc1ZNeXVxYzdscE41REszbFpONzhqcXZsWHVYWkZrK0srQ3krcDhIUXhPSDlCQ05hc3AzRld0UGxqR0VlcVhSTnZkN2RsNEdtNGpnWFpVb3FlYXk5ZXRKZFhDM2dxY2ZtOTIvdU1uT3F2dm1vMTl5TVBVcWNuSnNVS2wyVjdka1FOT1VwdmViYmZ0WjE2SXMxRFF2RDNEUjN2S2RsdXZHN3V1YjhXZHZYdUdGa3VXTThBdHZDRVl5L0RjNC93Qk5hL2ZOSXovMGlTL2tzaXZlVmozWG1ndS9Rc3pMVVhER2EybExFTmYrMi84QXllZXJMaFJrT2twWVNMZmluNk4va2ZQMDljckVmSHBVZit0c2ZpVjR0TCs4czZpbmEzVmVqTmRuVHFPTFh5TnZ3bkZQVmVLbEZmcEgxeWt2L0hkeDlKdi9BSHVrdnZKVGx3cDBYbnJlVmZDWFZhRU4rWDBscGNLckZQeSt0dWpVYzd3T3kxc3BUdzkvYjMwRjFWT292UXo5M2R4ZnpROUV5cWVNSDhHUFFjMmp0VlBkZXhteTZjNDM0NjZjS1dkc2Fsak45SFZvdjBsUDN0ZnRMN3pmcWxIVG10c1UrZjFQS1dyOFUxSng5ejd4WlV6TTRxOXd1UXFXT1R0NTI5MVQyNXFjdHVtL2JzZDhGZTVPeXlWR2VGcjNGSzhsSlJoNkNUVGszMFMyOFNkZW8yTHNYUjMvQUxMS3RYdGkrcnlJOUwreVVOZGNHcnF4VlM4MHZPZDNiTHE3U28vMXNWL0MvdGZqN3lJNUtyYlYybXAwcTFPWFpweGxGcjhHWEowdkRLUndOb3MvVnBWY2x5YjFuVGp5cFB5NmVLOFdhdHhJNGU0dlU5blZ1MDZkams2Y1hKWFcyMFpKZUZUelh0N3I3aS9KMDVTWFdVOEg0SFRsNlJHY2V0b1d6OFB6dU5JNFljV3BRbFN4ZXFxdk5GN1JwWDB1NjhsVS93RHQ4L01uU25PTTRLVUpLVVpMZE5QZE5GSUsxUDBWYXBUNTRUNVpPUE5CN3hscys2ZmlpVnVFUEVtcGg2MUhEWnlxNVl5YjVhTmFUM2R1MzRQK0Q4Q09GcURUNnUzNGtOTzFWcHFtOStUKzVZc0hFR3BSVFQzVDhUazJ6MFlBQUFBQUFBQUFBQUFBQUFBQUFHNGZSRWFjUWVLdGhwcTVyWTZ4b1N2Y3BUNlRpL3EwNlRhMzZ2eGZWZEY4eXUyMkZVZWxON0lxdXZyb2owN0hzaVNLdFdGS25LZFdjWVFpdDNLVDJTSS8xTnhiMDFoM0tsYlY1Wk81WDJMWHJCUDJ6ZlQ1YmtBYXAxam05VDFaUEtYczVVZDkxYjAzeTA0LzNWMytKaThSaXIvTTNrYlhGMmxhNnVKZllweDMyOXJmWkwyc3lMZFVsSjlHbEdEZnJVNXZvNDhmenlKRnp2R3JQM3JsSEYwYmJIMG4yYVhwSi9OOVBralJzcHFuTzVSdjEvTFh0WlB3ZFZwZkpFbDZhNElYbGVNS3VvTCtGcW4xZEMzWFBKZStUNkw0Yis4a2JFY0xkS1kyTWRzY3JxYSszY3ljMzh1eEJZdVhmeG05dlA3RmF3OC9LNDJTMlh0ZjBSVlpxVTVPVDNsSitQZG5LcFZIMnB6K1RMbzJtRXhkbWtyWEhXZEhiK3pvUmorUjc0eGpGYkpKTDJJbXRJZk9meUxGb0w1MmZML1NqMG9TajFsR1M5Nk9GM0xEZlNPcnFucGpIVUVrblZ1dDk5dXYxWXYvQUhLOTBhY3ExYUZLSDdkU1NoSDN0N0l6c21qcUxPclQzTW5NeGZScmVxVDNMVWNGc1VzWHc5eG04ZVdyZEtWM1AyODcrci9sVVRZdFdacWhwN0FYbVR1V3VTaEJ1TWYzcGRvcjR2WTl1THRvV1dNdExXa3RvVWFVYWNWNUpMWkVKZlNPejdsWHgrQm96K3JGZXRWMG40dmRRVC96UDVIb0xackZ4K0hKYkhxcjdGaFl1NjVMWmVaRHVXeUZ4bGNsYzMxN056dUxpYnFUay9OazA4QXRGcFEvNmx5Tk5PYjNqWlJrdXk3T3A3MzJYeDh5SmRINE9ycVBVbGppNk82OVBVU25KZlpndXNuOEVtWENzYlNqWldkRzJ0b0tGQ2pCVTRSWGdrdGtabW00L1dUZHMrWDltTm8rTDExanZueDIvcys3NklyN3hyNGhQSVhGWEFZYXMvVXFjdVc2cXdmOWJKUHJCUDhBZFhqNXMzSGpicmQ0SEdmb25HMWVYSlhrSHp6aSt0R24yMzlqZmg4eXVOQ2pVdUsxT2pRcHlxVmFrbEdFSXJkeWJleVNSZHFPVzE2bUh2OEFzZEdyNTdYL0FCNnUvbjloUW8xTGl0Q2xRcHpxVlp5VVlRZ20zSnZza2wzSi93Q0dYQ2FsajQwc25xYW5DdmU5SjA3UjlZVWY1djNwZmN2YVpiaFB3NW82YXRvWkRLUWhWek5TTy9tcmRQN0s5dm15U3lXRnA2ajZ5M3Y4Q2VuYVVvSlczTGo0ZUgrbkVVb3BKSkpMeU9RRFhOMEFBQUFBQUFBQUFBQUFBQUFBQVBzVks0dHg1ZUkyYzM4YTBYL2tpVzFmWXF2eHZ0M2I4UjhpL3dDMWhUcUwvQWwrUmw2c3ZWSisweGRjVzlDZnQrakhDelFUMWxlVjZseGNPaGo3VnhWWGsvYm0zdnNsNWR1NVpUVCtCeHVuN0ZXbUp0S2R0UlhmbFgxcHZ6ays3ZnZJdytqWkZmb0xNUzhYY1FUL0FNSk1iTE5PcGhHcFRTNHN0MG5IcmhSR3hMdFBtWVhVT3BzUHA2bHo1ZS9vVzdhM2pUY3Q1eTkwVjFaOXRONXV5MUZpS0dTeHMzSzJxNzh2TXRtbW5zMDE1N29oL3dDa2pqN05TeFdRaldwUnYyblJuUzMrdk9uMWFsdDVKN3IrOFI1cFhYK2MwdmlxMWhpcWxDTkdwVTlMelZLZk80dlpKN2RkdkFydDFEcWIzQ2E3SlhkcW5vK1M2N0YyVjRkNWJjRmFNRHhpMUZReWx1OHBYbzNkazVwVlllaWpHWEx2MTVXdkVzclNuR3BUak9EVGpKSnArYU92SHlvWkNiaHlPN0Z6YThwTjE4aUV2cEwxUDFPQ3ArSFBWbDl5UkVtaTdmMXJWK0ZvN2JxVjVTM1hzVWsveUpZK2t2Ri8raHk4UDFxL0FqWGhnaytJT0JUN2VzcjhHWXVXdDh6WitLK2g1M1BYU3o5bjRyNkZ1bDJLZjhRc3E4MXJUTDN2TnpRblhsQ20vd0NDUDFZL2NrVzB6ZHc3UEMzOXpGN1NvMjlTb243VkZzcFZPWE5LVW40dmM2dFhud2pBN2RlczJqQ3YzazQvUnZ3aWNjbm5Lc2V1NnRLTGE5MHB2L1N2bVREcURMVytEdzEza3IyWExRdDZibkwyK1NYdGIyWHhNQndreHl4ZkQ3RVV1WGxuVXBlbm41ODAzemZtUjU5SXpVTC9BS0ZnTGVleTZYTndrKy9oQ0wrOS9JNkl5V0ppSjg5dm16cmhKWU9DcGM5dm15SDlRWmU1ejJhdXNsZXkzcjNFM0pyZnBGZUVWN0V1aE4zQXpRa2JPMnBhaXl0TGU2clIzdElTWDlYQi9iOTc4UFo3eU51RXVrLytxdFVVNFhFRzhkYWJWcmp5bDE2UStMKzVNdGJDS2hGUmlsR0tXeVNXeVNPVFRjYnJKZGZaN3Z1Y0drWW5XeWVUYng4UFB4T1V0Z0FiaDZRQUFBQUFBQUFBQUFBQUFBQUFBQUFBTXJ4OUkrd2RMVXVPdmtueTE3WjAyL2JHWC9KWWNqUGo3aFhrdEYrdVVvNzFjZlZWVi95UHBMOGpqejYrc29rbHk0bkJxZFhXNDBrdVhINEd2L1JwdUU3VE9XemYxbE9sVVM5bTBrUy9tTCtuak1YZDMxYitydDZVcXNsNTdMZllyejlIekpxejFuV3M1dmFONWJ5aWwvRkY4eS9NbmpXbGpVeWVsTXRaMGQzVnJXMDR4UzhYdHVrVllFOThiaDNyY3AweXh2RDdQZXR5cWwzYzVQVzJyVktjdlMzMS9XVUthYjJqQk45SXJ5U1I1c2RVZUMxTFJsZlc5T3I2bmNwVnFOV0NsR1NqTGFTYWZ4T05ONVNwZ2RRMk9SakRtbmFWb3pjSDRwUHF2eE05eFN2TVJsdFJMTDRLdXAwTCttcWxXbTF5enBWVjBrbXZiMGZ4WmhyWnhkbS9hVFBOTGFVSGMzMjAvd0ErWlplaGhjRGtiR2pXaGlzZlZ0NnNGVWh2YndhMmEzWGdacUtVWXBKYkpkTmlKdUMydExDV2tLZGhsNytoYjNGbE4wb2VtbW84ME84ZHQvTHQ4Q1RyTEoyTjkvMlY1YjNEOHFWUlNmM0hwcUxZV1FVbzdjVDJPTmRYYkJUanR4SW8ra25iT2VFeEZ4dDBwM0U0dCsrUC9CRVBEbXNxR3U4RlViMlN1b0w1OVB6TEE4Y3NlNy9oN2VUaXQ1V3RTRmRlNVBaL2RJckxqTHAyT1R0THRkN2V0Q3IvQUlaSi9rWXVvTHE4bFQ4bWVlMVZkWG1LZmt5MzJ0MjFvM05OZC9WS24rbGxPYWNQU1RoQmZhYWlYSzFGRlh1azhsR0gxbFdzNm5MdDQ3d2V4VHV3VzEvYkovMnNFLzhBRWl6Vmx2T0RMZGNXOWxiTG9ZdWxHMnhWcFNXMFkwNk1JKzdhS0tqYTl5MHMzcS9LWDBtM0dkYVVZZXlFZWlYeVJhdlUxNStqOUo1RzdYZWphVG12aEJsUzlKNHlXWjFMak1mMWZyRnhDRXY1ZC9yUDVic3MxUnQ5Q3FQTXQxbVRsMWRNZWY4QTRpeVBCZlR5d1dqTGFkU0hMZFgzOUpxdDk5bXZxcjViZk0zMDZVb1JwMDR3Z2xHRVZ5eFM4RWp1YTFWYXJnb0xrYmROU3FyVmNlUUFCTXRBQUFBQUFBQUFBQUFBQUFBQUFBQUFCOEw2MnBYdG5XdGJtQ3FVSzBIVHFSZmpGclpvKzREVzU4YTM0RlJzaFozZWdOZndqUG1jckc0alZweTdlbHBiOUd2ZkhkZXg3bHNMQzdwWDFsUXVyYWFuUnJRalVoSmRtbXQwelNlTGVoNDZzeENyV1VZckxXcWJvdDlQU0x4ZzM3ZkQybXZjQjlTMUhhMTlMWlRtcDN0azI2RWFpMmx5Yi9XaHMvR0wrNSt3eThlTHhiblUvd0JzdTc3R1Bpd2VGa09sL3RseFgyUFB4STRSVk1qZjFzcHBtZEtGYXMzT3JhVkh5eGNuM2NINGIrVDZlMGkyKzRlNnFzbzFKVjhMZGNsTk55bEZLYVNYZDdwc3Qxc2pyT0tsQ1VXazAxczAvRW5kcHRWamNsd1paZm85RjBuSmJwdndLUVVhVTY5V0ZLbEJ6cVRhakdNVnUyMzJTUFUxZjRXKzJhdWJHOHB2ZlpwMDV4Wm1lSW1FbHB2V1dRczRSY2FTcWVsb1ArQ1hWYmU3dDhDUStJMTVaNm80UzRqVUZUa1dTcFZZVUp6KzA1Yk5UaS9rcEdMR2o5NmIybEU4N0RGL2tUZTBvZlR2Tm00WGFvbHJ2VEdTd3VibXAzc0tMbzFLaVd6cVU1cHJtMjgxL3NWNXlWbFd4MlF1cks2ankxN2VyS2xVWHRpOW4rQklYMGZaVlZyOXhwNzhrclNwei9PT3hrZnBCYVpkam02V2N0NGYwZTlTaFdhWDdOV0s2UDRyOERwdFVyOFdOcjc0OFBjZGw2bmxZY2JueGNlRDhpVStFdVhqbk9IMk5sVWFsVW9VL1ZLeWZYckRwMTk4ZVYvRXJIbmJPZUgxRmZXbFRmbXRibWNQZnl5N2trZlI4MUhHd3p0eGhyaWUxRytYTlMzN0tySC9BSFg0SThuMGdjSTdEVjhNalRqdFF5TkpTYjI2ZWtpbEdTK1hLL2l5ZVJMcjhXRm5PUEIvbndKNVV2U2NLRnk3NDhIK2ZBbDNpSGNLcndweWRhRDNWU3hUK0RTLzNJWTRCV1N1K0lkQ3JKZjlwYjFhNjkreWgvOEFNa20ydTNtK0FWYWFmTlVoajUwNWZ6VTkwLzhBU2FmOUcybW5xWEsxTnVzYlJSWHhtdjhBWXZ0OVprMVM4VWROL3JjdWlYSnJmNmxoUUFiQnZnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBMHpWK2lLV1Z5TkRNNG1xc2ZuclpxVk80aXQ0MU52czFGNHJ3MzdtNWdoT3VOaTJrVjJWeHRYUmtqeDRxdGMxN0duTyt0L1Y3cGRLbE5TNW9xWDhMOFl2dW44OW4wTlRxOFV0SjBMMnZhM0dSblJxMFp1bkpTb1ZOdDEzMmFSdkczUWhiaUJ3Z3U4eHFDNXllRXVyYW5DNWZQVW8xZDF5ejhXbWsrajdsR1RLNkVVNmx1em55NTMxd1RvWFNmTTFyamRxRFRlcEhqN3ZDM3ZyRjlSM3BWRXFVNHAwMzFYV1NYWjcvTWpOWGQzVXNxZVBqVnFUdGxVZFNGRmRWenZaYnBlWkxHUDRGNUtjazhobGJXbEh5cFFjMzgzc2FIcHl4ek9MMXRSaGo3Q3ZkWkhIWFM1cVZLbTVmc3kyZS9rbXZGK1poWkZkMHJPblpIYnBlQjVuS3F5SldxeTZQUjZYRGg5aWJlQ1dpSytuTWRWeVdVcHVua2J5S1NwUHZTcDkwbjdYM2ZrYjNxakIydW9jSGRZMitqdlNyUjJVbDNoTHdrdmFtWlNrK2FuR1RpNHRwUGxmZGV3N005RFhSQ3V2cTB1QjZ1bkhoVlVxVXVCVFROWTNJNlMxSk8ycjgxRzl0S2luVHFSN1M2N3huSHpUL3dDQ2I4eE9qeFI0V3U1dFZIOUxXZjZ4MGwzaFZpdnJSOTBvdDdlLzJHMDhTZEQydXNNWWsrV2prYUtmcTlmYnQvREx6aS91SUQwM2xzeHcxMWZPTjViMUtlMjBMbTJsMnEwOStqaSt6ODAvK1RIbFU4U2JoTGpYTDgrUmdTcGVCWktFK05VK0hsL3FONDRDWkNON2g4N3BxNC9hbEdWYWxHWGxKY2sxOEh5djRzOG4wZG9TdE5YNXF6cTlLc0xkeGE5c0tpVC9BQlBubkZSMHpxdkY2NjAzTDAyQXZhbTlaUS84VXBkSndrdkRkYjdlVFcza1p6VDlHbGlPTzNwTFpwMldhdEoxcUVsMmtwSlQ2ZkdteVZXNmxXbjN4ZTN1ZmN5ZEtjWlZLWGZCN2VhZmN5YWdBYmg2TUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUh5cDBLVktVM1NwMDRPYjVwdU1VdVorYjgyZlVBQUFBQm12NncwbGk5VldIcStVb3B6anY2S3ZEcFVwUDJQOHV4c0FJeWlwcm95VzZJemhHY2VqSmJvcjFkYVUxRm9QMXlqRzJlZDB4ZHJhNW9VMDIzSDk3bDd4a3ZOYjlqcGhMK2pHR0VyVzl5N21uaDdwVnJPNGt0cHl0WC9BRnRDYThKd1c4a3ZHS2sxMkxFYkd0NWZSV0R5ZHpLNm5hUnQ3eVhlNHQvMWM1ZVAxdHVrdXY3eVp3U3duSCtOOFBCbVpMVG5CK3FmRHdmTG53Zm1iSEY3cnAyT1Q0MmxIMWUycFVlWno5SEZRNW4zZXkyUHNhSnFvQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLzlrPQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEIAQAAAAACGwsAMQkHAAcBBwIHAxEHOAAKATgBDAIMBAoBLhEGDAMNBAYAgMakfo0DAAsDCwE4AgsEBwQ4AwsCOAQCAA=="
  },
  "typeOriginTable": [
    {
      "module_name": "suillionaire",
      "datatype_name": "SUILLIONAIRE",
      "package": "0x72de6ad69191a53b9c6709cc93f5d6fb06bdcaaf71a1203bbbb969f2f7f0b185"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}