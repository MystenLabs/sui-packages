{
  "dataType": "package",
  "id": "0x7204f2a0a7d4184bd0ece74f3f5b07ad30063552b2ce208b66607a78fac7a3b5",
  "version": 1,
  "moduleMap": {
    "tia": ""
  },
  "typeOriginTable": [
    {
      "module_name": "tia",
      "datatype_name": "TIA",
      "package": "0x7204f2a0a7d4184bd0ece74f3f5b07ad30063552b2ce208b66607a78fac7a3b5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "tia": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x7204f2a0a7d4184bd0ece74f3f5b07ad30063552b2ce208b66607a78fac7a3b5::tia::TIA",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}