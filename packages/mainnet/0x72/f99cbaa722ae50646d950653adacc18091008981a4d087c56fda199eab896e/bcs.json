{
  "dataType": "package",
  "id": "0x72f99cbaa722ae50646d950653adacc18091008981a4d087c56fda199eab896e",
  "version": 1,
  "moduleMap": {
    "suihuahua": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suihuahua",
      "datatype_name": "SUIHUAHUA",
      "package": "0x72f99cbaa722ae50646d950653adacc18091008981a4d087c56fda199eab896e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}