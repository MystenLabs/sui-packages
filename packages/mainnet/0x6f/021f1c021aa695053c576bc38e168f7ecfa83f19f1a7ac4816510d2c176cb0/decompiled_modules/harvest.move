module 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::harvest {
    struct RewardsHarvestedEvent has copy, drop, store {
        vault_id: 0x2::object::ID,
        total_deposited_a: u64,
        total_borrowed_b: u64,
        aum_in_a: u64,
        total_lp_supply: u64,
    }

    public fun consume_harvest_deposit_receipt<T0, T1, T2>(arg0: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::VaultCap, arg1: &mut 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>, arg2: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::VaultAcl, arg3: &mut 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt, arg4: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg5: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation::Obligation, arg6: &0x1478a432123e4b3d61878b629f2c692969fdb375644f1251cd278a4b1e7d7cd6::x_oracle::XOracle, arg7: &0xca5a5a62f01c79a104bf4d31669e29daa387f325c241de4edbe30986a9bc8b0d::coin_decimals_registry::CoinDecimalsRegistry, arg8: &0x7903ed759a2e2749ecdb64a8f100b0a547185f2ef7ea286048aa1f174c8a8b9a::oracle::KriyaOracle, arg9: &0xa0f0687f5122e80366716e6594d9a5aae2015b24003d9bcb6b4576af357635b2::registry::CoinDecimalsRegistry, arg10: &0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_config::IncentiveConfig, arg11: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_pool::IncentivePools, arg12: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_account::IncentiveAccounts, arg13: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation_access::ObligationAccessStore, arg14: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::Version, arg15: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg16: &0x2::clock::Clock, arg17: &mut 0x2::tx_context::TxContext) {
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::assert_current_version(arg14);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_obligation<T0, T1, T2>(arg1, arg5);
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, bool, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(arg3, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg2), b"is_harvest"), 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::error::invalid_flow_id());
        let v0 = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::deposit::process_deposit_receipt<T0, T1, T2>(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg16, arg14, arg15, arg17);
        let (v1, v2) = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::performance_fees<T0, T1, T2>(arg1);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::collect_performance_fees<T0, T1, T2>(arg1, 0x2::coin::into_balance<T2>(0x2::coin::split<T2>(&mut v0, (((0x2::coin::value<T2>(&v0) as u128) * (v1 as u128) / (v2 as u128)) as u64), arg17)));
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::burn_vt<T0, T1, T2>(arg1, v0);
        let (v3, v4, v5) = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::utils::calc_aum<T0, T1, T2>(arg1, arg8, arg9, arg5, arg16);
        let v6 = RewardsHarvestedEvent{
            vault_id          : 0x2::object::id<0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>>(arg1),
            total_deposited_a : v4,
            total_borrowed_b  : v5,
            aum_in_a          : v3,
            total_lp_supply   : 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::total_vt_supply<T0, T1, T2>(arg1),
        };
        0x2::event::emit<RewardsHarvestedEvent>(v6);
    }

    public fun consume_harvest_receipt<T0, T1, T2>(arg0: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::VaultCap, arg1: 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt, arg2: &mut 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>, arg3: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::VaultAcl, arg4: &0x4643a9779fe25d1f13143071f35f6688a8e3ecd24d798f1560dc61dc5baee197::acl::AggregatorAcl, arg5: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::Version, arg6: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::assert_current_version(arg5);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_cap<T0, T1, T2>(arg2, arg0);
        let v0 = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg3);
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut arg1, v0, b"flow_id") == 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::utils::harvest_flow_id(), 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::error::invalid_flow_id());
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::object::ID, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut arg1, v0, b"vault_id") == 0x2::object::id<0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>>(arg2), 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::error::invalid_vault());
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut arg1, v0, b"current_index");
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut arg1, v0, b"final_index");
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::burn(arg1);
        let v1 = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::deposit::get_deposit_receipt<T0, T1, T2>(arg2, 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::coin::Coin<T0>, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut arg1, v0, b"funds"), arg3, arg4, arg5, arg6);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, bool, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, v0, b"is_harvest", true);
        v1
    }

    public fun harvest_base_asset<T0, T1, T2>(arg0: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::VaultCap, arg1: &mut 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>, arg2: &0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_config::IncentiveConfig, arg3: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_pool::IncentivePools, arg4: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_account::IncentiveAccounts, arg5: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation::Obligation, arg6: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::VaultAcl, arg7: &0x4643a9779fe25d1f13143071f35f6688a8e3ecd24d798f1560dc61dc5baee197::acl::AggregatorAcl, arg8: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::Version, arg9: &0x2::clock::Clock, arg10: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::assert_current_version(arg8);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_obligation<T0, T1, T2>(arg1, arg5);
        let v0 = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::deposit::get_deposit_receipt<T0, T1, T2>(arg1, 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::user::redeem_rewards<T0>(arg2, arg3, arg4, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::obligation_key_mut<T0, T1, T2>(arg1), arg5, arg9, arg10), arg6, arg7, arg8, arg10);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::object::ID, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v0, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"vault_id", 0x2::object::id<0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>>(arg1));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, bool, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v0, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"is_harvest", true);
        v0
    }

    public fun issue_harvest_receipt<T0, T1, T2, T3>(arg0: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::VaultCap, arg1: &mut 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>, arg2: &0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_config::IncentiveConfig, arg3: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_pool::IncentivePools, arg4: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_account::IncentiveAccounts, arg5: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation::Obligation, arg6: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::VaultAcl, arg7: &0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::acl::RouterAcl, arg8: &0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::Version, arg9: &0x2::clock::Clock, arg10: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::version::assert_current_version(arg8);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_obligation<T0, T1, T2>(arg1, arg5);
        0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        let v0 = 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::get_swap_route<T0, T1, T2, T3>(arg1);
        let v1 = 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::issue<0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), 0x1::option::some<0x2::object::ID>(0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::acl::access_id(arg7)), arg10);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::coin::Coin<T3>, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"funds", 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::user::redeem_rewards<T3>(arg2, arg3, arg4, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::obligation_key_mut<T0, T1, T2>(arg1), arg5, arg9, arg10));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"current_index", 0);
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"final_index", ((0x1::vector::length<0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value>(&v0) - 1) as u8));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, u8, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"flow_id", 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::utils::harvest_flow_id());
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::object::ID, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), b"vault_id", 0x2::object::id<0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault::Vault<T0, T1, T2>>(arg1));
        while (!0x1::vector::is_empty<0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value>(&v0)) {
            0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<u8, 0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::Access>(&mut v1, 0x6f021f1c021aa695053c576bc38e168f7ecfa83f19f1a7ac4816510d2c176cb0::vault_acl::access(arg6), (0x1::vector::length<0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value>(&v0) as u8), 0x1::vector::pop_back<0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value>(&mut v0));
        };
        0x1::vector::destroy_empty<0x360802cb106b004205cd67a706e314eaeadd8590d5f4d1cee46137566232a627::bag_value::Value>(v0);
        v1
    }

    // decompiled from Move bytecode v6
}

