{
  "dataType": "package",
  "id": "0x6f954c402881c7f3cb36a5e5c5315a7bc1a18c3d313c4fc1cc80bde976881f49",
  "version": 1,
  "moduleMap": {
    "aida": ""
  },
  "typeOriginTable": [
    {
      "module_name": "aida",
      "datatype_name": "AIDA",
      "package": "0x6f954c402881c7f3cb36a5e5c5315a7bc1a18c3d313c4fc1cc80bde976881f49"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "aida": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x6f954c402881c7f3cb36a5e5c5315a7bc1a18c3d313c4fc1cc80bde976881f49::aida::AIDA",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}