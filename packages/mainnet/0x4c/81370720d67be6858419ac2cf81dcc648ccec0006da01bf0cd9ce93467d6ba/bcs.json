{
  "dataType": "package",
  "id": "0x4c81370720d67be6858419ac2cf81dcc648ccec0006da01bf0cd9ce93467d6ba",
  "version": 1,
  "moduleMap": {
    "owls": ""
  },
  "typeOriginTable": [
    {
      "module_name": "owls",
      "datatype_name": "OWLS",
      "package": "0x4c81370720d67be6858419ac2cf81dcc648ccec0006da01bf0cd9ce93467d6ba"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "owls": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x4c81370720d67be6858419ac2cf81dcc648ccec0006da01bf0cd9ce93467d6ba::owls::OWLS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}