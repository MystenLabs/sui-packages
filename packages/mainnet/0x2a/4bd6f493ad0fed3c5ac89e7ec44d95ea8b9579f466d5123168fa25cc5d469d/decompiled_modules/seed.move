module 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::seed {
    public fun consume_seed_receipt<T0, T1, T2>(arg0: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::VaultCap, arg1: &mut 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::Vault<T0, T1, T2>, arg2: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::VaultAcl, arg3: &mut 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt, arg4: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::storage::Storage, arg5: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T0>, arg6: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::pool::Pool<T1>, arg7: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::incentive::Incentive, arg8: &mut 0xd899cf7d2b5db716bd2cf55599fb0d5ee38a3061e7b6bb6eebf73fa5bc4c81ca::incentive_v2::Incentive, arg9: &0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg10: &0xce7e9b076229e914dc87900323fa122fb6869f39fda82b85770d1aa27f61ad8e::oracle::KriyaOracle, arg11: &0xdf3da4bcc7939caf6486ecc104e1cbd69f97f2025195d270649566301d15eb96::registry::CoinDecimalsRegistry, arg12: &0x2::clock::Clock, arg13: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::version::Version, arg14: &mut 0x2::tx_context::TxContext) {
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::version::assert_current_version(arg13);
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        let v0 = 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::access(arg2);
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, v0, b"flow_id") == 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::utils::deposit_flow_id(), 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::error::invalid_flow_id());
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::object::ID, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, v0, b"vault_id") == 0x2::object::id<0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::Vault<T0, T1, T2>>(arg1), 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::error::invalid_vault());
        let v1 = 0x2::coin::from_balance<T0>(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T0>, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, v0, b"deposit_balance"), arg14);
        let v2 = 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T0>, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, v0, b"funds");
        0x2::coin::join<T0>(&mut v1, 0x2::coin::from_balance<T0>(v2, arg14));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::balance::Balance<T1>, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::access(arg2), b"funds", 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::deposit<T0, T1, T2>(arg1, v1, 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u64, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::Access>(arg3, v0, b"repay_amount"), arg4, arg5, arg6, arg7, arg8, arg9, arg12));
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::set_deposits_enabled<T0, T1, T2>(arg1, true);
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::seed<T0, T1, T2>(arg1, 0x2::coin::into_balance<T2>(0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::mint_vt<T0, T1, T2>(arg1, 0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::deposit::calc_vt_shares<T0, T1, T2>(arg1, arg5, arg6, arg10, arg11, arg4, ((((0x2::coin::value<T0>(&v1) + 0x2::balance::value<T0>(&v2)) as u128) * (0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::leverage_scaling() as u128) / (0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::leverage<T0, T1, T2>(arg1) as u128)) as u64), arg12), arg14)));
    }

    public fun issue_seed_receipt<T0, T1, T2>(arg0: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::VaultCap, arg1: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::Vault<T0, T1, T2>, arg2: 0x2::coin::Coin<T0>, arg3: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault_acl::VaultAcl, arg4: &0xfac036f8b889e6ca3fed666467ab40580193d6e27d3ae0a9fbd4305aa06d566b::acl::AggregatorAcl, arg5: &0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::version::Version, arg6: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::version::assert_current_version(arg5);
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        0x2a4bd6f493ad0fed3c5ac89e7ec44d95ea8b9579f466d5123168fa25cc5d469d::deposit::get_deposit_receipt<T0, T1, T2>(arg1, arg2, arg3, arg4, arg5, arg6)
    }

    // decompiled from Move bytecode v6
}

