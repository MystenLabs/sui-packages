{
  "dataType": "package",
  "id": "0x2a5d0d210c9fa64826e8a792510bcf258aefcebf7a555fa5c9c14020f8924961",
  "version": 1,
  "moduleMap": {
    "test": ""
  },
  "typeOriginTable": [
    {
      "module_name": "test",
      "datatype_name": "TEST",
      "package": "0x2a5d0d210c9fa64826e8a792510bcf258aefcebf7a555fa5c9c14020f8924961"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 5
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 20
    }
  }
}