{
  "dataType": "package",
  "id": "0x2acda33221606e0e5762bf381d8bfe0893afcf51bc8583b22ed13024a1c5a686",
  "version": 1,
  "moduleMap": {
    "ponkito": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ponkito",
      "datatype_name": "PONKITO",
      "package": "0x2acda33221606e0e5762bf381d8bfe0893afcf51bc8583b22ed13024a1c5a686"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "ponkito": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x2acda33221606e0e5762bf381d8bfe0893afcf51bc8583b22ed13024a1c5a686::ponkito::PONKITO",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}