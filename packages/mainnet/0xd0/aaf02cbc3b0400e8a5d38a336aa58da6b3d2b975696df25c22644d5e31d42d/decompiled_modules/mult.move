module 0xd0aaf02cbc3b0400e8a5d38a336aa58da6b3d2b975696df25c22644d5e31d42d::mult {
    public fun mult_128(arg0: u128, arg1: u128, arg2: &mut 0x2::tx_context::TxContext) : u128 {
        arg0 * arg1
    }

    public fun mult_256(arg0: u256, arg1: u256) : u256 {
        arg0 * arg1
    }

    public fun mult_256_byhand(arg0: u256, arg1: u256) : u256 {
        let v0 = arg0 & 18446744073709551615;
        let v1 = (arg0 & 340282366920938463444927863358058659840) >> 64;
        let v2 = (arg0 & 6277101735386680763495507056286727952638980837032266301440) >> 128;
        let v3 = arg1 & 18446744073709551615;
        let v4 = (arg1 & 340282366920938463444927863358058659840) >> 64;
        let v5 = (arg1 & 6277101735386680763495507056286727952638980837032266301440) >> 128;
        let v6 = v0 * ((arg1 & 115792089237316195417293883273301227089434195242432897623355228563449095127040) >> 192) + v1 * v5 + v2 * v4 + ((arg0 & 115792089237316195417293883273301227089434195242432897623355228563449095127040) >> 192) * v3;
        assert!(v6 <= 18446744073709551615, 9223372230128304127);
        v0 * v3 + (v0 * v4 + v1 * v3 << 64) + (v0 * v5 + v1 * v4 + v2 * v3 << 128) + (v6 << 192)
    }

    public fun mult_u64(arg0: u64, arg1: u64, arg2: &mut 0x2::tx_context::TxContext) : u64 {
        arg0 * arg1
    }

    public fun test() : u256 {
        34673429775949185766360837292402478 * 4951760157141521099596496891
    }

    // decompiled from Move bytecode v6
}

