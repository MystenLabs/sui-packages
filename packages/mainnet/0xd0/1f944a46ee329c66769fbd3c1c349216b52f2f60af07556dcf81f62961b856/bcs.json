{
  "dataType": "package",
  "id": "0xd01f944a46ee329c66769fbd3c1c349216b52f2f60af07556dcf81f62961b856",
  "version": 1,
  "moduleMap": {
    "simonscat": ""
  },
  "typeOriginTable": [
    {
      "module_name": "simonscat",
      "datatype_name": "SIMONSCAT",
      "package": "0xd01f944a46ee329c66769fbd3c1c349216b52f2f60af07556dcf81f62961b856"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "simonscat": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xd01f944a46ee329c66769fbd3c1c349216b52f2f60af07556dcf81f62961b856::simonscat::SIMONSCAT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}