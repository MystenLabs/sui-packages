{
  "dataType": "package",
  "id": "0xd05d92586dbb6b7a17881b99c747a181299e7e23914550516d474fc7c4550c24",
  "version": 1,
  "moduleMap": {
    "horse": ""
  },
  "typeOriginTable": [
    {
      "module_name": "horse",
      "datatype_name": "HORSE",
      "package": "0xd05d92586dbb6b7a17881b99c747a181299e7e23914550516d474fc7c4550c24"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "horse": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xd05d92586dbb6b7a17881b99c747a181299e7e23914550516d474fc7c4550c24::horse::HORSE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}