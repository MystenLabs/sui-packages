{
  "dataType": "package",
  "id": "0x091ca23701d2fa20910088417e07e8386a878b279d34ad616763b7597b25e19a",
  "version": 1,
  "moduleMap": {
    "kaeru": ""
  },
  "typeOriginTable": [
    {
      "module_name": "kaeru",
      "datatype_name": "KAERU",
      "package": "0x091ca23701d2fa20910088417e07e8386a878b279d34ad616763b7597b25e19a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "kaeru": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x091ca23701d2fa20910088417e07e8386a878b279d34ad616763b7597b25e19a::kaeru::KAERU",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}