{
  "dataType": "package",
  "id": "0x3d3d7a65a31996e148e0736797b2c60f219ca46ee56f29bcc9c09a4d1e30bd40",
  "version": 1,
  "moduleMap": {
    "disc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "disc",
      "datatype_name": "DISC",
      "package": "0x3d3d7a65a31996e148e0736797b2c60f219ca46ee56f29bcc9c09a4d1e30bd40"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "disc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x3d3d7a65a31996e148e0736797b2c60f219ca46ee56f29bcc9c09a4d1e30bd40::disc::DISC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}