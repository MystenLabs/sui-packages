{
  "dataType": "package",
  "id": "0xa8212e25ae1527d89dc6df2ab3f346637f5a5d3cff6095eaa6d70cd1bfc15e73",
  "version": 1,
  "moduleMap": {
    "boos": ""
  },
  "typeOriginTable": [
    {
      "module_name": "boos",
      "datatype_name": "BOOS",
      "package": "0xa8212e25ae1527d89dc6df2ab3f346637f5a5d3cff6095eaa6d70cd1bfc15e73"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "boos": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xa8212e25ae1527d89dc6df2ab3f346637f5a5d3cff6095eaa6d70cd1bfc15e73::boos::BOOS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}