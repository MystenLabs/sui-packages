module 0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::caster {
    public fun cast_to_u8(arg0: 0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::i32::I32) : u8 {
        assert!(0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::i32::abs_u32(arg0) < 256, 0);
        ((0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::i32::abs_u32(0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::i32::add(arg0, 0x485d6951dd438c2f3e94b9024222aa9388259e56886d094d0cb462a60d84ca6d::i32::from(256))) & 255) as u8)
    }

    // decompiled from Move bytecode v6
}

