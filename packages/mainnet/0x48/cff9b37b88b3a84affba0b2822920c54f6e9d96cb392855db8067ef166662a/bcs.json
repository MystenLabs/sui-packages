{
  "dataType": "package",
  "id": "0x48cff9b37b88b3a84affba0b2822920c54f6e9d96cb392855db8067ef166662a",
  "version": 1,
  "moduleMap": {
    "bobb": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bobb",
      "datatype_name": "BOBB",
      "package": "0x48cff9b37b88b3a84affba0b2822920c54f6e9d96cb392855db8067ef166662a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "bobb": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x48cff9b37b88b3a84affba0b2822920c54f6e9d96cb392855db8067ef166662a::bobb::BOBB",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}