{
  "dataType": "package",
  "id": "0x48d6ada4578e8064067de283278cb040e9e51cc52e0c6a991885794a379fd394",
  "version": 1,
  "moduleMap": {
    "cocaine": ""
  },
  "typeOriginTable": [
    {
      "module_name": "cocaine",
      "datatype_name": "COCAINE",
      "package": "0x48d6ada4578e8064067de283278cb040e9e51cc52e0c6a991885794a379fd394"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}