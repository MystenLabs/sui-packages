module 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::sub(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::sub(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::div(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::mul(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1)), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(v0)))), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::sub(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::div(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::mul(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0)), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::add(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::sub(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::div(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::mul(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg1)), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::as_u64(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::add(0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg0), 0xa950091aea5928da3857fd6d03e52df535d867a87dde3d5ba79781d12bf52e0e::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

