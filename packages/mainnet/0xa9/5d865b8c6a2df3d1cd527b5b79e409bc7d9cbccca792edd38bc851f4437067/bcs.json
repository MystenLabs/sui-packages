{
  "dataType": "package",
  "id": "0xa95d865b8c6a2df3d1cd527b5b79e409bc7d9cbccca792edd38bc851f4437067",
  "version": 1,
  "moduleMap": {
    "luba": ""
  },
  "typeOriginTable": [
    {
      "module_name": "luba",
      "datatype_name": "LUBA",
      "package": "0xa95d865b8c6a2df3d1cd527b5b79e409bc7d9cbccca792edd38bc851f4437067"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}