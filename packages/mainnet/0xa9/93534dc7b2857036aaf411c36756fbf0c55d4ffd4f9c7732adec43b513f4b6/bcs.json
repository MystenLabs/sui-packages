{
  "dataType": "package",
  "id": "0xa993534dc7b2857036aaf411c36756fbf0c55d4ffd4f9c7732adec43b513f4b6",
  "version": 1,
  "moduleMap": {
    "robo": ""
  },
  "typeOriginTable": [
    {
      "module_name": "robo",
      "datatype_name": "ROBO",
      "package": "0xa993534dc7b2857036aaf411c36756fbf0c55d4ffd4f9c7732adec43b513f4b6"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}