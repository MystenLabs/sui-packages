{
  "dataType": "package",
  "id": "0x9800f9d2fd8206a284c747be6781783aa4c56bad5e2eb29f302162e4451450b0",
  "version": 1,
  "moduleMap": {
    "slushc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "slushc",
      "datatype_name": "SLUSHC",
      "package": "0x9800f9d2fd8206a284c747be6781783aa4c56bad5e2eb29f302162e4451450b0"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 19
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 43
    }
  },
  "functionMap": {
    "slushc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9800f9d2fd8206a284c747be6781783aa4c56bad5e2eb29f302162e4451450b0::slushc::SLUSHC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}