{
  "dataType": "package",
  "id": "0xa3f5ec2d9e5dd714de05316acb28dbb5da84c78a49181b0cb5b91971b9b2a4bf",
  "version": 1,
  "moduleMap": {
    "wilfred": ""
  },
  "typeOriginTable": [
    {
      "module_name": "wilfred",
      "datatype_name": "WILFRED",
      "package": "0xa3f5ec2d9e5dd714de05316acb28dbb5da84c78a49181b0cb5b91971b9b2a4bf"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "wilfred": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xa3f5ec2d9e5dd714de05316acb28dbb5da84c78a49181b0cb5b91971b9b2a4bf::wilfred::WILFRED",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}