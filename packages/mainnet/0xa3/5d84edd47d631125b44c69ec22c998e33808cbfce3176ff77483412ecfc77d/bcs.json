{
  "dataType": "package",
  "id": "0xa35d84edd47d631125b44c69ec22c998e33808cbfce3176ff77483412ecfc77d",
  "version": 1,
  "moduleMap": {
    "copper": ""
  },
  "typeOriginTable": [
    {
      "module_name": "copper",
      "datatype_name": "COPPER",
      "package": "0xa35d84edd47d631125b44c69ec22c998e33808cbfce3176ff77483412ecfc77d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}