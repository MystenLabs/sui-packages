module 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::sub(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::sub(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::div(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::mul(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1)), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(v0)))), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::sub(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::div(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::mul(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0)), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::add(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::sub(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::div(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::mul(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg1)), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::as_u64(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::add(0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg0), 0xabfa90272b75fd411b04e6efc172e9f5b8480567f045bcdd7601328d5af4eaa4::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

