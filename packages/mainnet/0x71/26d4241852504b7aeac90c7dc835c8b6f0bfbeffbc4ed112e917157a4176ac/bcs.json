{
  "dataType": "package",
  "id": "0x7126d4241852504b7aeac90c7dc835c8b6f0bfbeffbc4ed112e917157a4176ac",
  "version": 1,
  "moduleMap": {
    "foxsui": ""
  },
  "typeOriginTable": [
    {
      "module_name": "foxsui",
      "datatype_name": "FOXSUI",
      "package": "0x7126d4241852504b7aeac90c7dc835c8b6f0bfbeffbc4ed112e917157a4176ac"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "foxsui": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x7126d4241852504b7aeac90c7dc835c8b6f0bfbeffbc4ed112e917157a4176ac::foxsui::FOXSUI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}