{
  "dataType": "package",
  "id": "0x9e2e0cb01abde27cf1c62c5952bb8a97985063aff5963f46f52fc94cc891a429",
  "version": 1,
  "moduleMap": {
    "test": ""
  },
  "typeOriginTable": [
    {
      "module_name": "test",
      "datatype_name": "TEST",
      "package": "0x9e2e0cb01abde27cf1c62c5952bb8a97985063aff5963f46f52fc94cc891a429"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "test": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9e2e0cb01abde27cf1c62c5952bb8a97985063aff5963f46f52fc94cc891a429::test::TEST",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}