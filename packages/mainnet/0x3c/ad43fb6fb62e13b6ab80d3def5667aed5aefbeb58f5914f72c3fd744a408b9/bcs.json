{
  "dataType": "package",
  "id": "0x3cad43fb6fb62e13b6ab80d3def5667aed5aefbeb58f5914f72c3fd744a408b9",
  "version": 1,
  "moduleMap": {
    "trump": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trump",
      "datatype_name": "TRUMP",
      "package": "0x3cad43fb6fb62e13b6ab80d3def5667aed5aefbeb58f5914f72c3fd744a408b9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}