{
  "dataType": "package",
  "id": "0x6459dd81c6b4854b92255d1b4e0b4b4fccb55cf9a4aceccd6454c217e52fbed5",
  "version": 1,
  "moduleMap": {
    "suibatman": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suibatman",
      "datatype_name": "SUIBATMAN",
      "package": "0x6459dd81c6b4854b92255d1b4e0b4b4fccb55cf9a4aceccd6454c217e52fbed5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}