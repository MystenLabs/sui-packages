{
  "dataType": "package",
  "id": "0x643394b8952af4cbbe4a3cb8771dc2113e3315ba5ec064ace49ec0c10d2d93da",
  "version": 1,
  "moduleMap": {
    "poge": ""
  },
  "typeOriginTable": [
    {
      "module_name": "poge",
      "datatype_name": "POGE",
      "package": "0x643394b8952af4cbbe4a3cb8771dc2113e3315ba5ec064ace49ec0c10d2d93da"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "poge": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x643394b8952af4cbbe4a3cb8771dc2113e3315ba5ec064ace49ec0c10d2d93da::poge::POGE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}