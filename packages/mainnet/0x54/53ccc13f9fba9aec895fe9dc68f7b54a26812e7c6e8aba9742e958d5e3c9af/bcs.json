{
  "dataType": "package",
  "id": "0x5453ccc13f9fba9aec895fe9dc68f7b54a26812e7c6e8aba9742e958d5e3c9af",
  "version": 1,
  "moduleMap": {
    "seed": ""
  },
  "typeOriginTable": [
    {
      "module_name": "seed",
      "datatype_name": "SEED",
      "package": "0x5453ccc13f9fba9aec895fe9dc68f7b54a26812e7c6e8aba9742e958d5e3c9af"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    },
    "0x8135dda2a2b575ef87654aa1115a46da63ea9a387abb5f7cdb93df062af7a937": {
      "upgraded_id": "0x8135dda2a2b575ef87654aa1115a46da63ea9a387abb5f7cdb93df062af7a937",
      "upgraded_version": 1
    }
  },
  "functionMap": {
    "seed": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5453ccc13f9fba9aec895fe9dc68f7b54a26812e7c6e8aba9742e958d5e3c9af::seed::SEED",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}