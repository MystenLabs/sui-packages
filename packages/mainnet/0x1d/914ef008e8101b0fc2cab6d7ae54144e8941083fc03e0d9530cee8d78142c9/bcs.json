{
  "dataType": "package",
  "id": "0x1d914ef008e8101b0fc2cab6d7ae54144e8941083fc03e0d9530cee8d78142c9",
  "version": 1,
  "moduleMap": {
    "penguin": ""
  },
  "typeOriginTable": [
    {
      "module_name": "penguin",
      "datatype_name": "PENGUIN",
      "package": "0x1d914ef008e8101b0fc2cab6d7ae54144e8941083fc03e0d9530cee8d78142c9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 14
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 31
    }
  },
  "functionMap": {
    "penguin": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1d914ef008e8101b0fc2cab6d7ae54144e8941083fc03e0d9530cee8d78142c9::penguin::PENGUIN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}