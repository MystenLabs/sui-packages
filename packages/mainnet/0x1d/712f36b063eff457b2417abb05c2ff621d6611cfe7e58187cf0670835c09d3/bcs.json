{
  "dataType": "package",
  "id": "0x1d712f36b063eff457b2417abb05c2ff621d6611cfe7e58187cf0670835c09d3",
  "version": 1,
  "moduleMap": {
    "slowrunner": ""
  },
  "typeOriginTable": [
    {
      "module_name": "slowrunner",
      "datatype_name": "SLOWRUNNER",
      "package": "0x1d712f36b063eff457b2417abb05c2ff621d6611cfe7e58187cf0670835c09d3"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "slowrunner": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1d712f36b063eff457b2417abb05c2ff621d6611cfe7e58187cf0670835c09d3::slowrunner::SLOWRUNNER",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}