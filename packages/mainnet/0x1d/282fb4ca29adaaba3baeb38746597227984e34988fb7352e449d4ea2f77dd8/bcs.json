{
  "dataType": "package",
  "id": "0x1d282fb4ca29adaaba3baeb38746597227984e34988fb7352e449d4ea2f77dd8",
  "version": 1,
  "moduleMap": {
    "busy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "busy",
      "datatype_name": "BUSY",
      "package": "0x1d282fb4ca29adaaba3baeb38746597227984e34988fb7352e449d4ea2f77dd8"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "busy": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1d282fb4ca29adaaba3baeb38746597227984e34988fb7352e449d4ea2f77dd8::busy::BUSY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}