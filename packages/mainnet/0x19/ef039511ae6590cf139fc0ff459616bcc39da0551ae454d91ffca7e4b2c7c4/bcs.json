{
  "dataType": "package",
  "id": "0x19ef039511ae6590cf139fc0ff459616bcc39da0551ae454d91ffca7e4b2c7c4",
  "version": 1,
  "moduleMap": {
    "sam": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sam",
      "datatype_name": "SAM",
      "package": "0x19ef039511ae6590cf139fc0ff459616bcc39da0551ae454d91ffca7e4b2c7c4"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 14
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 32
    }
  },
  "functionMap": {
    "sam": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x19ef039511ae6590cf139fc0ff459616bcc39da0551ae454d91ffca7e4b2c7c4::sam::SAM",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}