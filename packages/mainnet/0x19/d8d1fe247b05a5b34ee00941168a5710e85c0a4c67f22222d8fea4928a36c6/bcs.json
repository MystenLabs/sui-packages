{
  "dataType": "package",
  "id": "0x19d8d1fe247b05a5b34ee00941168a5710e85c0a4c67f22222d8fea4928a36c6",
  "version": 1,
  "moduleMap": {
    "bmusk": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bmusk",
      "datatype_name": "BMUSK",
      "package": "0x19d8d1fe247b05a5b34ee00941168a5710e85c0a4c67f22222d8fea4928a36c6"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}