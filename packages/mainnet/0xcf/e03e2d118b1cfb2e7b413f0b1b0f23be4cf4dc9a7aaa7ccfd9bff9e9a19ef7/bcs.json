{
  "dataType": "package",
  "id": "0xcfe03e2d118b1cfb2e7b413f0b1b0f23be4cf4dc9a7aaa7ccfd9bff9e9a19ef7",
  "version": 1,
  "moduleMap": {
    "cati": ""
  },
  "typeOriginTable": [
    {
      "module_name": "cati",
      "datatype_name": "CATI",
      "package": "0xcfe03e2d118b1cfb2e7b413f0b1b0f23be4cf4dc9a7aaa7ccfd9bff9e9a19ef7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 26
    }
  }
}