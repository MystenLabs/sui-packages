{
  "dataType": "package",
  "id": "0x97a78b2a1cca81de8364a7dd38e79ba18d20c71b81e4a53234ec96813a76ce3c",
  "version": 1,
  "moduleMap": {
    "suiface": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suiface",
      "datatype_name": "SUIFACE",
      "package": "0x97a78b2a1cca81de8364a7dd38e79ba18d20c71b81e4a53234ec96813a76ce3c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "suiface": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x97a78b2a1cca81de8364a7dd38e79ba18d20c71b81e4a53234ec96813a76ce3c::suiface::SUIFACE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}