{
  "dataType": "package",
  "id": "0x97fc4a642fde583a1a0b7f83ae5150f7c350a18a5253946ba91178b81b8bf06c",
  "version": 1,
  "moduleMap": {
    "shuik": ""
  },
  "typeOriginTable": [
    {
      "module_name": "shuik",
      "datatype_name": "SHUIK",
      "package": "0x97fc4a642fde583a1a0b7f83ae5150f7c350a18a5253946ba91178b81b8bf06c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 3
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 16
    }
  },
  "functionMap": {
    "shuik": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x97fc4a642fde583a1a0b7f83ae5150f7c350a18a5253946ba91178b81b8bf06c::shuik::SHUIK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}