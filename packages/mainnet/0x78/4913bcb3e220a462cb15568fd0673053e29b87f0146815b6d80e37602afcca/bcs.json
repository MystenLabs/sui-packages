{
  "dataType": "package",
  "id": "0x784913bcb3e220a462cb15568fd0673053e29b87f0146815b6d80e37602afcca",
  "version": 1,
  "moduleMap": {
    "gregeregr": ""
  },
  "typeOriginTable": [
    {
      "module_name": "gregeregr",
      "datatype_name": "GREGEREGR",
      "package": "0x784913bcb3e220a462cb15568fd0673053e29b87f0146815b6d80e37602afcca"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "gregeregr": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x784913bcb3e220a462cb15568fd0673053e29b87f0146815b6d80e37602afcca::gregeregr::GREGEREGR",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}