{
  "dataType": "package",
  "id": "0x787b226a96aa9314ee7933efa0549d6e99f0a739a1740708132a5e84e068c15d",
  "version": 1,
  "moduleMap": {
    "blr": ""
  },
  "typeOriginTable": [
    {
      "module_name": "blr",
      "datatype_name": "BLR",
      "package": "0x787b226a96aa9314ee7933efa0549d6e99f0a739a1740708132a5e84e068c15d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 15
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 33
    }
  },
  "functionMap": {
    "blr": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x787b226a96aa9314ee7933efa0549d6e99f0a739a1740708132a5e84e068c15d::blr::BLR",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}