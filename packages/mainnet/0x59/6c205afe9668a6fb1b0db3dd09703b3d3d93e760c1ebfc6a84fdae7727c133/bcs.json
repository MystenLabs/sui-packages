{
  "dataType": "package",
  "id": "0x596c205afe9668a6fb1b0db3dd09703b3d3d93e760c1ebfc6a84fdae7727c133",
  "version": 1,
  "moduleMap": {
    "perica": ""
  },
  "typeOriginTable": [
    {
      "module_name": "perica",
      "datatype_name": "PERICA",
      "package": "0x596c205afe9668a6fb1b0db3dd09703b3d3d93e760c1ebfc6a84fdae7727c133"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}