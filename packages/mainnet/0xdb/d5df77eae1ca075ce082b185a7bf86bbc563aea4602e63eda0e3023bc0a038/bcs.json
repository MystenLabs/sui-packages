{
  "dataType": "package",
  "id": "0xdbd5df77eae1ca075ce082b185a7bf86bbc563aea4602e63eda0e3023bc0a038",
  "version": 1,
  "moduleMap": {
    "goat": ""
  },
  "typeOriginTable": [
    {
      "module_name": "goat",
      "datatype_name": "GOAT",
      "package": "0xdbd5df77eae1ca075ce082b185a7bf86bbc563aea4602e63eda0e3023bc0a038"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}