{
  "dataType": "package",
  "id": "0x6867c975b1fa8b40b15c193f02149ec0859e230be431ca5f2b77bf14753ede0f",
  "version": 1,
  "moduleMap": {
    "kacat": ""
  },
  "typeOriginTable": [
    {
      "module_name": "kacat",
      "datatype_name": "KACAT",
      "package": "0x6867c975b1fa8b40b15c193f02149ec0859e230be431ca5f2b77bf14753ede0f"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}