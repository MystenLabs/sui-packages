{
  "dataType": "package",
  "id": "0x68c66da07cca8e5f0e9691b7a254b2eefe4742ce9cb56dd9750ab4b13b690ade",
  "version": 1,
  "moduleMap": {
    "dapy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "dapy",
      "datatype_name": "DAPY",
      "package": "0x68c66da07cca8e5f0e9691b7a254b2eefe4742ce9cb56dd9750ab4b13b690ade"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  }
}