{
  "dataType": "package",
  "id": "0x9455639dfe2f5e5c1afedcd12345367cb02e89f9c363f049c8e3f386e2d07558",
  "version": 1,
  "moduleMap": {
    "trenchers": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trenchers",
      "datatype_name": "TRENCHERS",
      "package": "0x9455639dfe2f5e5c1afedcd12345367cb02e89f9c363f049c8e3f386e2d07558"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "trenchers": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9455639dfe2f5e5c1afedcd12345367cb02e89f9c363f049c8e3f386e2d07558::trenchers::TRENCHERS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}