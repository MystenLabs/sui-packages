{
  "dataType": "package",
  "id": "0x106d97ea2ac32d11e722534dbd918c877eb982e2f30c33cd8c492328f0ccc002",
  "version": 1,
  "moduleMap": {
    "yogst": ""
  },
  "typeOriginTable": [
    {
      "module_name": "yogst",
      "datatype_name": "YOGST",
      "package": "0x106d97ea2ac32d11e722534dbd918c877eb982e2f30c33cd8c492328f0ccc002"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "yogst": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x106d97ea2ac32d11e722534dbd918c877eb982e2f30c33cd8c492328f0ccc002::yogst::YOGST",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}