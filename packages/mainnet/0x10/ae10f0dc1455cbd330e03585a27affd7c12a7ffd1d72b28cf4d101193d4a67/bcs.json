{
  "dataType": "package",
  "id": "0x10ae10f0dc1455cbd330e03585a27affd7c12a7ffd1d72b28cf4d101193d4a67",
  "version": 1,
  "moduleMap": {
    "rst": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rst",
      "datatype_name": "RST",
      "package": "0x10ae10f0dc1455cbd330e03585a27affd7c12a7ffd1d72b28cf4d101193d4a67"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 3
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 16
    }
  },
  "functionMap": {
    "rst": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x10ae10f0dc1455cbd330e03585a27affd7c12a7ffd1d72b28cf4d101193d4a67::rst::RST",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}