{
  "dataType": "package",
  "id": "0x0df50d766b6a6fa4fb906f0345a4c71b629940a04f14dfd4cd99136ef198045d",
  "version": 1,
  "moduleMap": {
    "ikcoin": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ikcoin",
      "datatype_name": "IKCOIN",
      "package": "0x0df50d766b6a6fa4fb906f0345a4c71b629940a04f14dfd4cd99136ef198045d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 4
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 19
    }
  },
  "functionMap": {
    "ikcoin": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x0df50d766b6a6fa4fb906f0345a4c71b629940a04f14dfd4cd99136ef198045d::ikcoin::IKCOIN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}