{
  "dataType": "package",
  "id": "0x345a41fbc03ba4db860fe1a484d8491393127b85c04a611d95193c939d12300e",
  "version": 1,
  "moduleMap": {
    "trump": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trump",
      "datatype_name": "TRUMP",
      "package": "0x345a41fbc03ba4db860fe1a484d8491393127b85c04a611d95193c939d12300e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}