{
  "dataType": "package",
  "id": "0x34579bba278c04b658509056c68f463a157beca07e72e32dcb639f645664d7a6",
  "version": 1,
  "moduleMap": {
    "vampy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "vampy",
      "datatype_name": "VAMPY",
      "package": "0x34579bba278c04b658509056c68f463a157beca07e72e32dcb639f645664d7a6"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "vampy": {
      "addToDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x34579bba278c04b658509056c68f463a157beca07e72e32dcb639f645664d7a6::vampy::VAMPY>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x34579bba278c04b658509056c68f463a157beca07e72e32dcb639f645664d7a6::vampy::VAMPY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "removeFromDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x34579bba278c04b658509056c68f463a157beca07e72e32dcb639f645664d7a6::vampy::VAMPY>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}