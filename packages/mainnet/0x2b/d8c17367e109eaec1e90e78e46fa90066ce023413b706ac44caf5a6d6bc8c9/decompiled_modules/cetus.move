module 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::cetus {
    public fun add_liquidity<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg4: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: u128, arg8: &0x2::clock::Clock) : 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::AddLiquidityReceipt<T0, T1> {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pc_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373024697253887);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373024697253887);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223373024697253887);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg3);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg4);
        let v2 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity<T0, T1>(arg6, arg5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), arg7, arg8);
        let (v3, v4) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_pay_amount<T0, T1>(&v2);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_current_global_l(arg1, arg7);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::current_global_l(arg1) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_global_l(arg1), 9223373024697253887);
        assert!(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_position_l(arg1), 9223373024697253887);
        let v5 = arg0;
        let v6 = &v1;
        let (v7, v8) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5));
        let v9 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v7), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v8), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5))));
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v9, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>()), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1)), 9223373024697253887);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_emit(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::add_liquidity_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), arg7, v3, v4));
        v2
    }

    public fun add_liquidity_fix_coin<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg4: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: u64, arg8: bool, arg9: &0x2::clock::Clock) : 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::AddLiquidityReceipt<T0, T1> {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pc_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373119186534399);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373119186534399);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223373119186534399);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg3);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg4);
        let v2 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0);
        let v3 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_fix_coin<T0, T1>(arg6, arg5, v2, arg7, arg8, arg9);
        let v4 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(v2) - 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(v2);
        let (v5, v6) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_pay_amount<T0, T1>(&v3);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_current_global_l(arg1, v4);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::current_global_l(arg1) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_global_l(arg1), 9223373119186534399);
        assert!(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_position_l(arg1), 9223373119186534399);
        let v7 = arg0;
        let v8 = &v1;
        let (v9, v10) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7));
        let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v9), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v10), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7))));
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v11, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>()), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1)), 9223373119186534399);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_emit(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::add_liquidity_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), v4, v5, v6));
        v3
    }

    public fun borrow_for_position_x<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::CreatePositionTicket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg3: &0x2::clock::Clock) {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::cpt_config_id<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372307437715455);
        if (0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dx<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0) == 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_x<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0))) {
        } else {
            let (v0, v1) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::borrow<T0, T2>(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dx<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), arg3);
            0x2::balance::join<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_x_mut<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), v0);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_add<T0, T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::cpt_debt_bag_mut<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), v1);
        };
    }

    public fun borrow_for_position_y<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::CreatePositionTicket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T2>, arg3: &0x2::clock::Clock) {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::cpt_config_id<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372337502486527);
        if (0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dy<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0) == 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_x<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0))) {
        } else {
            let (v0, v1) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::borrow<T1, T2>(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dy<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), arg3);
            0x2::balance::join<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_y_mut<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), v0);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_add<T1, T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::cpt_debt_bag_mut<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg0), v1);
        };
    }

    public fun calc_deposit_amounts_by_liquidity<T0, T1>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg1: 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32, arg2: 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32, arg3: u128) : (u64, u64) {
        0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::get_amount_by_liquidity(arg1, arg2, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_tick_index<T0, T1>(arg0), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg0), arg3, true)
    }

    public fun create_deleverage_ticket<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg4: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg6: u128, arg7: &0x2::clock::Clock, arg8: &mut 0x2::tx_context::TxContext) : (0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::DeleverageTicket, 0xa0501135cff2a49568b1fd32407372300f57ebc5949aaabbcc33d16028c58222::access::ActionRequest) {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372513596145663);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg4), 9223372513596145663);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372513596145663);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, true);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg3);
        let v2 = arg0;
        let v3 = &v1;
        let (v4, v5) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2));
        let v6 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v4), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let v8 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v6, v7, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg4), 0, 0, 0, 0, 0);
        let v9 = if (!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v6, v7, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1))) {
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), false, false, v8)
        } else {
            let v10 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::min_u128(arg6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_max_deleverage_delta_l(&v6, v7, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_deleverage_factor_bps(arg1)));
            let (v11, v12) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::remove_liquidity<T0, T1>(arg5, arg4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v10, arg7);
            let v13 = v12;
            let v14 = v11;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_l(&mut v8, v10);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_x(&mut v8, 0x2::balance::value<T0>(&v14));
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_y(&mut v8, 0x2::balance::value<T1>(&v13));
            0x2::balance::join<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v14);
            0x2::balance::join<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v13);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::decrease_current_global_l(arg1, v10);
            let v15 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            let v16 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v15, v16, v8)
        };
        (v9, 0xa0501135cff2a49568b1fd32407372300f57ebc5949aaabbcc33d16028c58222::access::new_request<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ADeleverage>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::a_deleverage(), arg8))
    }

    public fun create_deleverage_ticket_for_liquidation<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg4: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg6: &0x2::clock::Clock) : 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::DeleverageTicket {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372582315622399);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg4), 9223372582315622399);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372582315622399);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, true);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg3);
        let v2 = arg0;
        let v3 = &v1;
        let (v4, v5) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2));
        let v6 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v4), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let v8 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v6, v7, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg4), 0, 0, 0, 0, 0);
        if (!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v6, v7, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1))) {
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), false, false, v8)
        } else {
            let v10 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::min_u128(340282366920938463463374607431768211455, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_max_deleverage_delta_l(&v6, v7, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_deleverage_factor_bps(arg1)));
            let (v11, v12) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::remove_liquidity<T0, T1>(arg5, arg4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v10, arg6);
            let v13 = v12;
            let v14 = v11;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_l(&mut v8, v10);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_x(&mut v8, 0x2::balance::value<T0>(&v14));
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_y(&mut v8, 0x2::balance::value<T1>(&v13));
            0x2::balance::join<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v14);
            0x2::balance::join<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v13);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::decrease_current_global_l(arg1, v10);
            let v15 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            let v16 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v15, v16, v8)
        }
    }

    public fun create_position<T0, T1>(arg0: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg1: 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::CreatePositionTicket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>, arg2: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg3: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg4: 0x2::balance::Balance<0x2::sui::SUI>, arg5: &0x2::clock::Clock, arg6: &mut 0x2::tx_context::TxContext) : 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::cpt_config_id<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(&arg1) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg0), 9223372389042094079);
        assert!(0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg2) == 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg0), 9223372389042094079);
        assert!(0x2::balance::value<0x2::sui::SUI>(&arg4) == 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_creation_fee_sui(arg0), 9223372389042094079);
        assert!(0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_x<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(&arg1)) == 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dx<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(&arg1), 9223372389042094079);
        assert!(0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::borrowed_y<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(&arg1)) == 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::dy<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(&arg1), 9223372389042094079);
        let (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::destroy_create_position_ticket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(arg1);
        let v11 = v7;
        let v12 = v6;
        let (v13, v14) = calc_deposit_amounts_by_liquidity<T0, T1>(arg2, v1, v2, v5);
        let v15 = v8;
        if (0x2::balance::value<T0>(&v15) < v13) {
            0x2::balance::join<T0>(&mut v15, 0x2::balance::split<T0>(&mut v12, v13 - 0x2::balance::value<T0>(&v15)));
        };
        let v16 = v9;
        if (0x2::balance::value<T1>(&v16) < v14) {
            0x2::balance::join<T1>(&mut v16, 0x2::balance::split<T1>(&mut v11, v14 - 0x2::balance::value<T1>(&v16)));
        };
        let v17 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::open_position<T0, T1>(arg3, arg2, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::as_u32(v1), 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::as_u32(v2), arg6);
        0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::repay_add_liquidity<T0, T1>(arg3, arg2, v15, v16, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity<T0, T1>(arg3, arg2, &mut v17, v5, arg5));
        let v18 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::balance_bag::empty(arg6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::balance_bag::add<0x2::sui::SUI>(&mut v18, arg4);
        let v19 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_constructor<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg0), v17, v12, v11, v10, v18, arg6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::emit_position_creation_info(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(&v19), v0, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v1), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v2), v5, v13, v14, 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(&v19)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(&v19)), v3, v4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_creation_fee_sui(arg0));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_share_object<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v19);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_cap_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(&v19), arg6)
    }

    public fun create_position_ticket<T0, T1>(arg0: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32, arg3: 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32, arg4: 0x2::balance::Balance<T0>, arg5: 0x2::balance::Balance<T1>, arg6: u128, arg7: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg8: &mut 0x2::tx_context::TxContext) : 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::CreatePositionTicket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32> {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_config_version(arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::allow_new_positions(arg1), 9223372268783009791);
        assert!(0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg0) == 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1), 9223372268783009791);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg7);
        assert!(arg6 <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_position_l(arg1), 9223372268783009791);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::current_global_l(arg1) + arg6 <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_global_l(arg1), 9223372268783009791);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_current_global_l(arg1, arg6);
        let v1 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_tick_index<T0, T1>(arg0);
        let v2 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg0);
        assert!(0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::lte(arg2, v1), 9223372268783009791);
        assert!(0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::lt(v1, arg3), 9223372268783009791);
        let v3 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let v4 = (v2 as u256) * (v2 as u256);
        let v5 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::min_u256(v3, v4);
        let v6 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::max_u256(v3, v4);
        let (v7, v8) = calc_deposit_amounts_by_liquidity<T0, T1>(arg0, arg2, arg3, arg6);
        let (v9, v10) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::calc_borrow_amt(0x2::balance::value<T0>(&arg4), v7);
        let (v11, v12) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::calc_borrow_amt(0x2::balance::value<T1>(&arg5), v8);
        let v13 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(arg2), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(arg3), arg6, v10, v12, v9, v11);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_is_valid(arg1, &v13, v5, v6), 9223372268783009791);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::init_margin_is_valid(arg1, &v13, v5, v6), 9223372268783009791);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::new_create_position_ticket<T0, T1, 0x714a63a0dba6da4f017b42d5d0fb78867f18bcde904868e51d951a5a6f5b7f57::i32::I32>(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), arg2, arg3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::dx(&v13), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::dy(&v13), arg6, arg4, arg5, 0x2::balance::zero<T0>(), 0x2::balance::zero<T1>(), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::empty_facil_debt_bag(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::LendFacilCap>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1)), arg8))
    }

    public fun deleverage<T0, T1, T2, T3>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg4: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T3>, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: u128, arg8: &0x2::clock::Clock, arg9: &mut 0x2::tx_context::TxContext) : 0xa0501135cff2a49568b1fd32407372300f57ebc5949aaabbcc33d16028c58222::access::ActionRequest {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372663920001023);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::empty(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::LendFacilCap>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1)));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T0, T2>(&mut v0, arg3, arg8);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T1, T3>(&mut v0, arg4, arg8);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372663920001023);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223372663920001023);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372663920001023);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, true);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v2 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, &v0);
        let v3 = arg0;
        let v4 = &v2;
        let (v5, v6) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v6), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))));
        let v8 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v1, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let v9 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v7, v8, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), 0, 0, 0, 0, 0);
        let v10 = if (!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v7, v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1))) {
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), false, false, v9)
        } else {
            let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::min_u128(arg7, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_max_deleverage_delta_l(&v7, v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_deleverage_factor_bps(arg1)));
            let (v12, v13) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::remove_liquidity<T0, T1>(arg6, arg5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v11, arg8);
            let v14 = v13;
            let v15 = v12;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_l(&mut v9, v11);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_x(&mut v9, 0x2::balance::value<T0>(&v15));
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_y(&mut v9, 0x2::balance::value<T1>(&v14));
            0x2::balance::join<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v15);
            0x2::balance::join<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v14);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::decrease_current_global_l(arg1, v11);
            let v16 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            let v17 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v16, v17, v9)
        };
        let v18 = v10;
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_repay_x<T0, T1, T2, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, &mut v18, arg3, arg8);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_repay_y<T0, T1, T3, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, &mut v18, arg4, arg8);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::destroy_deleverage_ticket<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, v18);
        0xa0501135cff2a49568b1fd32407372300f57ebc5949aaabbcc33d16028c58222::access::new_request<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ADeleverage>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::a_deleverage(), arg9)
    }

    public fun deleverage_for_liquidation<T0, T1, T2, T3>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg4: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T3>, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: &0x2::clock::Clock) {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372741229412351);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::empty(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::LendFacilCap>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1)));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T0, T2>(&mut v0, arg3, arg7);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T1, T3>(&mut v0, arg4, arg7);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372741229412351);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223372741229412351);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372741229412351);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, true);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v2 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, &v0);
        let v3 = arg0;
        let v4 = &v2;
        let (v5, v6) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v6), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v4, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))));
        let v8 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v1, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let v9 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v7, v8, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), 0, 0, 0, 0, 0);
        let v10 = if (!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v7, v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1))) {
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), false, false, v9)
        } else {
            let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::min_u128(340282366920938463463374607431768211455, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_max_deleverage_delta_l(&v7, v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_deleverage_factor_bps(arg1)));
            let (v12, v13) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::remove_liquidity<T0, T1>(arg6, arg5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v11, arg7);
            let v14 = v13;
            let v15 = v12;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_l(&mut v9, v11);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_x(&mut v9, 0x2::balance::value<T0>(&v15));
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::set_delta_y(&mut v9, 0x2::balance::value<T1>(&v14));
            0x2::balance::join<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v15);
            0x2::balance::join<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v14);
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::decrease_current_global_l(arg1, v11);
            let v16 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            let v17 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0 && 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) > 0;
            0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v16, v17, v9)
        };
        let v18 = v10;
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_repay_x<T0, T1, T2, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, &mut v18, arg3, arg7);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_ticket_repay_y<T0, T1, T3, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, &mut v18, arg4, arg7);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::destroy_deleverage_ticket<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, v18);
    }

    public fun liquidate_col_x<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg4: &mut 0x2::balance::Balance<T1>, arg5: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T2>, arg6: &0x2::clock::Clock) : 0x2::balance::Balance<T0> {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372809948889087);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372809948889087);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg3);
        let v2 = arg0;
        let v3 = &v1;
        let (v4, v5) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2));
        let v6 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v4), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let (v8, v9) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_liquidate_col_x(&v6, v7, 0x2::balance::value<T1>(arg4), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_bonus_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_liq_factor_bps(arg1));
        let v10 = 0x2::balance::split<T1>(arg4, v8);
        let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_take_all<T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0));
        let (_, v13) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::repay_max_possible<T1, T2>(arg5, &mut v11, &mut v10, arg6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_add<T1, T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v11);
        0x2::balance::join<T1>(arg4, v10);
        let v14 = 0x2::balance::split<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v9);
        let v15 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::calc_liq_fee_from_reward(arg1, v9);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::balance_bag::add<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::collected_fees_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), 0x2::balance::split<T0>(&mut v14, v15));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::emit_liquidation_info(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v6, v7, 0, v13, 0x2::balance::value<T0>(&v14), 0, v15, 0);
        v14
    }

    public fun liquidate_col_y<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg4: &mut 0x2::balance::Balance<T0>, arg5: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg6: &0x2::clock::Clock) : 0x2::balance::Balance<T1> {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372870078431231);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372870078431231);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg2);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg3);
        let v2 = arg0;
        let v3 = &v1;
        let (v4, v5) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2));
        let v6 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v4), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v5), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v2))));
        let v7 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>());
        let (v8, v9) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::calc_liquidate_col_y(&v6, v7, 0x2::balance::value<T0>(arg4), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_bonus_bps(arg1), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::base_liq_factor_bps(arg1));
        let v10 = 0x2::balance::split<T0>(arg4, v8);
        let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_take_all<T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0));
        let (_, v13) = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::repay_max_possible<T0, T2>(arg5, &mut v11, &mut v10, arg6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_add<T0, T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v11);
        0x2::balance::join<T0>(arg4, v10);
        let v14 = 0x2::balance::split<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v9);
        let v15 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::calc_liq_fee_from_reward(arg1, v9);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::balance_bag::add<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::collected_fees_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), 0x2::balance::split<T1>(&mut v14, v15));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::emit_liquidation_info(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), v6, v7, v13, 0, 0, 0x2::balance::value<T1>(&v14), 0, v15);
        v14
    }

    public fun rebalance_add_liquidity<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::RebalanceReceipt, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg4: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: u128, arg8: &0x2::clock::Clock) : 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::AddLiquidityReceipt<T0, T1> {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rr_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373467078885375);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373467078885375);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223373467078885375);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg3);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg4);
        let v2 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity<T0, T1>(arg6, arg5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), arg7, arg8);
        let (v3, v4) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_pay_amount<T0, T1>(&v2);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_current_global_l(arg1, arg7);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::current_global_l(arg1) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_global_l(arg1), 9223373467078885375);
        assert!(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_position_l(arg1), 9223373467078885375);
        let v5 = arg0;
        let v6 = &v1;
        let (v7, v8) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5));
        let v9 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v7), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v8), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v5))));
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v9, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>()), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1)), 9223373467078885375);
        let v10 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::add_liquidity_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), arg7, v3, v4);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_l(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_l(&v10));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_x(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_x(&v10));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_y(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_y(&v10));
        v2
    }

    public fun rebalance_add_liquidity_by_fix_coin<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::RebalanceReceipt, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg4: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::DebtInfo, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg7: u64, arg8: bool, arg9: &0x2::clock::Clock) : 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::AddLiquidityReceipt<T0, T1> {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rr_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373561568165887);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373561568165887);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg5), 9223373561568165887);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg3);
        let v1 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, arg4);
        let v2 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0);
        let v3 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_fix_coin<T0, T1>(arg6, arg5, v2, arg7, arg8, arg9);
        let v4 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(v2) - 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(v2);
        let (v5, v6) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::add_liquidity_pay_amount<T0, T1>(&v3);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_current_global_l(arg1, v4);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::current_global_l(arg1) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_global_l(arg1), 9223373561568165887);
        assert!(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) <= 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::max_position_l(arg1), 9223373561568165887);
        let v7 = arg0;
        let v8 = &v1;
        let (v9, v10) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7));
        let v11 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v9), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v10), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v7))));
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v11, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>()), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::deleverage_margin_bps(arg1)), 9223373561568165887);
        let v12 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::add_liquidity_info_constructor(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg5), v4, v5, v6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_l(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_l(&v12));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_x(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_x(&v12));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_delta_y(arg2, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ali_delta_y(&v12));
        v3
    }

    public fun rebalance_collect_fee<T0, T1>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::RebalanceReceipt, arg3: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig) : (0x2::balance::Balance<T0>, 0x2::balance::Balance<T1>) {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373316755030015);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rr_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373316755030015);
        let (v0, v1) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::collect_fee<T0, T1>(arg4, arg3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), true);
        let v2 = v1;
        let v3 = v0;
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_collected_amm_fee_x(arg2, 0x2::balance::value<T0>(&v3));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::increase_collected_amm_fee_y(arg2, 0x2::balance::value<T1>(&v2));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::take_rebalance_fee<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position, T0>(arg0, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rebalance_fee_bps(arg1), &mut v3, arg2);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::take_rebalance_fee<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position, T1>(arg0, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rebalance_fee_bps(arg1), &mut v2, arg2);
        (v3, v2)
    }

    public fun rebalance_collect_reward<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::RebalanceReceipt, arg3: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::rewarder::RewarderGlobalVault, arg6: &0x2::clock::Clock) : 0x2::balance::Balance<T2> {
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223373389769474047);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rr_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223373389769474047);
        let v0 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::collect_reward<T0, T1, T2>(arg4, arg3, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), arg5, true, arg6);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::add_amount_to_map<T2>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::collected_amm_rewards_mut(arg2), 0x2::balance::value<T2>(&v0));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::take_rebalance_fee<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position, T2>(arg0, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::rebalance_fee_bps(arg1), &mut v0, arg2);
        v0
    }

    public fun reduce<T0, T1, T2, T3>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig, arg2: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap, arg3: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::PythPriceInfo, arg4: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg5: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T3>, arg6: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg8: u128, arg9: &0x2::clock::Clock) : (0x2::balance::Balance<T0>, 0x2::balance::Balance<T1>, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ReductionRepaymentTicket<T2, T3>) {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::check_versions<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_config_id<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionConfig>(arg1), 9223372943092875263);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pool_object_id(arg1) == 0x2::object::id<0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>>(arg6), 9223372943092875263);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::ticket_active<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0) == false, 9223372943092875263);
        assert!(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::pc_position_id(arg2) == 0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>>(arg0), 9223372943092875263);
        let v0 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_price_info(arg1, arg3);
        let v1 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg6);
        let v2 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::empty(0x2::object::id<0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::LendFacilCap>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lend_facil_cap(arg1)));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T0, T2>(&mut v2, arg4, arg9);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::add_from_supply_pool<T1, T3>(&mut v2, arg5, arg9);
        let v3 = arg0;
        let v4 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::validate_debt_info(arg1, &v2);
        let v5 = &v4;
        let (v6, v7) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::tick_range(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3));
        let v8 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::create(0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v6), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::tick_math::get_sqrt_price_at_tick(v7), 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::debt_info::calc_repay_by_shares(v5, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_type_for_asset<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3)), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(v3))));
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::pyth::div_price_numeric_x128(&v0, 0x1::type_name::get<T0>(), 0x1::type_name::get<T1>()), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1)), 9223372943092875263);
        assert!(!0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_model_clmm::margin_below_threshold(&v8, (v1 as u256) * (v1 as u256), 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::liq_margin_bps(arg1)), 9223372943092875263);
        let v9 = 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::muldiv_u128(arg8, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::liquidity(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)), 18446744073709551616);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::muldiv_u128(arg8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)), 18446744073709551616);
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::muldiv_u128(arg8, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::fdb_get_share_amount_by_asset_type<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::position_debt_bag<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)), 18446744073709551616);
        let (v10, v11) = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::remove_liquidity<T0, T1>(arg7, arg6, 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::lp_position_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), v9, arg9);
        let v12 = v11;
        let v13 = v10;
        0x2::balance::value<T0>(&v13);
        0x2::balance::value<T1>(&v12);
        0x2::balance::join<T0>(&mut v13, 0x2::balance::split<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), (0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::muldiv_u128(arg8, (0x2::balance::value<T0>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_x<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) as u128), 18446744073709551616) as u64)));
        0x2::balance::join<T1>(&mut v12, 0x2::balance::split<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y_mut<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0), (0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::util::muldiv_u128(arg8, (0x2::balance::value<T1>(0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::col_y<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0)) as u128), 18446744073709551616) as u64)));
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::decrease_current_global_l(arg1, v9);
        abort 6666
    }

    public fun repay_debt_x<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap, arg2: &mut 0x2::balance::Balance<T0>, arg3: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T0, T2>, arg4: &0x2::clock::Clock) {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::repay_debt_x<T0, T1, T2, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, arg2, arg3, arg4);
    }

    public fun repay_debt_y<T0, T1, T2>(arg0: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::Position<T0, T1, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>, arg1: &0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::PositionCap, arg2: &mut 0x2::balance::Balance<T1>, arg3: &mut 0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::supply_pool::Pool<T1, T2>, arg4: &0x2::clock::Clock) {
        0xb4fae2fd636b996f92234b4d373cc92ce4486e67885d3c314610dd5426504b9::position_core_clmm::repay_debt_y<T0, T1, T2, 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::position::Position>(arg0, arg1, arg2, arg3, arg4);
    }

    public fun slippage_tolerance_assertion<T0, T1>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T1>, arg1: u256, arg2: u16) {
        let v0 = 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::current_sqrt_price<T0, T1>(arg0);
        let v1 = (v0 as u256) * (v0 as u256) >> 64;
        let v2 = arg1 >> 64;
        let v3 = v2 + v2 * (arg2 as u256) / 10000;
        let v4 = v2 - v2 * (arg2 as u256) / 10000;
        if (v1 < v4) {
        };
        assert!(v1 >= v4 && v1 <= v3, 9223372157113860095);
    }

    // decompiled from Move bytecode v6
}

