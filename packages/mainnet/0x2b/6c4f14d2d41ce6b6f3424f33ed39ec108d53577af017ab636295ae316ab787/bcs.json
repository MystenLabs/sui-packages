{
  "dataType": "package",
  "id": "0x2b6c4f14d2d41ce6b6f3424f33ed39ec108d53577af017ab636295ae316ab787",
  "version": 1,
  "moduleMap": {
    "fen": ""
  },
  "typeOriginTable": [
    {
      "module_name": "fen",
      "datatype_name": "FEN",
      "package": "0x2b6c4f14d2d41ce6b6f3424f33ed39ec108d53577af017ab636295ae316ab787"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  }
}