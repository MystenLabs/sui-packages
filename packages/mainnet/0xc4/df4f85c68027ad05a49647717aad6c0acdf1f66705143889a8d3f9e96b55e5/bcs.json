{
  "dataType": "package",
  "id": "0xc4df4f85c68027ad05a49647717aad6c0acdf1f66705143889a8d3f9e96b55e5",
  "version": 1,
  "moduleMap": {
    "unis": ""
  },
  "typeOriginTable": [
    {
      "module_name": "unis",
      "datatype_name": "UNIS",
      "package": "0xc4df4f85c68027ad05a49647717aad6c0acdf1f66705143889a8d3f9e96b55e5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}