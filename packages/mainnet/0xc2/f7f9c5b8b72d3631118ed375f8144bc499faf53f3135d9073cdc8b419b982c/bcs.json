{
  "dataType": "package",
  "id": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c",
  "version": 1,
  "moduleMap": {
    "voting": ""
  },
  "typeOriginTable": [
    {
      "module_name": "voting",
      "datatype_name": "Votes",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    },
    {
      "module_name": "voting",
      "datatype_name": "Project",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    },
    {
      "module_name": "voting",
      "datatype_name": "Approval",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    },
    {
      "module_name": "voting",
      "datatype_name": "AdminCap",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    },
    {
      "module_name": "voting",
      "datatype_name": "VOTING",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    },
    {
      "module_name": "voting",
      "datatype_name": "TransferApprovalCap",
      "package": "0xc2f7f9c5b8b72d3631118ed375f8144bc499faf53f3135d9073cdc8b419b982c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}