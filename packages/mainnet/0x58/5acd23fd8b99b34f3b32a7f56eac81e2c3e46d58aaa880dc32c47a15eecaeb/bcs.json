{
  "dataType": "package",
  "id": "0x585acd23fd8b99b34f3b32a7f56eac81e2c3e46d58aaa880dc32c47a15eecaeb",
  "version": 1,
  "moduleMap": {
    "sblub": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sblub",
      "datatype_name": "SBLUB",
      "package": "0x585acd23fd8b99b34f3b32a7f56eac81e2c3e46d58aaa880dc32c47a15eecaeb"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}