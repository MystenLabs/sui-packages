{
  "dataType": "package",
  "id": "0x58853d47f0990b3dcb695eb6cb2f88f45981872d373f4d40e5737e8947bd0531",
  "version": 1,
  "moduleMap": {
    "naga": ""
  },
  "typeOriginTable": [
    {
      "module_name": "naga",
      "datatype_name": "NAGA",
      "package": "0x58853d47f0990b3dcb695eb6cb2f88f45981872d373f4d40e5737e8947bd0531"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}