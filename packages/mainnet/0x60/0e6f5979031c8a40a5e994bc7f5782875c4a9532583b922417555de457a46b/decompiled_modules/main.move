module 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::main {
    public fun to_buy(arg0: u128, arg1: u128, arg2: u128, arg3: u128, arg4: u128, arg5: u128, arg6: u64) : (u64, u64, u64, u64) {
        let v0 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg0, arg1);
        let v1 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg3, arg4);
        assert!(v0 > v1, 0);
        let v2 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, arg1);
        let v3 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg5, arg4);
        let v4 = if (v2 > v3) {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v2, v2 + v3), v0 - v1)))
        } else {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v3, v2 + v3), v0 - v1)))
        };
        let v5 = if (v4 <= arg6) {
            v4
        } else {
            arg6
        };
        let v6 = v0 - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::to_128(v5), v2);
        (0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v6) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))), v5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v6))), v5)
    }

    public fun to_buy_liquidity_with_fee(arg0: u128, arg1: u128, arg2: u128, arg3: u128, arg4: u128, arg5: u128, arg6: u64) : (u64, u64, u64, u64) {
        let v0 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg0, arg1);
        let v1 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg3, arg4);
        assert!(v0 > v1, 0);
        let v2 = if (arg2 > arg5) {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, arg2 + arg5), v0 - v1)))
        } else {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg5, arg2 + arg5), v0 - v1)))
        };
        let v3 = if (v2 <= arg6) {
            v2
        } else {
            arg6
        };
        let v4 = v0 - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::to_128(v3), arg2);
        (0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v4) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))), v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v4))), v3)
    }

    public fun to_sell(arg0: u128, arg1: u128, arg2: u128, arg3: u128, arg4: u128, arg5: u128, arg6: u64) : (u64, u64, u64, u64) {
        let v0 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg0, arg1);
        let v1 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg3, arg4);
        assert!(v0 > v1, 0);
        let v2 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, arg1);
        let v3 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg5, arg4);
        let v4 = if (v2 > v3) {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v2, v2 + v3), 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))))
        } else {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v3, v2 + v3), 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))))
        };
        let v5 = if (v4 <= arg6) {
            v4
        } else {
            arg6
        };
        let v6 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(v2, v0) + 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::to_128(v5));
        (v5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v2, v0 - v6)), v5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(v3, v6 - v1)))
    }

    public fun to_sell_liquidity_with_fee(arg0: u128, arg1: u128, arg2: u128, arg3: u128, arg4: u128, arg5: u128, arg6: u64) : (u64, u64, u64, u64) {
        let v0 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg0, arg1);
        let v1 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg3, arg4);
        assert!(v0 > v1, 0);
        let v2 = if (arg2 > arg5) {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg5, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, arg2 + arg5), 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))))
        } else {
            0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg5, arg2 + arg5), 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v1) - 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::inv_128(v0))))
        };
        let v3 = if (v2 <= arg6) {
            v2
        } else {
            arg6
        };
        let v4 = 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::div_128(arg2, v0) + 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::to_128(v3));
        (v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg2, v0 - v4)), v3, 0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::floor(0x600e6f5979031c8a40a5e994bc7f5782875c4a9532583b922417555de457a46b::arithmetic::mul_128(arg5, v4 - v1)))
    }

    // decompiled from Move bytecode v6
}

