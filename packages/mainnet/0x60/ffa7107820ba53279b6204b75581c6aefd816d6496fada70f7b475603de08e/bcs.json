{
  "dataType": "package",
  "id": "0x60ffa7107820ba53279b6204b75581c6aefd816d6496fada70f7b475603de08e",
  "version": 1,
  "moduleMap": {
    "tex": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFjB8QB0wEIlwNgBvcD33gK1nwFDNt8NgARAQwCBgISAhMCFAACAgABAQcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAJAAEAARAFBgEAAgcICQECAgoMAQEAAw0FAQEMAw4OAQEMBA8KCwAFCwMEAAEEAgcDBwUNBA8CCAAHCAQAAgsCAQgACwMBCAABCgIBCAUBCQABCwEBCQABCAAHCQACCgIKAgoCCwEBCAUHCAQCCwMBCQALAgEJAAEGCAQBBQQHCwMBCQADBQcIBAELAwEIAAIJAAUBCwIBCAAMQ29pbk1ldGFkYXRhBk9wdGlvbgNURVgLVHJlYXN1cnlDYXAJVHhDb250ZXh0A1VybARjb2luD2NyZWF0ZV9jdXJyZW5jeQtkdW1teV9maWVsZARpbml0EW1pbnRfYW5kX3RyYW5zZmVyFW5ld191bnNhZmVfZnJvbV9ieXRlcwZvcHRpb24TcHVibGljX3NoYXJlX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUDdGV4CHRyYW5zZmVyCnR4X2NvbnRleHQDdXJsYP+nEHggulMnm2IEt1WBxq79gW1klvracPe0dWA94I4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgEJCgIEA1RFWAoCCwpUZXhhcyBUZXN0CgILCkRvIE5PdCBCVVkKAol4h3hkYXRhOmltYWdlL2pwZWc7YmFzZTY0LC85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC80Z0hZU1VORFgxQlNUMFpKVEVVQUFRRUFBQUhJQUFBQUFBUXdBQUJ0Ym5SeVVrZENJRmhaV2lBSDRBQUJBQUVBQUFBQUFBQmhZM053QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQTl0WUFBUUFBQUFEVExRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFsa1pYTmpBQUFBOEFBQUFDUnlXRmxhQUFBQkZBQUFBQlJuV0ZsYUFBQUJLQUFBQUJSaVdGbGFBQUFCUEFBQUFCUjNkSEIwQUFBQlVBQUFBQlJ5VkZKREFBQUJaQUFBQUNoblZGSkRBQUFCWkFBQUFDaGlWRkpEQUFBQlpBQUFBQ2hqY0hKMEFBQUJqQUFBQUR4dGJIVmpBQUFBQUFBQUFBRUFBQUFNWlc1VlV3QUFBQWdBQUFBY0FITUFVZ0JIQUVKWVdWb2dBQUFBQUFBQWI2SUFBRGoxQUFBRGtGaFpXaUFBQUFBQUFBQmltUUFBdDRVQUFCamFXRmxhSUFBQUFBQUFBQ1NnQUFBUGhBQUF0czlZV1ZvZ0FBQUFBQUFBOXRZQUFRQUFBQURUTFhCaGNtRUFBQUFBQUFRQUFBQUNabVlBQVBLbkFBQU5XUUFBRTlBQUFBcGJBQUFBQUFBQUFBQnRiSFZqQUFBQUFBQUFBQUVBQUFBTVpXNVZVd0FBQUNBQUFBQWNBRWNBYndCdkFHY0FiQUJsQUNBQVNRQnVBR01BTGdBZ0FESUFNQUF4QURiLzJ3QkRBQVlFQlFZRkJBWUdCUVlIQndZSUNoQUtDZ2tKQ2hRT0R3d1FGeFFZR0JjVUZoWWFIU1VmR2hzakhCWVdJQ3dnSXlZbktTb3BHUjh0TUMwb01DVW9LU2ovMndCREFRY0hCd29JQ2hNS0NoTW9HaFlhS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDai93QUFSQ0FENkFPc0RBU0lBQWhFQkF4RUIvOFFBSEFBQUFRUURBUUFBQUFBQUFBQUFBQUFBQUFJRkJnY0JBd1FJLzhRQVNoQUFBUU1EQWdJSUF3UUdDQVFFQndBQUFRQUNBd1FGRVFZaEVqRUhFeUpCVVdGeGdaR2hzUlFqTXNFVk0wSlNrdEVJSkRSRFUySnlnaFp6b3VFWEpqVmpSR1YxbExMdzhmL0VBQnNCQUFFRkFRRUFBQUFBQUFBQUFBQUFBQUFCQXdRRkJnSUgvOFFBT0JFQUFRTUNBd1FJQkFZQ0F3RUFBQUFBQVFBQ0F3UVJCUkloTVVGUmNRWVRNbUdCb2JIUkZDS1J3UlVqTTFMaDhFSnlGbUx4Z3YvYUFBd0RBUUFDRVFNUkFEOEFteXdoQ3VGbTBJUWhDRUlRaENFSVFoQ0VKTWtqSXdESTVyUVNBQzQ0eWZCS1NxSndGK3NuRUFXbXZpQkJIaWNMbDdzclNWM0d6TzRONHJYMWpQMzIvRlk2MW43N2ZpcnlGUEQvQUlVZjhJVVM2VHRaV2ZvKzB4TmQ3cEV4NXp3UVFOQURwbjl6Ui9QdVVUNHM4RllmaDQvY3E1NitML0VaOFVkZkYvaU0rS2l2UjdyL0FLV3RiWGdYbTA2ZXRjdW0rdTRIVThqR1JNNGM3OE1qanhGd0hlTWp5Vms5UEhTUXpvMTA1UVZGSlFVVlJkYXlVTlpCTU1zRFJ1OG5HRDRBZXZsaEh4WjRKZnc4ZnVUQjE4WCtJejRvNitML0FCR2Z4TFJyL3B4cDdCMGJhZnU5RFFVRDcvZUlHengwajh2amliKzBYWXdTTTdEbHVyaTBmVk52T2xiUmM2aUNuRTFaU1JUdkRHWWFDNW9KeG5PMjZQaXp3UitIajl5cU0xRUk1eXhqMWNFdUtXT1puSEU5cjI4c3RPUXJ3TkxBZWNNWDhBVkZVOGJZcTI2c1lBQUsrZllESDdaS2Rpbk1odFpSNmlsRUxjd04xdlFoQ2tLR2hDRUlRaENFSVFoQ0VJUWhDRUlRc2hhWkNlTTRKVzRMVzhFdUthbDJKMkhSeVdoWWFRNFpCQkhpRmxPcHRZUWhDRUlXVmhaQ0VJUWhDUkloRkx0ZmJHZi9BSmpCL3dEa2hheFVRMGwyczlSVXVMWUlxMktSN2cwdXdCazV3QVN1SmV3VTlCK28zbXI0QzhoLzAyNml0T290TzA3K0lXOFUwajJlQms0Z0hlNEhEOFY2UGs2UXRPc0hZcXA1VDRNcFpQemFGRU5mM0hSbXVMVzJndjhBWnJuV1FzZHhSeVJ3aHI0ejR0UEVNS3RESGNGZDlZd2JTb1RmZGE2bDBaMFBXQ3IwNVEybWd0TWdwNlNHVVQ5Zk03amFUeGhvYUdqa2VaSlZVOU9GZmMra0xWdDFmUk9kVVVPbWFCdlhTa1lCT1doNTIyeVhPUDhBQ1ZaOXIwTjBiMitKMGY2QjFIWERuR0t1VVlpT2M1YUE0WUtjOUxXdlROZzA3cUcwTXRkM3FHMzNyQlZ6eWNBa3c0RVlCenRqSkk4MHZWdTRKT3VqL2NGNWNvTk8zaSs2UnVlb0pYeVB0MW5aSEExejl4Mm5iTWI2Wko5MTcwNkZhZzFQUlBwT1FuSi9Sc0xTZk1NQS9KVjArajB6SDBheTZLb0xWYzZTMnlnRjhyU3gwam5jUUpjVG5jbkdGS2RJYWt0R2w5TjBGbXQ5QmN6UzBjZlZ4bVhoYzdIbWNvNnQvQkoxOGY3Z3JSVkVPLzhBV0wzL0FQVUpmeVUrUFNOUWpjMjY0a2VUR2svVlYxUXpQcTVhK3NmREpEOXFxNVptc2tHSEJwZGdaSG9NcCtuWTVyOVFvbFpJMTBkbW5ldXBDRUtjcXRDRVpRaENFSVFrUWhHNkZoS2hDQWhDRUpRUVFzQks5azNKc1QwUGFWVVVkOW93d0NrcllXa0RzbU9jdHg3QWdIM0JUM1Nha3FnMGYxcHN4OFhOYTRmQnZEOVZYMWRvdTBWTUJaREQ5bWZqWjhmTUpnT2hLNm40bjAxMnp3bllPYTV2MEpXSWdsNnY5S2N0N2ovYkxlVHdDVFdXQU81SzdvdFZUQTRscG8zajk1cmkzNWIvQUZUaFRhbG81aU9OcjRoeXk3SDVGZWVhbDJxYlk0eHNNancza1lwUzhIMmQvSmNZMW5xQ21lV1ZIQ1NPNlNJQS9rclNLcXI3WGE5cnY3M0tybW9LQTlwam04djVYcVNPdnBudEJFZ0dlWG10elpZM0VBU055ZTdPNjgrVzdYTk5NQWV0WkRKNFBKaitlNFQ1VGFxcU1mY1NGN0R6NFhod1B6VGpjWm5ZYlN4ZWR2Vk11d0dGNHZETDlSZjBWMW9WVlV1dFpvY2NiR2dEdTRTd0g0RUowcGVrRnB4MTlJY2R4amZrZlBjL0ZTV1kzQ2UwMGhSSDlINmdka2crS3NGQlVZb3RaV3FvN0w1M1JQUCtKRVd0K0lMajhrN1FYYW5ueDFRZElQR0xFaC9oYVM3NUtXekZLUitnZUJ6MDliS0ZKaGRYSHFZejRhK2ljQXM0WFBGVjA4aHcyUUIzN3JnV3UrQjNYUUZNYTlyOVdtNmhPWTVoczRXUWhDQ3UxeWhDd2hDRmxHVmhDRUxLd2pDemhDRmhDRUlRaENGbENFTENDakNFTElRaENFSUMydEhaV3NMcGhhREdNcHVUWW5ZZTBxY1lleWtIZHhIaThmUUZMYU9FWUMxQS9mRWQyNStRWG5NbXNqaUY2VkZwRzBGWm1oWkxqaUdTTzlOMWRTeFBwWk9zWTF6UUNjT0dVNlpYRlhFQ2duSi9jY2Zxa1lTQ0xMdDFyRlVTL2R4U29aREc4T0JjUDlKd1VsMzRqNnJCT1FPVzNrdGtza25pbnUwME9PcHI2bG5sSU9NSndwZFJWWFdCc2dwcHo0NTREOFNvdWhOT3AyTzJoUHRxSkc3Q3B2VVg2b2lqYStLaG14KzJjNUE5d2wwV3RHTkk0K3RpUGx1RkJjb1RKb29pTEVKMzQyVUc0S3RxazE1SmdDSzV2YjVkWVcveVQxUjY0dURTREZXbC9vUTcrYW9zYzkxc3dHWWMyUU94M2JoTUhESTlyVFpPakVYblJ3QlhwS2k2UTN2RFk2cGpBZjhBRWpBSjl3bm1QV2xOd2d1TU13OEkzOEpIcnhZWGwyTzVWTEFBSlpPRWQzR2NmTmRrR29LdUxiamNSNEgvQUxZVDhZcTRleEpjZCtxalNSMFV4dStPeDd0RjZlcDliV21WNFk4eXh2OEFOdVI4UVU3dzNlZ21aeHRxR3RieXpJQ3dmOVFDOHJ4NnJtYitPTU9Ia2NmelRoU2F6RVRzdDYrSjNpdzQrWUtmRmRXTjJ0QlVaMkdVVCt5OGhlcElwbzVtNWlrWThlTFhBcGE4MXdhNGpjNXJuMUR1TWNpOXZFZmlRcExidWt1cGdhQkhXVThqZTVyMmpIeXhoT0RGWGp0eEh3MTlreTdCQWYwNVFlZW51cnd3aFZiU2RKam4vcjJSdVA4QTdUd0I4Q0NmbW5XRHBFbzNETWpINThBQi9OT3R4ZUE5b0VlSHRkTU93U3BIWnNlUjk3S2VyQ2kxTnJpMVN0eTU3bUU5eEg1cnRacW0xdS92dHZFYmhQc3hDbWZzZVBIVDFVVitHMVROc1o5ZlJQcUUzUVh1MnpZNEt5SVo1Y1I0ZnFuQnJtdmFITUljMDhpRGtGUzJ2YThYYWJxSTVqbUd6aFpaUWhDNlhLRUlRaEN5RjNVN1FZVzVLNFF1Nm5ibUZ2djlVMUxzVDBIYVZMWjhDdExUOS9MNVlXcWhFclk1ZXVHTXl2TFIvbDRqaithekdjenorUkErUzg2SXNTdlNRZEF0K1Z3WEoyTGJVLzhBTGY4QVFyc0pUWmUzY05vckQ0UXYraFN4aTdnaDUrVXFsRHpLRUlXeFdWUWhDRUlRaExpaWttZUdSTWM5NTVOYU1rcEJHT2FFcTZyWGI2cTYzQ0Npb0luVFZNemcxakc5NVRwclN3RFRON05xZFVDb3FJWW1PbmMxdUdoN204WENQSUFqZjE1SzMrZ0hUdFBEYkgzcVpyVFV6RXhzZWYyR0RuajFUdHBmbzZndXVwcm5xYlVjWFdDcHE1SmFTbGZ5RWZFZUJ6dlVZd1BCWjJweDJPQ29rRCt5d2VKY2ZiVldVZUhQZkcwamE3eUNxTFJIUnJmZFZ1WkxERDlrb0NkNnFjWUJIK1VjM0g1ZWE1ZWtyVFZKcFRVbjZKb2FpV3A2dUZqcEpKTURMaU1uQUhJZVc2OWZONnVHTnJXQnJHTkFBYUJnRHlYbWJwWHQwZHkxTlhTV2FqdU56cTVKQ1pxbGtUakhIamJnWmdiNHh1VkN3bkc1cStyT2Y1V0FiQjl6L2VTZHE2QmxQQ011cnY3c0NxNUM2SzJqcWFPVGdxcWFlbmYrN0t3dFB3SzUxcmdRUmNLbzJMWkZQSkQrcmVXK2k2QmNaU01TTWdrSCthSnYxd3VOZGxtdGRaZWJwVFcrMnd1bnE2aDRaSEdOc2srWjJBODBoYTA2bEtIRWFBcm1kSVM4dWFPRFBjM2tzOWJLRG5qZUQ2cWQ2LzZJOVY2RXRjTnh2bExCOWlrY0dkYlR5OVlHT1BJTzIyeW9DeHhhNE9iekNXeVM2Y2FPb3VlUTZDU1VnZDVQWitleWt0RmRLaVNWa003R3NsZHRocDUvQXFMdHVWVTNEdUptMjJNQmQrblozMU42aWM5clFBQ2V5M0NpengzYVhPQTBVcUNTemcwRTZxeXFTbHJ4UmlabFEwQXR5UVhIR1BndDJtZFUxY01Za3B5MHhoeGJsblp6Zzc3RFkrNEs2WXk0V0IzRG5pNmwyTWVoVERvTzAxbGZhb1k2R25rbEpKTGpqQWJrOTVPd1ZQVE9rZG1MTnQ3QzNpclNwRVFzSmJaYkU2K0N2K2pNcHBJVFBqcml4cGZnWTN4dXR5VEdDSTJoeHk0QVpTbHVndk96cWhDRUpVTElYYlR2SWlhQXVJTHNnL1ZOVGN1eE93ZHBVb1N0VE1aa0k3M2ZrQitTVVN0VEQyVC9BS2o5VjV5QXZTaWRWc0pUWmV1MWFxd0h2aWY5Q3U4bE4xNGRpMDFoOElubjVGT1JENXdtNUQ4cFZNSVFoYTVabENFSjkwdlk2MjZ6UGxvcUFWN0lNR1NGcjhPeDRnWnlWeEpJMk5wYzQyQzdZd3ZjR2plbW0zMUw2T3RncUl5UTZONGNNZVJWbmFnMDFRWHlDT3NvM3NocUpXQjRjMGJQeU84ZUtlTEc2bnRiMjFGQlNRMDBvMmMxMEl5RDNod0lYVFczWnMzRUtnTkVnT1djUGdUdVBSWjJwcm55U0IwVGJFYjcvYitWc2FIQitxWVd6T0RtTy90d1U5ZERsTlUydlRrOUpXRnJpMmNsZ2FjakN0TjBvaWlId0FWZGFMcTJ3U1RmY1N1akpCak1nRE1ramZZbkttSDJxU1NSenBHTVlXanNocitMUHBrQlkvRTJ1bXFYUGR2MVV6cUJDMFJ4ZzJDNjVvV1RqRStYbm1XNXdQZGJvSVF3RHEyTmFCeTJ3QjZCTVZYZW4wTWtMSFVyZUo1emlTWEJBL2U1SC84QWZCUVhYSFNYZnJTNXh0dEZhNDZjWnc2YW9Fc2gvd0JvY0FQVGRjd1lkVTFKREk3YThTTEtEUFV4UWk3bDAvMGc3aGNiYllhSjFEY0hRUlN5R09TSU5HWDdaem5tTWVTODN1Y1hPTG5Fa25tU25YVWVvN3JxU3QrMDNtc2txWlJzMEhBYTBlQWFOZ3VTa3R0WlZ2RGFlbmtlVDRCZWg0VFJHZ3BteFBJSjNrZjNWWmlybitJbEwyalJjaTY3VmNxdTAxMGRaYnAzUVZNZjRYdC83ODFNN0wwVjZodVBBNTlQMU1aNzNuaDI5L3l5ckYwLzBOVWROd3V1ZFFKSGQ3WW04Ui9pY01mOUt0aEc5NDBhcTkxUkhIMm5mZjBWUjM3V21xZFVXK0NndTEwcTZ5aWdPV1FiTllENGtOQUI5K1NYWWRDWHk4Y0xvYUtWc1IvYkxlYTlrNk82SDdSU3dSelQwY2NHMldqaDQ1UGk3T1BRSjkxSG8rT2dvdnRGc0wzTWlIM2tic1p4NGpDVnNUYjVTNjNKY1BxSGh1ZHJMOC9iK1Y1V3RQUXRVTzRYMXM3RzkvQzQvd0FrN1h2UUVPbnJNK3NqcXdBd2h2VXh4Z0J4UGlUdVZjUlVONlZubG1sZWVNenhqNnB5ZWtqYkU1eDFJQjJwaW1yNXBKbU5GZ0NSc0g5S2lWdGFEUTB6WEFFRnJjZythdG1scDRhYUJrVlBFeUtOb3dHc2FHZ2V3VlMyRjNXMGRHRDNrRDRIQ3VCVnZSNXRoSWU5V0hTUjEzUmp1S3doQ0ZvMW1VSVFoQ0VCZHNBekUxY1lYWkIrcWFtNU5pZWc3U280bGEySHNuL1VmcXM1V3RwN0o5VDlWNTRCb3ZSU1VzbE5WK2RpeDF4SCtFNU9SS2FOUXV4WXE3L2x1VHNJK2Njd21wWGZLZVNxTkNFTFZMUEpjSFZpWm5YaHhpejJnMDRPUEpXWHBrV09tTWRUYVpueDFKR01tWER4bnU1cXZMWlR3MUZTRzFNNGhqRzVKNy9JS3hMTFRVbHVnRTBNVWJTQmtGLzRpcXpFU0MzTGMzOGl0RGdNSmRJWEVOSTc5U09TZHBXdFpJNldReWh6dDNGeHlUNXAxMDNhbTNDbyswdWpMS1poNW5tOCtIb29vKzlXOTFYL0FGNnNaSERuaWNHOW80OEJqdlV3c2V1TFJXU0NpdE5IY3ArclpuaGdwUzh0YmtESkRjbkdTTi9OVU5SRlU1TFJNSko4bHFmamFTTjJWendQRUthTmExb0FhQUFPV0Z0NjBqTFdFaG1jNzgxRTYzVzlub0puUlZycW1uZTNtSmFkN0Q4Q0ZpbjE3cHVjNEZ6allmQjdYRDhsU3VvS2thbU0vUXAvNDZrZHAxamZxRS82aW9LZS93QnZmU1hLTnNrVGhzY2J0UGlENHFwWWVpbVNUVXJLS1M0eFFVY3VURkk5cExuNDV0QTVaeDVxd2hxNjBUT2EybnI2WGM0eTZRTitwVGpYQ2t1TkE1cHFvMkRBZXlaandURzRjbkErSUtzTU9xNThOZTBTTk9RN1I3S3V4Q2dwc1JqY0lpQThiQ0Zvcy9STHA2Z0RldUUxUzhjeTUyTS9CVEsyMlMyMnhvYlEwY0VPTzlyZC9pdGRodUxxMkYwY3hhYWlJRGljM2s4SGs0ZkE3SjBYcGRPWVpHQ1dMWWRoWGt0WDhSRkk2R2NtNDJoQzdiTE5UMDkycFpheit6dGVDNCtIbjhWcW9iZlgzS1IwZHNwVE85bjRpWGNEVytSZDQrUzFQcDZ5bnFuVXR5b3BxT1FFRGlsd1dPQjcydUhNTHQ3ZzRGZ09xWll4emJTRWFLN1lKb3A0bXlReU1ramNNaHpUa0VKVXZBWTNDVEhCamZQTENxS25xYWl3VkREYmJpeWVKdzRpMk4zRXdud3grWVM2Ky8zTzVnUVN6NFk4aHZBenNnNThWQWloZTV1WjFnT2F0Skt0alRsYUNTdU83dHAyWE9wYlJ1NDZjUFBBUnl3cTk2WEQvd0NWaC96Mkt4YnJhcXUxdmpiV1JodkdNdElPUXE0NlhqalN3LzV6ZnpVdW9JK0hkYmdvVklDS3BseGJWUmpTR0hPdExYRElkTzNJL3dCeFZ2cW90THQ2cXBzckR6NjZQUHVWYnhWYmdYNkx6LzJLc3VrSDY3UDlmdXNJUWhYYW9VSVFoQ0ZrTHRwLzFMVnhCZDFOK3BiNy9WTnliRTlUOXBVTGxhMm5ZK3ArcXlTdGJUMlQ2bjZyejhCZWdFcGVWSDlYejlWcCtwMzNlUTM1L3dEWlBoT3lpV3ZaQ0xQVHMvZmVDZmdwTkszTkswZDZZbmRhTThsQVVwakMvSjJBSE1sSlMzTzRteHNibmJ1OFRsYUlxbFRsWjdmVTFNd2RSUkI1YWYxangyUjVxUmZvWjlSSXdWdFZOVlNQUDRHbkRjK2lkcmJFeTIyU0dGZ0JlUm1RNDV1S2xHakxYa2k0MURCZ3U0WVdueDhWUTFkZVczZU5nMEhFcmIwT0VSeHhoc21wT3BHNGVHL3hUTFc2TC9SVnQrMXRwb0g4SXk1alc4VG0rNVR2L1JrbmhvK21LZWhxWHVpanVGRE5BR01KYnhIc3Z3Q054czEyNDNVN2I5aSsyVVp1dkY5Z0V6RFB3a2pzQnd6eTNVRTZhOUlWV2xkVHdYL1RyNVdXNGNNMU5WMDBuYURPOHRQUEkvTUxuQjZsOHpTK1E3N2V5aGRJSVk0eTJLTnRyQy91cmE2WU5iTXRGdHVXbXREVUVKcWFPbGMrcXFZbThUS0tQeHdCK01udjVnN3J4dlVUUzFFejVxaVI4c3J6bHoza2trK1pLZXBydmRyVytlT2x1OGpvNnlOeGxNTXVlc2E3SUlmNWtjd2ZGTUt2Mml5eXE3YlBhNnU4VnJLV2dpZExLN3c1QWVKVXN1WFJ6ZnFDaWRVeEZrNFlNdVpFODhROUIzcVE5R3I2YlQra0tpN3pSdm1xYXFRdGpqamJsN3cwSFlmQnhKVWdzdCtxN3QvV0kyM2lubmlvbjFNbE45aEVzVDNjWFlEY1lmd3ViKzF2Zzc4bFVTVk5aTk00VXpSbGJwcnZPOEJYa2RMUXdRTmRWT09kK290dUc0bFNIU0drYlkzb3RwOVVQMTFlNlVDSGhsamk0WGNFbzNNVFduYzc5MlZIdWlQVkYvdk9ycTJncmJtK3R0MVBFNTRMbzJaTzREZTBCbnY4VkQra200Y2RydDgxRFVUMGpLcHhsbHQ1SkFZL0FCZUJ5OHM5K3luWDlIYXpQcGJCWDNXWmhhNnRsREl5UnpZd2N4NUV1UDhBQ3JqRHBUTTFyZ012ZDYrYW9NV2hFQmNIRU9PbGp4NGVTdWpUV29ieFlKWDA4Y01WZFN6VFpqWnhCam1seHdCayt2OEEvRmFOZFpxUzhDbG11bFBtV0laREJJZUVFOHdjSEJWVzJxbHQ5WFZobDJsTWRNQzBqaDV1ZG5JeGpsZ2pPZlJTU3UxZk5TU3hNdFZYQlhVeFpuamtZU1dud0pHRTlKR1d5Mmp1VkZobUJodk5heTYra0N6UVFXNXR3cFlXUkNBQnNqV053T0RrTmg0YmV5Z2IyaHd3ZVM3N3hlSys3dUlyYWh4aHprUXM3TFBjRG43NVhBcHNVWkRjcjlWWDFFakhQeng2TGJOVVRUdGpiUE5KSUl4d3Q0M0U0SHVvRjB1ak9tWWgzR29ZRk9GQitseHdHbnFZRTRMcXFNZk5jVklEWUhBY0YzUnVMcWxoZHhVZHREZzI3MnpPd0ZSSDlRcmFCeXFWYlVzYldVWWFTNXdxSS93ak9PME9aN2xkUU9RQ09SVlhnSnRDNGQ2cytrR3N6VDNJUWhDdlZRb1FoQ0VMSVhmVGZxRysvd0JWd0RtbkNsSDNEZmY2cHVYWW5xZnRMejRTdGJUMmZjL1ZCS1EwOW4zUDFXREFXOEpTM08yVVUxMkFiUEFUekR4ajRLVFN1KzdkNkZSSHBBa3hCU1JqOTRsU3FSdjVyVkhxRCtXVkNsMVdwb2RjcVlPR1dtUnVSN3JUSlR6Und4eXZqYzJLVFBBNGpaMk9lRnN0Nytycm9IK0R3Zm1ydDJyVFpWMFZoSTIvRUt6YlJSeVhXdmJFU1JDRHhTTzhHNVZsZFgxZE94dE13bHNSQllCeUlBNUJNZWlxY1VkRndsZ00wdzZ3djhSM0JTTndlWFlieERmbm5aWUt1bkxwTXU0TDFLbllDeSs4cEFxS2V0akxZNUdPZU5qRzQ0Y0Q0RWN3bU8rNmNsdUZzTlBUVnRaRXhwSmJUUGxKaTM1Z0R1QlVoYUkrdHlXQVM0eGtqY2oxVzBjWEhqaDdQaW9zVlMrQTNpTmtzdE5IT1B6Z0NxVnJ1amU1U09McWVFTUo1amlCSDFUamF1aWFUc3Z1VmMzbG5xb205L2dTcmZEQmhaRE1uWlRYWTlWbHVVRUR3VmNjQ29jMmN0ODlGQzZEVDF5aHBtMFVrZEVhT1A4QVZjTG5OY3dlUkdEM252N3l1eDFIUnc5VEdSTkZXVXJjUXlSQi9IR0J5NER2dDVaVXRiQzd3UzIwd2RuSThsQ09KU0UzSnR2ME50VkwrR2diL2lEdTFGOU9DaThGaHQ5L0V4MWRhK3ZtcDJkWkRVd2RoN3dUdUpHRGIzQXlwZlo3NVpZS3lrczFDR1NIcWN4eHdQQlpHMEE0eVI2Zk5LdDFNK091Wkx3dUpJYzE3dkxHeWNtVWxOSE9abzRJMlN1T1hQYTBBaytKOFY2RmdVNzZ1bGJLSGNRZkEreTh1NlJOanA2MThlWFMxeDRqaHd1dW1ZdGtZOWhZME5lTUVCSWEwTmFHdEFEUU1BRHVXVUsvQUFXYkpKMm9Rc29TcEZoVnIwM3k4RnJ0STdqVlp4NDRDc3BWcDA2VWJwdE8wdFYxcmcyQ2NmZGdmaUpHTXFQVkM4VGxKb2phZHQxREdWa2JLbUFQbll4elh0ZHdPY0c1M0d3SE5YM0FNUVJnOCtFTHpiYUdYZTRWZHJncHFkbEZTU1RSc2VSd2d2eTRiNHd2U29HQUJ6d29HRVI1R081cXh4cCtaN0IzSVFoQ3QxU29RaENFTElUalNqK3J0OS9xbTRKenBQN096MytxYWwySituN1M4NGx5MXNkMmZjL1ZCSzFzUFpQcWZxc1JaYmE2WEtmdTMraFVPMStEeFVqdTd0QlMyVS9kUDlDb2RyeCtacVZuK1VuNXFWUmo4MEppb1B5RlBHanJKUjZnc1VadUVrN3ZzNzNSc0Frd0c1MzVmQkkxQnBXMTBVOE1OQytvTlE3dGRwNGNCNGJZVWZzbHprcHJIYzZXSjc0M3U0SldPWWNFRUhkYjlGMTFaVTZ3dGhlK1NvZVptbmdPNWRqdVR6NHBtdWZJSGFDK25oZEpGSkVReHJtM0ozK1N2cTJVTlJSV3FsNjhORCtBR1JvSDdXT1FYVk54Q0ozQmppN3NqWk85WFRkWkxGVEY0eVRnbnZKeGtuNGZWUW1tdnBxTmExRnNwL3ZLV05yc3Z4eWNNZkxtc013UHFDNTQzYW5rdC9UMUxJMmlPL2NuOW5HR055Q1hFYzk4WlhSR0J3dDVrblk1MldtYzVpZEkwNTZzZzRCNTQ1L211MktKZ2FNSGlhZHhuZE1QT2wxTEw5YkxMWXlEaHczQzZZWXdrdGJueVhURTNDak9jbVh1MFNnenlXeGtTMnhzeXQ3WTFHYzlSWFNJaFpnSmEyc2JnTG5iSkcrU1ZrYjJ1ZEc3aGVBY2xwd0RnK0d4QjkxdnVnOVpjUzBwL3dCaDZIN0xCZExhZTdtVkE1SDFIM1NpY0RKMkNpMTkxeGFiVkRjQUpQdEZiU2phbForS1E3YkE4dTlTS3VZSktLZGpuY0xYUnVhWGVBSVhuaS94UzAxOG5kTGt4emdTTmRuWWdqSTM4RnFzVXFud2xqSXpZblhkdXRjYWpmZFZXQ1lkRlY1M1M2Z1dIMXZyNFdUUHJ6Vzk3dk4zZ3F6OW90Yk9wSFZ3UnpPeGpKN1hkdWVYc3BUMEozQ292MWZlYUM1M1c4L2FXMFpxS1dTQ3RkSHdPYTRBZ2pjT3p4RDRLdXRVT2hlK0IwYjJPa0hFMXdhYzRHUVI4eTVidENYZjlDMzM3WDFqSXdJWHRMbk9JMkk3c2I1MlhIV09lM052S2tQaGJFNHhqWUY2VDZNYXVycnRGMEU5d25rbnFYQndlOTdza2tFam10WFNkVGlvMDZ6aWFIaGs3Q1dua2VhVDBTU3RtMExReU41T2M4LzlSVDVxaW5iVmFmcjQzOTBUbmcrYlJuOGxZU05Na0JieENvMlBFZFNIY0Q5MVVkcG40N3hRaGd3MWxURGcvd0M1WGd2UGRtdU5JNjYwVVVVM0ZLYXBoSWFDUU8zbkdRTUJlaFNvT0R0TFluQzIvd0N5c01hZG1rYWU1WVFoQ3QxVElRaENFTElUalNaK3pzOS9xbTRKeXBQN096MytxYWwySituN1M4MUVwRFRzZlUvVllMa2hwMlBxZnFzWUF0bGRLbFAzYi9RcUY2MkpkWFErQVorYWw4enNSdTlDbUN2bWdiV3ZkSTVvZHdnYm5tcE5OOHJzeWFtK1p0bEY3YWNWQlllVWpTMVp0TmZVV202UVZsSElJcWlCL0V4K004SjhjS1FOcWFjNCs4ano2aEtFdE1YSHRSNUhvcHBrdmNGdWhVY010YXgyTER0VTM2YVYwd3ZFN3A0bVA0SFpBSkQvQU1mdnkvSlRiUjlUWmFTR1NTdHFuc3Fac2g0SnczR2Roa2IrQ2hyS2ltajdRZkVQZ3VwdDZvdjd5YUlIeVZmVTA0bFprWTJ3N3RQc3JmRHF0bE1TNlEzUGZyOTFQbTEybm15djZpdHA2UXVINDZkaFlUNDV3TUgzeW5haDFKSEJCSEZIY0tDc2EwWURueWRVN0h2c3EwaXZ0dERjT21qSjlGdEY3dHg1RW4walA4bFhQd3dQRm5Bbm4vNWZ6VXc0MXJkclFPV244SzI2VzZ5VHlnbXVvR3hFYjhFZ2NSNzVYYkRWME1ra29tcllqSTBZTFRPQ0MzeEF6ZytleXBvWHFpSEl2SCt3ckJ2ZEpuYmpQK3dxSzdCU1RwY2NnbGRqTnhhM21yOHM5WFRDb2ZTc3FJQ09EclkyTWNObThqN1p4OGZKUEVjOEJHV3pSbnUyY0Y1c1pxQ25aZ01mTTNITERTc0cvd0JPUVFYeTRQTWNMdDFHazZPRjdzMlkvUk5ERmdCYTNtdlRIWFJBYnlzL2lDcWpwQnFialpOYTA5MXNjajNNcTRXOWMxamVOaitBNHc0RHl4ajNWZjhBNmVwQU41WGoxYVFrSFVOQnlOU1BmS2w0YmhFbUh6OWZHNDMyYkV4VTFyS2huVnlORmlyYmkxTFMxMEErMlZNamNqdFJ2amN3ZW1NYi9GZDdZYU8rVXpHUzA4RXRKbmlhK1YyT1hnT2VGVGNkMXBwUjkyOXovUnBLeSs3MDhRN1VybWp6eUZPTkNaSnV1cU16enV1U0xmUmNHdERJZXBwZzJNYjdDNm5lcitqYXoxZGdqcGJmVTBkRFZpb2RPWjNnZG9IT1c1NTRHZHZSUkczOUV0dWM3RmJxZWwyNWlFRDh5bXgxK3BEL0FIcGQ2YnBBMUhIRUhHSnRRQjM4TFNGZGlzZG9CRjVsVW53cDF2THQ3Z3IwMHN5eldDejAxcm9hK09TT0lFQXVrQmNjOHpzbGF3cUlhblM5emhwYW1COHo0SE5hMXN6Y25ia04xUk1lb21WREJKMVZVOWg1TzRTVmovaUNqNnd4bDBqWGpjdExEbE9uRXByWlJHbUJoa1diTVhwd3RPS1dlaWhndDlXeU5zckFYOVNjRGNjeXIrWmNhUjgwY0xaMkdTVElZM2x4RURPQjdBbjJYblg5T1VtUU90ZnVjQWNKVW4wUk5KSnEyMmNNYytSSVRreHV3QndrRW5iYm1tNkdva2lka0ROQ2RTbk1RcDJTdHpsMnJRcnRRaEMwS3phRUlRaEtzaE9kSi9aMmUvMVRZRTUwWi9xelBmNnBxYlluNmZ0THpBU2tNZDJUNm42ckJLMXh1N0FQanVzaUF0ZGRKcTM4TVRqNUtGM21OOVRjZ3lNWmVXanZVdnJUOXc5UmVzSWh1bFBLZVRod2xTNmJUVUppYlZhb0xPUmpycE56M04vbXVsdG5pQlAzcjhIdUdGM3NjMTVCQnlNRkxCWFpsZnhTQmpWd3R0Rk1OOE9QcVYwQzMwZy91R2ZCYjg3RktCeXVDOXgzcm9OYU55MDAxUEFJMnViRXdaM0d5M3RPN2h5Q1REdEV3ZVN5MDd1WEoxdWxHaXlXRE9jdStLeVR0elJsWUo1ZXFSTGRHY1RlWENsNVdwNXhKR2U3T1BrbFNIc085RUVJdXA5WStqKzRYYWhwNTRwNFd4eVJoL0ZJMDQzR3dCN3o2YmVhemR1ald2dDhENmlXZTJtQm95NTduOEdQaUZObzlhMit3YU50THF0d2xyalJ4Y05NdzVjZXdNRStHZWFxZlZHcUxscU9vNDYyWGdnYWNzZ1ljTmIvQURQbXM1U094Q3BtSjBhd0U3dHZMMzJLNWxsZ2lZQnRjbi9UbXQyV096eTBMNktLcm5pZmlDUUFCdkQvQUpqakp4M0tQNmcxRlgzMXhGVUlZb082S0tNQUprY1F3YkRaWWE0dXdlNWFrMUVybWhwT2dWQUtlSVBNZ2JxVnNZeHJHNGFBUFJKbEhGRThlSUtWbmt1R3FtZklIaUk4TVRRZUo0NWsrQS9tbWdDU25TYkp4dGJHeDIrQnJSZ2NQTHpXOFJNNjhTQmplc3hqaXh2aGNPbjNjVnBoTysyUjgwNURad1RiN2h4WFRkUUU0MktoanVGOXR0UEs1eld1cUdidDU4MTZGWG5PM1Y1dHQwb3F4ck9zTU16SDhHY1p3ZVN0VFR1cjZxOVY5TkZIRkV4a3JqeEFia0FESitRVmpRMWNjREF4KzF4MFZQaWNMNUhodzJBS2NKdnQxMGpxNnVxcFMzcTZpQjVhV2s1NG01MmNGcnZsMWdvYWFkZ21hMnFFUmUxdmg1cUFVMTNtanVyN2hrR29JTzJPeVNSamRQVjJKc3BaV052ejVlNnI0S1owclNmb3JUUXVLelhDTzZXMkdyaS9ESVBtTml1MVdyWEI3UTRiQ29wQkJzVmxPbEVQNnN6MytxYTA2VVg5bVo3L0FGWEV1eFAwL2FYbGdsYTR6OTIzMFM2bHZBSCtoV3NIRFFzb0F0V1N0RmU4TmdJN3pnS01YamVlbUgrYjgwOVY4dldTWUhKdXlaYnIvYWFYL1VQcXBjRGJXVEVodW5WZ0RUZ2VCS3psSmJ1NzJLRnlWMkVzRktiK0VlaTFoTFljTkhva3NsdWx0MmFCNExEZnhPOVVsaHkzM0t5MzhPZk1wTEpMcGFDZVhxdGNUK3NZSFlJOGlsRTh2VkZrdDBTa0FBbmtEbEJKY09MazNta3pZTFFDTTcva1V0eHkwanlTcEVydzd6akc2enpTYzUzUm5DUkxkS0pXMm1wcDZrdWJUd3lTbGpTOTNBM1BDMERKSjhsSjlEYUR1dXJwV3lRNHBMYURpU3JrYm5Qa3dmdEg1RDVMMExwL1NGcHNWbWt0MURBQTJXTXNsbGR1K1RJd1NTcVhFY2Fnb2prSHpPNGNPZnNwRU5PNlRYWUY1TzVqeVB6V3FxUDNaYmptMC9SZE5URTZucUpJWC9pamNXSDFHeTU2amVKd0hQQ3VXOFZIS05OdXphWXZJa2ZOT1JQYWFtblRaeGJRMGpCRGpsT1pQYUM1a0h6bEt3L0tGdmpxelJUdzFJalpJNk40Y0d5RExTYzkva3BWbys3dnREWktpazZ0bjJqaGRJeHpkZ0JuWVo1RGRSaTFzRTkzb0luUGJHSHpzYnhPYnhBWlBNanZUUGQzT3BydlYyeVNWdlh3dk1mWWNDdzQ3MmtkeTR1OGtOWTZ4R3YyVFUwYlg5cmVyQnFidTI1YWdyRzFVbVlaWkh4QitjbHJlUkh0bjVKRnFvNFhNYkZYMWJqQU5qd0E1Y1BCUisxeldhWFNNVWN0VUtmVU5OVk9NcGZ0MXNidHc3UGVRUjY3cFVkMWJJMFV0QksxOGgyTXB3QUQ0NFVPYk01NUliL2tUcjY4azBZOHJRQWR5dmZUVTFOVVdpTDlId2RUVFJmZHRqQS9DQjZKelVKMFByR21zVnNndG90ajVXTjdVa3pKZUo3M0htNGdqYys2dFNnbXBMblNNcVlvbmNEKzZTTXRQd0tWM1M5MUw4czhOeHhCR3ZodStxWmJnalp0WTVOZUZrd2dwMW9nVFRNNTkvMVhlYUtuUDl5ejRMaW5xcWVsbGRDTXQ0ZTREM1MvODJwWmRCRzYvaDdydVBBWm96Zk1QTmVXcmxzMXg5VTNWTXZWUTU3enNGdnUwK0k1SGpjTkNZcXFyRDN0NTQ3Z3B6R1psS2M2eUhISXozNVRmZERpZWxQZzlkVTB6STluSHRlQVhCY2kvcm9YdXdJZzRZOFZLWU5VMDQ2SjZqRzJmRUhId1dGd1RWVXp4RjFmREhHVzh6eng0cnFFcmN1QXk3aHdDY2N5dUMwaGRabHU3a01QWkh3U2VJZDVXdGt6QXdGejJnK1pYTmwxZGJvejJQaWxSbjd0dnV1VmxWQzFnNHBXRG4zckFyNlpyR2d5dHlFRnA0SkxoZGd6amZkRGp5OVZ3bTUwdy92TStnU0hYV20ydzV4MzhFdVIzQkdZTHNxSDhKakpQN1kvTmJuSEFKVEZYM0dLYVBoajRzOXhJU0lieE13WWthSCtaMlhmVk9JU1p3Q24rV1JzTEhPa2RocmVaWEd4MGxiZ2tHT25QZDN2L2tFeDFWZExVbHZXWTRCeWFGdmJkcDJob2EyTUFlSUtVUWtEVGFrNndGZWpkT2RNTmh0bEZiclE4OVgxRVRJM3lsbzRCZ2I4aXBoSDBwNmNrb1B0TU10UlVBYzJ3UWx4OWQ4THh0VU54STV4ZXh4ZDJ1eHVGcTkxU3pkR0tPVTV0UWVha054Q1Zvc3B4SlVpc2U2b0FQM3A0OS9OSWVleW96VFhXZW5nYkUxclNHOGlWc042cUR6YkhqMEt1T29jTmlZNndiMUlMVzROaWQ2bjZyYkpWeDliRkdEeE9rN1FJM0dQRlJWdDBxV3RMV0ZvQjhBay9hNm5pNFFRMHUyeGpDVXdFbTVTZGJZV0NsYzFjSW96VVUwZ0w0WGc1YWM0SUtqMGxkRkpYQ29EU1g3OTNlVjFXbTFYcTV5aUdrZ2ZVTmFlMUd4d3dmTFpURzJkRWVxYXFjT2twRGJXbHdhREx1TitYSk12bXA2ZlNWNEhpbHl2azFhRXkwdFBSeTAzV3ZsaWZWT0czV05JRFZJdWp2UnJ0VjExVlNPdWxKUlRSTkRtUmhoY1pCM2tiamtwWFJkQWQyTFA2NXFHQnJ2L0FHb1NmcmhUTFQzUlhXV2ltWkUzVU1iZzA1LzlNaEx2NHlPTDVxaHE4WnBReHdpbUdZN05DYmVTa3hVa21hN202THQ2TXVqbVhTVnlxNjZ0cjIxYzBzZlVzYTFwRFd0eURuYzg5Z3JHY0NRUTA0UGl1YTJVODlMU01pcXFwMVZJM25LNWdhVDdCZFN3MVhVeVZNcGtrTnp4VnhGRzJOdVZvc2tGc2hhQUpNRWN6d2pkUjY0c0pyWlNkemtiNDhsSkUwMVRNMUR6NW9wbjJjVWtvT1hSZU1ybmVLWjhKaWplNXhkekxRdEZsYlBkN21LV2pZd1N2NHBPSjU1TmFNL1FLOXFIK2pyYW1ZTmRlcTJVK0VUR3NIenlwVFplaGJTZHFuanFHUlZjczdEbHIzemtmSWJMZnlkSk1QaWFRd2tubDcyVlFLS2R4dWRGNWMxSEZIYjZ6N05DMTNYTi9XU09jQ1NmUWZoOUNUN0psa2tmSitKeFBxY3IyRmNPaHJSdGZPK2FhaG5FcnprdVpPNFpLYmYvQUFHMGZ4RThOYmp3NjhwSStsVkRsR2JOZmwvS0hZZkxmU3k4bTVQaWxDUjRHT0k0OVY2MGo2Q2RHdFBhaHJIK3RRNExlT2cvUkEvK0JxZi9BTGwvODEwZWxsRHdkOUI3cFB3NmJ1WGtNdWNlYmo4VVljVzhXRGp4WHNTbjZHZEZRQThOc2U0K0w1bk94ODFITHIwRlVWVldQZFRYSjBWTWZ3eHlSbDViNzhRSHlYY2ZTcWhlYkVsdk1lMTBqc1BtSGV2TGlGNnJ0L1FiWTZKelRLWFZwUDQrdElhMGVnQS9OU0puUnBZS2ZnYlRXUzJjSDdSTE56NjV6bjVKSk9sTkcwMlpjK1hxbGJoOHAyNkx4bzROMjRTVDQ1R0ZqMFhzdXE2TnJEV3ViRFYySzNOZ0dUeHdOTFQ3NzVYUkIwVjZPZ2JpT3l3QWtjSkpKSkthUFMybGFOV255OTB2NGRJZDRYakJrRXNod3lON2o1TktXeWlxbm5ES2FkeDhCR1N2WVUraXRMMjZReFI2ZXJKQnp6QTB1YWZjRmR0RmE2R2xMRGI5TlhLTU5HQVE2Sm54NHBBVXJ1bE1WcnNZZkVnZmRBdzkyOHJ4bkN5S0l2YldVODVjT1dKQkhnK2VXbE9Ga3BiZE5Md1hXT3JpWTQ3U3h5Z0FEMExEbjRyMXRVYVFwYTJmcko3QlRQQjNKcUtudFo4d0dFZk5iSWREVUVrcmV2dDFKRkMza3hqdVBIb1MwTGwvU2luSTFhUjRqN0ZLTVBmeFhscTQyR3pGNy8wVGNKeTVyY2lPcmhkbDU3OEZyY0FlNllxdTJpbWtZMk9lT3BrSi9WTVpJQ1BpMGZJcjJlM1JOdFprdEJKenpjQWRsdFpvKzJpWGpjSE9PTWJodTN2aE10NlZ3Tkd3bis4bDBjT2VWNUh0T25ycmMzeGlsMHhDOXZlOG1ZTlBxZXNVenRYUjNxTjFPOTMvQUFqU1BwWEVnaUtzbGpKOWpMK1M5TjIrMTB0dno5bFlHWjU0QUdmZ3U1VjFUMHJrY2JSTUZ1OG43RUo5bUhOSGFQb3ZPRkYwYlFQaGIxdWpRK3NEdTFGK2xwQU1lZlp5RDZaVHRCMGIwTWc0N25vK1ZqbVlhenFMbFBMd2o0WitpdmxDZ3Y2UlZEdDF2L3AzdW5SUk1IL2c5bEJkRTZXb0xESTUxdnM5WFRsMjVrbXFIT0dmOURubjRxY1JoM0NPc0lMdS9Bd2xJVk5VMUw2bCtkKzN4UHFwVWJCR0xCQ0VJVWRkb1FoQ0VJWEpMQzkwaElaa2VLN0F0akNBMFpVcWtibWVSM0pxVTJDMW9Ta0tLbkVuQ01KU0VJU1VZU2tJUWs0UmhLUWhDVGhZd2xvUWhKd2pDVXNGQ1ZZd2pDVWhDRW5DTUpTRUlTY0l3bElRa1NjSXdsSVFoSlFsSVFoSndoS1FoQ1RoQ1VoQ0VsWXh1bG9RaEpDVUdnanZRbm1pallhV01salNjZDRWbGhjZWVVanUrNFVhcWRaZzVyLy8yUT09AwgAAAAAAAAAAAUgLEeLXxWOA3yyGzRDpaNRL2/uC5oW16JhuqAN3Kadb8UAAgEIAQAAAAACGQsABwAHAQcCBwMHBBEHOAAKATgBDAIMAw0DBwUKAS4RBgsBOAILAwcGOAMLAjgEAgA="
  },
  "typeOriginTable": [
    {
      "module_name": "tex",
      "datatype_name": "TEX",
      "package": "0x60ffa7107820ba53279b6204b75581c6aefd816d6496fada70f7b475603de08e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 16
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 37
    }
  },
  "functionMap": {
    "tex": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x60ffa7107820ba53279b6204b75581c6aefd816d6496fada70f7b475603de08e::tex::TEX",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}