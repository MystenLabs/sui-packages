{
  "dataType": "package",
  "id": "0x62617a60a470bb902e72380c5fb450859cb9647e54e208c451621477a3c7c2f7",
  "version": 1,
  "moduleMap": {
    "siu": ""
  },
  "typeOriginTable": [
    {
      "module_name": "siu",
      "datatype_name": "SIU",
      "package": "0x62617a60a470bb902e72380c5fb450859cb9647e54e208c451621477a3c7c2f7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}