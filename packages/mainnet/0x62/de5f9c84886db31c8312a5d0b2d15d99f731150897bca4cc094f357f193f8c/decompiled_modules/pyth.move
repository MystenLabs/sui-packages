module 0x939c2cd7cbb673289b5a7fb6bb408e1b950c3aa881a9b2f6b9f6d5732b62fda4::pyth {
    public fun destroy(arg0: vector<0x2::coin::Coin<0x2::sui::SUI>>) {
        0x1::vector::destroy_empty<0x2::coin::Coin<0x2::sui::SUI>>(arg0);
    }

    fun update(arg0: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg1: &mut vector<vector<address>>, arg2: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg3: 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::HotPotatoVector<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>, arg4: &0x2::clock::Clock, arg5: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg6: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg7: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg8: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) : 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::HotPotatoVector<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo> {
        let v0 = 0x1::vector::pop_back<vector<address>>(arg1);
        while (0x1::vector::length<address>(&v0) > 0) {
            0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle_pro::update_single_price(arg4, arg6, arg7, arg8, arg2, 0x1::vector::pop_back<address>(&mut v0));
        };
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::update_single_price_feed(arg5, arg3, arg2, 0x1::vector::pop_back<0x2::coin::Coin<0x2::sui::SUI>>(arg0), arg4)
    }

    public fun update1(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &0x2::clock::Clock, arg6: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg7: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg8: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg9: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg10: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg7, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg6, arg0, arg5), arg5), arg5, arg7, arg8, arg9, arg10));
    }

    public fun update10(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &0x2::clock::Clock, arg15: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg16: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg17: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg18: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg19: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg16, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg15, arg0, arg14), arg14), arg14, arg16, arg17, arg18, arg19);
        let v1 = update(arg2, arg3, arg5, v0, arg14, arg16, arg17, arg18, arg19);
        let v2 = update(arg2, arg3, arg6, v1, arg14, arg16, arg17, arg18, arg19);
        let v3 = update(arg2, arg3, arg7, v2, arg14, arg16, arg17, arg18, arg19);
        let v4 = update(arg2, arg3, arg8, v3, arg14, arg16, arg17, arg18, arg19);
        let v5 = update(arg2, arg3, arg9, v4, arg14, arg16, arg17, arg18, arg19);
        let v6 = update(arg2, arg3, arg10, v5, arg14, arg16, arg17, arg18, arg19);
        let v7 = update(arg2, arg3, arg11, v6, arg14, arg16, arg17, arg18, arg19);
        let v8 = update(arg2, arg3, arg12, v7, arg14, arg16, arg17, arg18, arg19);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg13, v8, arg14, arg16, arg17, arg18, arg19));
    }

    public fun update11(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &0x2::clock::Clock, arg16: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg17: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg18: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg19: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg20: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg17, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg16, arg0, arg15), arg15), arg15, arg17, arg18, arg19, arg20);
        let v1 = update(arg2, arg3, arg5, v0, arg15, arg17, arg18, arg19, arg20);
        let v2 = update(arg2, arg3, arg6, v1, arg15, arg17, arg18, arg19, arg20);
        let v3 = update(arg2, arg3, arg7, v2, arg15, arg17, arg18, arg19, arg20);
        let v4 = update(arg2, arg3, arg8, v3, arg15, arg17, arg18, arg19, arg20);
        let v5 = update(arg2, arg3, arg9, v4, arg15, arg17, arg18, arg19, arg20);
        let v6 = update(arg2, arg3, arg10, v5, arg15, arg17, arg18, arg19, arg20);
        let v7 = update(arg2, arg3, arg11, v6, arg15, arg17, arg18, arg19, arg20);
        let v8 = update(arg2, arg3, arg12, v7, arg15, arg17, arg18, arg19, arg20);
        let v9 = update(arg2, arg3, arg13, v8, arg15, arg17, arg18, arg19, arg20);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg14, v9, arg15, arg17, arg18, arg19, arg20));
    }

    public fun update12(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &0x2::clock::Clock, arg17: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg18: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg19: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg20: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg21: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg18, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg17, arg0, arg16), arg16), arg16, arg18, arg19, arg20, arg21);
        let v1 = update(arg2, arg3, arg5, v0, arg16, arg18, arg19, arg20, arg21);
        let v2 = update(arg2, arg3, arg6, v1, arg16, arg18, arg19, arg20, arg21);
        let v3 = update(arg2, arg3, arg7, v2, arg16, arg18, arg19, arg20, arg21);
        let v4 = update(arg2, arg3, arg8, v3, arg16, arg18, arg19, arg20, arg21);
        let v5 = update(arg2, arg3, arg9, v4, arg16, arg18, arg19, arg20, arg21);
        let v6 = update(arg2, arg3, arg10, v5, arg16, arg18, arg19, arg20, arg21);
        let v7 = update(arg2, arg3, arg11, v6, arg16, arg18, arg19, arg20, arg21);
        let v8 = update(arg2, arg3, arg12, v7, arg16, arg18, arg19, arg20, arg21);
        let v9 = update(arg2, arg3, arg13, v8, arg16, arg18, arg19, arg20, arg21);
        let v10 = update(arg2, arg3, arg14, v9, arg16, arg18, arg19, arg20, arg21);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg15, v10, arg16, arg18, arg19, arg20, arg21));
    }

    public fun update13(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &0x2::clock::Clock, arg18: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg19: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg20: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg21: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg22: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg19, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg18, arg0, arg17), arg17), arg17, arg19, arg20, arg21, arg22);
        let v1 = update(arg2, arg3, arg5, v0, arg17, arg19, arg20, arg21, arg22);
        let v2 = update(arg2, arg3, arg6, v1, arg17, arg19, arg20, arg21, arg22);
        let v3 = update(arg2, arg3, arg7, v2, arg17, arg19, arg20, arg21, arg22);
        let v4 = update(arg2, arg3, arg8, v3, arg17, arg19, arg20, arg21, arg22);
        let v5 = update(arg2, arg3, arg9, v4, arg17, arg19, arg20, arg21, arg22);
        let v6 = update(arg2, arg3, arg10, v5, arg17, arg19, arg20, arg21, arg22);
        let v7 = update(arg2, arg3, arg11, v6, arg17, arg19, arg20, arg21, arg22);
        let v8 = update(arg2, arg3, arg12, v7, arg17, arg19, arg20, arg21, arg22);
        let v9 = update(arg2, arg3, arg13, v8, arg17, arg19, arg20, arg21, arg22);
        let v10 = update(arg2, arg3, arg14, v9, arg17, arg19, arg20, arg21, arg22);
        let v11 = update(arg2, arg3, arg15, v10, arg17, arg19, arg20, arg21, arg22);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg16, v11, arg17, arg19, arg20, arg21, arg22));
    }

    public fun update14(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &0x2::clock::Clock, arg19: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg20: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg21: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg22: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg23: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg20, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg19, arg0, arg18), arg18), arg18, arg20, arg21, arg22, arg23);
        let v1 = update(arg2, arg3, arg5, v0, arg18, arg20, arg21, arg22, arg23);
        let v2 = update(arg2, arg3, arg6, v1, arg18, arg20, arg21, arg22, arg23);
        let v3 = update(arg2, arg3, arg7, v2, arg18, arg20, arg21, arg22, arg23);
        let v4 = update(arg2, arg3, arg8, v3, arg18, arg20, arg21, arg22, arg23);
        let v5 = update(arg2, arg3, arg9, v4, arg18, arg20, arg21, arg22, arg23);
        let v6 = update(arg2, arg3, arg10, v5, arg18, arg20, arg21, arg22, arg23);
        let v7 = update(arg2, arg3, arg11, v6, arg18, arg20, arg21, arg22, arg23);
        let v8 = update(arg2, arg3, arg12, v7, arg18, arg20, arg21, arg22, arg23);
        let v9 = update(arg2, arg3, arg13, v8, arg18, arg20, arg21, arg22, arg23);
        let v10 = update(arg2, arg3, arg14, v9, arg18, arg20, arg21, arg22, arg23);
        let v11 = update(arg2, arg3, arg15, v10, arg18, arg20, arg21, arg22, arg23);
        let v12 = update(arg2, arg3, arg16, v11, arg18, arg20, arg21, arg22, arg23);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg17, v12, arg18, arg20, arg21, arg22, arg23));
    }

    public fun update15(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &0x2::clock::Clock, arg20: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg21: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg22: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg23: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg24: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg21, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg20, arg0, arg19), arg19), arg19, arg21, arg22, arg23, arg24);
        let v1 = update(arg2, arg3, arg5, v0, arg19, arg21, arg22, arg23, arg24);
        let v2 = update(arg2, arg3, arg6, v1, arg19, arg21, arg22, arg23, arg24);
        let v3 = update(arg2, arg3, arg7, v2, arg19, arg21, arg22, arg23, arg24);
        let v4 = update(arg2, arg3, arg8, v3, arg19, arg21, arg22, arg23, arg24);
        let v5 = update(arg2, arg3, arg9, v4, arg19, arg21, arg22, arg23, arg24);
        let v6 = update(arg2, arg3, arg10, v5, arg19, arg21, arg22, arg23, arg24);
        let v7 = update(arg2, arg3, arg11, v6, arg19, arg21, arg22, arg23, arg24);
        let v8 = update(arg2, arg3, arg12, v7, arg19, arg21, arg22, arg23, arg24);
        let v9 = update(arg2, arg3, arg13, v8, arg19, arg21, arg22, arg23, arg24);
        let v10 = update(arg2, arg3, arg14, v9, arg19, arg21, arg22, arg23, arg24);
        let v11 = update(arg2, arg3, arg15, v10, arg19, arg21, arg22, arg23, arg24);
        let v12 = update(arg2, arg3, arg16, v11, arg19, arg21, arg22, arg23, arg24);
        let v13 = update(arg2, arg3, arg17, v12, arg19, arg21, arg22, arg23, arg24);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg18, v13, arg19, arg21, arg22, arg23, arg24));
    }

    public fun update16(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &0x2::clock::Clock, arg21: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg22: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg23: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg24: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg25: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg22, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg21, arg0, arg20), arg20), arg20, arg22, arg23, arg24, arg25);
        let v1 = update(arg2, arg3, arg5, v0, arg20, arg22, arg23, arg24, arg25);
        let v2 = update(arg2, arg3, arg6, v1, arg20, arg22, arg23, arg24, arg25);
        let v3 = update(arg2, arg3, arg7, v2, arg20, arg22, arg23, arg24, arg25);
        let v4 = update(arg2, arg3, arg8, v3, arg20, arg22, arg23, arg24, arg25);
        let v5 = update(arg2, arg3, arg9, v4, arg20, arg22, arg23, arg24, arg25);
        let v6 = update(arg2, arg3, arg10, v5, arg20, arg22, arg23, arg24, arg25);
        let v7 = update(arg2, arg3, arg11, v6, arg20, arg22, arg23, arg24, arg25);
        let v8 = update(arg2, arg3, arg12, v7, arg20, arg22, arg23, arg24, arg25);
        let v9 = update(arg2, arg3, arg13, v8, arg20, arg22, arg23, arg24, arg25);
        let v10 = update(arg2, arg3, arg14, v9, arg20, arg22, arg23, arg24, arg25);
        let v11 = update(arg2, arg3, arg15, v10, arg20, arg22, arg23, arg24, arg25);
        let v12 = update(arg2, arg3, arg16, v11, arg20, arg22, arg23, arg24, arg25);
        let v13 = update(arg2, arg3, arg17, v12, arg20, arg22, arg23, arg24, arg25);
        let v14 = update(arg2, arg3, arg18, v13, arg20, arg22, arg23, arg24, arg25);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg19, v14, arg20, arg22, arg23, arg24, arg25));
    }

    public fun update17(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &0x2::clock::Clock, arg22: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg23: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg24: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg25: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg26: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg23, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg22, arg0, arg21), arg21), arg21, arg23, arg24, arg25, arg26);
        let v1 = update(arg2, arg3, arg5, v0, arg21, arg23, arg24, arg25, arg26);
        let v2 = update(arg2, arg3, arg6, v1, arg21, arg23, arg24, arg25, arg26);
        let v3 = update(arg2, arg3, arg7, v2, arg21, arg23, arg24, arg25, arg26);
        let v4 = update(arg2, arg3, arg8, v3, arg21, arg23, arg24, arg25, arg26);
        let v5 = update(arg2, arg3, arg9, v4, arg21, arg23, arg24, arg25, arg26);
        let v6 = update(arg2, arg3, arg10, v5, arg21, arg23, arg24, arg25, arg26);
        let v7 = update(arg2, arg3, arg11, v6, arg21, arg23, arg24, arg25, arg26);
        let v8 = update(arg2, arg3, arg12, v7, arg21, arg23, arg24, arg25, arg26);
        let v9 = update(arg2, arg3, arg13, v8, arg21, arg23, arg24, arg25, arg26);
        let v10 = update(arg2, arg3, arg14, v9, arg21, arg23, arg24, arg25, arg26);
        let v11 = update(arg2, arg3, arg15, v10, arg21, arg23, arg24, arg25, arg26);
        let v12 = update(arg2, arg3, arg16, v11, arg21, arg23, arg24, arg25, arg26);
        let v13 = update(arg2, arg3, arg17, v12, arg21, arg23, arg24, arg25, arg26);
        let v14 = update(arg2, arg3, arg18, v13, arg21, arg23, arg24, arg25, arg26);
        let v15 = update(arg2, arg3, arg19, v14, arg21, arg23, arg24, arg25, arg26);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg20, v15, arg21, arg23, arg24, arg25, arg26));
    }

    public fun update18(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &0x2::clock::Clock, arg23: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg24: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg25: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg26: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg27: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg24, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg23, arg0, arg22), arg22), arg22, arg24, arg25, arg26, arg27);
        let v1 = update(arg2, arg3, arg5, v0, arg22, arg24, arg25, arg26, arg27);
        let v2 = update(arg2, arg3, arg6, v1, arg22, arg24, arg25, arg26, arg27);
        let v3 = update(arg2, arg3, arg7, v2, arg22, arg24, arg25, arg26, arg27);
        let v4 = update(arg2, arg3, arg8, v3, arg22, arg24, arg25, arg26, arg27);
        let v5 = update(arg2, arg3, arg9, v4, arg22, arg24, arg25, arg26, arg27);
        let v6 = update(arg2, arg3, arg10, v5, arg22, arg24, arg25, arg26, arg27);
        let v7 = update(arg2, arg3, arg11, v6, arg22, arg24, arg25, arg26, arg27);
        let v8 = update(arg2, arg3, arg12, v7, arg22, arg24, arg25, arg26, arg27);
        let v9 = update(arg2, arg3, arg13, v8, arg22, arg24, arg25, arg26, arg27);
        let v10 = update(arg2, arg3, arg14, v9, arg22, arg24, arg25, arg26, arg27);
        let v11 = update(arg2, arg3, arg15, v10, arg22, arg24, arg25, arg26, arg27);
        let v12 = update(arg2, arg3, arg16, v11, arg22, arg24, arg25, arg26, arg27);
        let v13 = update(arg2, arg3, arg17, v12, arg22, arg24, arg25, arg26, arg27);
        let v14 = update(arg2, arg3, arg18, v13, arg22, arg24, arg25, arg26, arg27);
        let v15 = update(arg2, arg3, arg19, v14, arg22, arg24, arg25, arg26, arg27);
        let v16 = update(arg2, arg3, arg20, v15, arg22, arg24, arg25, arg26, arg27);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg21, v16, arg22, arg24, arg25, arg26, arg27));
    }

    public fun update19(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &0x2::clock::Clock, arg24: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg25: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg26: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg27: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg28: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg25, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg24, arg0, arg23), arg23), arg23, arg25, arg26, arg27, arg28);
        let v1 = update(arg2, arg3, arg5, v0, arg23, arg25, arg26, arg27, arg28);
        let v2 = update(arg2, arg3, arg6, v1, arg23, arg25, arg26, arg27, arg28);
        let v3 = update(arg2, arg3, arg7, v2, arg23, arg25, arg26, arg27, arg28);
        let v4 = update(arg2, arg3, arg8, v3, arg23, arg25, arg26, arg27, arg28);
        let v5 = update(arg2, arg3, arg9, v4, arg23, arg25, arg26, arg27, arg28);
        let v6 = update(arg2, arg3, arg10, v5, arg23, arg25, arg26, arg27, arg28);
        let v7 = update(arg2, arg3, arg11, v6, arg23, arg25, arg26, arg27, arg28);
        let v8 = update(arg2, arg3, arg12, v7, arg23, arg25, arg26, arg27, arg28);
        let v9 = update(arg2, arg3, arg13, v8, arg23, arg25, arg26, arg27, arg28);
        let v10 = update(arg2, arg3, arg14, v9, arg23, arg25, arg26, arg27, arg28);
        let v11 = update(arg2, arg3, arg15, v10, arg23, arg25, arg26, arg27, arg28);
        let v12 = update(arg2, arg3, arg16, v11, arg23, arg25, arg26, arg27, arg28);
        let v13 = update(arg2, arg3, arg17, v12, arg23, arg25, arg26, arg27, arg28);
        let v14 = update(arg2, arg3, arg18, v13, arg23, arg25, arg26, arg27, arg28);
        let v15 = update(arg2, arg3, arg19, v14, arg23, arg25, arg26, arg27, arg28);
        let v16 = update(arg2, arg3, arg20, v15, arg23, arg25, arg26, arg27, arg28);
        let v17 = update(arg2, arg3, arg21, v16, arg23, arg25, arg26, arg27, arg28);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg22, v17, arg23, arg25, arg26, arg27, arg28));
    }

    public fun update2(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &0x2::clock::Clock, arg7: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg8: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg9: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg10: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg11: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg8, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg7, arg0, arg6), arg6), arg6, arg8, arg9, arg10, arg11);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg5, v0, arg6, arg8, arg9, arg10, arg11));
    }

    public fun update20(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &0x2::clock::Clock, arg25: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg26: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg27: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg28: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg29: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg26, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg25, arg0, arg24), arg24), arg24, arg26, arg27, arg28, arg29);
        let v1 = update(arg2, arg3, arg5, v0, arg24, arg26, arg27, arg28, arg29);
        let v2 = update(arg2, arg3, arg6, v1, arg24, arg26, arg27, arg28, arg29);
        let v3 = update(arg2, arg3, arg7, v2, arg24, arg26, arg27, arg28, arg29);
        let v4 = update(arg2, arg3, arg8, v3, arg24, arg26, arg27, arg28, arg29);
        let v5 = update(arg2, arg3, arg9, v4, arg24, arg26, arg27, arg28, arg29);
        let v6 = update(arg2, arg3, arg10, v5, arg24, arg26, arg27, arg28, arg29);
        let v7 = update(arg2, arg3, arg11, v6, arg24, arg26, arg27, arg28, arg29);
        let v8 = update(arg2, arg3, arg12, v7, arg24, arg26, arg27, arg28, arg29);
        let v9 = update(arg2, arg3, arg13, v8, arg24, arg26, arg27, arg28, arg29);
        let v10 = update(arg2, arg3, arg14, v9, arg24, arg26, arg27, arg28, arg29);
        let v11 = update(arg2, arg3, arg15, v10, arg24, arg26, arg27, arg28, arg29);
        let v12 = update(arg2, arg3, arg16, v11, arg24, arg26, arg27, arg28, arg29);
        let v13 = update(arg2, arg3, arg17, v12, arg24, arg26, arg27, arg28, arg29);
        let v14 = update(arg2, arg3, arg18, v13, arg24, arg26, arg27, arg28, arg29);
        let v15 = update(arg2, arg3, arg19, v14, arg24, arg26, arg27, arg28, arg29);
        let v16 = update(arg2, arg3, arg20, v15, arg24, arg26, arg27, arg28, arg29);
        let v17 = update(arg2, arg3, arg21, v16, arg24, arg26, arg27, arg28, arg29);
        let v18 = update(arg2, arg3, arg22, v17, arg24, arg26, arg27, arg28, arg29);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg23, v18, arg24, arg26, arg27, arg28, arg29));
    }

    public fun update21(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &0x2::clock::Clock, arg26: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg27: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg28: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg29: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg30: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg27, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg26, arg0, arg25), arg25), arg25, arg27, arg28, arg29, arg30);
        let v1 = update(arg2, arg3, arg5, v0, arg25, arg27, arg28, arg29, arg30);
        let v2 = update(arg2, arg3, arg6, v1, arg25, arg27, arg28, arg29, arg30);
        let v3 = update(arg2, arg3, arg7, v2, arg25, arg27, arg28, arg29, arg30);
        let v4 = update(arg2, arg3, arg8, v3, arg25, arg27, arg28, arg29, arg30);
        let v5 = update(arg2, arg3, arg9, v4, arg25, arg27, arg28, arg29, arg30);
        let v6 = update(arg2, arg3, arg10, v5, arg25, arg27, arg28, arg29, arg30);
        let v7 = update(arg2, arg3, arg11, v6, arg25, arg27, arg28, arg29, arg30);
        let v8 = update(arg2, arg3, arg12, v7, arg25, arg27, arg28, arg29, arg30);
        let v9 = update(arg2, arg3, arg13, v8, arg25, arg27, arg28, arg29, arg30);
        let v10 = update(arg2, arg3, arg14, v9, arg25, arg27, arg28, arg29, arg30);
        let v11 = update(arg2, arg3, arg15, v10, arg25, arg27, arg28, arg29, arg30);
        let v12 = update(arg2, arg3, arg16, v11, arg25, arg27, arg28, arg29, arg30);
        let v13 = update(arg2, arg3, arg17, v12, arg25, arg27, arg28, arg29, arg30);
        let v14 = update(arg2, arg3, arg18, v13, arg25, arg27, arg28, arg29, arg30);
        let v15 = update(arg2, arg3, arg19, v14, arg25, arg27, arg28, arg29, arg30);
        let v16 = update(arg2, arg3, arg20, v15, arg25, arg27, arg28, arg29, arg30);
        let v17 = update(arg2, arg3, arg21, v16, arg25, arg27, arg28, arg29, arg30);
        let v18 = update(arg2, arg3, arg22, v17, arg25, arg27, arg28, arg29, arg30);
        let v19 = update(arg2, arg3, arg23, v18, arg25, arg27, arg28, arg29, arg30);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg24, v19, arg25, arg27, arg28, arg29, arg30));
    }

    public fun update22(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &0x2::clock::Clock, arg27: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg28: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg29: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg30: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg31: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg28, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg27, arg0, arg26), arg26), arg26, arg28, arg29, arg30, arg31);
        let v1 = update(arg2, arg3, arg5, v0, arg26, arg28, arg29, arg30, arg31);
        let v2 = update(arg2, arg3, arg6, v1, arg26, arg28, arg29, arg30, arg31);
        let v3 = update(arg2, arg3, arg7, v2, arg26, arg28, arg29, arg30, arg31);
        let v4 = update(arg2, arg3, arg8, v3, arg26, arg28, arg29, arg30, arg31);
        let v5 = update(arg2, arg3, arg9, v4, arg26, arg28, arg29, arg30, arg31);
        let v6 = update(arg2, arg3, arg10, v5, arg26, arg28, arg29, arg30, arg31);
        let v7 = update(arg2, arg3, arg11, v6, arg26, arg28, arg29, arg30, arg31);
        let v8 = update(arg2, arg3, arg12, v7, arg26, arg28, arg29, arg30, arg31);
        let v9 = update(arg2, arg3, arg13, v8, arg26, arg28, arg29, arg30, arg31);
        let v10 = update(arg2, arg3, arg14, v9, arg26, arg28, arg29, arg30, arg31);
        let v11 = update(arg2, arg3, arg15, v10, arg26, arg28, arg29, arg30, arg31);
        let v12 = update(arg2, arg3, arg16, v11, arg26, arg28, arg29, arg30, arg31);
        let v13 = update(arg2, arg3, arg17, v12, arg26, arg28, arg29, arg30, arg31);
        let v14 = update(arg2, arg3, arg18, v13, arg26, arg28, arg29, arg30, arg31);
        let v15 = update(arg2, arg3, arg19, v14, arg26, arg28, arg29, arg30, arg31);
        let v16 = update(arg2, arg3, arg20, v15, arg26, arg28, arg29, arg30, arg31);
        let v17 = update(arg2, arg3, arg21, v16, arg26, arg28, arg29, arg30, arg31);
        let v18 = update(arg2, arg3, arg22, v17, arg26, arg28, arg29, arg30, arg31);
        let v19 = update(arg2, arg3, arg23, v18, arg26, arg28, arg29, arg30, arg31);
        let v20 = update(arg2, arg3, arg24, v19, arg26, arg28, arg29, arg30, arg31);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg25, v20, arg26, arg28, arg29, arg30, arg31));
    }

    public fun update23(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &0x2::clock::Clock, arg28: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg29: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg30: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg31: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg32: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg29, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg28, arg0, arg27), arg27), arg27, arg29, arg30, arg31, arg32);
        let v1 = update(arg2, arg3, arg5, v0, arg27, arg29, arg30, arg31, arg32);
        let v2 = update(arg2, arg3, arg6, v1, arg27, arg29, arg30, arg31, arg32);
        let v3 = update(arg2, arg3, arg7, v2, arg27, arg29, arg30, arg31, arg32);
        let v4 = update(arg2, arg3, arg8, v3, arg27, arg29, arg30, arg31, arg32);
        let v5 = update(arg2, arg3, arg9, v4, arg27, arg29, arg30, arg31, arg32);
        let v6 = update(arg2, arg3, arg10, v5, arg27, arg29, arg30, arg31, arg32);
        let v7 = update(arg2, arg3, arg11, v6, arg27, arg29, arg30, arg31, arg32);
        let v8 = update(arg2, arg3, arg12, v7, arg27, arg29, arg30, arg31, arg32);
        let v9 = update(arg2, arg3, arg13, v8, arg27, arg29, arg30, arg31, arg32);
        let v10 = update(arg2, arg3, arg14, v9, arg27, arg29, arg30, arg31, arg32);
        let v11 = update(arg2, arg3, arg15, v10, arg27, arg29, arg30, arg31, arg32);
        let v12 = update(arg2, arg3, arg16, v11, arg27, arg29, arg30, arg31, arg32);
        let v13 = update(arg2, arg3, arg17, v12, arg27, arg29, arg30, arg31, arg32);
        let v14 = update(arg2, arg3, arg18, v13, arg27, arg29, arg30, arg31, arg32);
        let v15 = update(arg2, arg3, arg19, v14, arg27, arg29, arg30, arg31, arg32);
        let v16 = update(arg2, arg3, arg20, v15, arg27, arg29, arg30, arg31, arg32);
        let v17 = update(arg2, arg3, arg21, v16, arg27, arg29, arg30, arg31, arg32);
        let v18 = update(arg2, arg3, arg22, v17, arg27, arg29, arg30, arg31, arg32);
        let v19 = update(arg2, arg3, arg23, v18, arg27, arg29, arg30, arg31, arg32);
        let v20 = update(arg2, arg3, arg24, v19, arg27, arg29, arg30, arg31, arg32);
        let v21 = update(arg2, arg3, arg25, v20, arg27, arg29, arg30, arg31, arg32);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg26, v21, arg27, arg29, arg30, arg31, arg32));
    }

    public fun update24(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &0x2::clock::Clock, arg29: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg30: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg31: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg32: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg33: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg30, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg29, arg0, arg28), arg28), arg28, arg30, arg31, arg32, arg33);
        let v1 = update(arg2, arg3, arg5, v0, arg28, arg30, arg31, arg32, arg33);
        let v2 = update(arg2, arg3, arg6, v1, arg28, arg30, arg31, arg32, arg33);
        let v3 = update(arg2, arg3, arg7, v2, arg28, arg30, arg31, arg32, arg33);
        let v4 = update(arg2, arg3, arg8, v3, arg28, arg30, arg31, arg32, arg33);
        let v5 = update(arg2, arg3, arg9, v4, arg28, arg30, arg31, arg32, arg33);
        let v6 = update(arg2, arg3, arg10, v5, arg28, arg30, arg31, arg32, arg33);
        let v7 = update(arg2, arg3, arg11, v6, arg28, arg30, arg31, arg32, arg33);
        let v8 = update(arg2, arg3, arg12, v7, arg28, arg30, arg31, arg32, arg33);
        let v9 = update(arg2, arg3, arg13, v8, arg28, arg30, arg31, arg32, arg33);
        let v10 = update(arg2, arg3, arg14, v9, arg28, arg30, arg31, arg32, arg33);
        let v11 = update(arg2, arg3, arg15, v10, arg28, arg30, arg31, arg32, arg33);
        let v12 = update(arg2, arg3, arg16, v11, arg28, arg30, arg31, arg32, arg33);
        let v13 = update(arg2, arg3, arg17, v12, arg28, arg30, arg31, arg32, arg33);
        let v14 = update(arg2, arg3, arg18, v13, arg28, arg30, arg31, arg32, arg33);
        let v15 = update(arg2, arg3, arg19, v14, arg28, arg30, arg31, arg32, arg33);
        let v16 = update(arg2, arg3, arg20, v15, arg28, arg30, arg31, arg32, arg33);
        let v17 = update(arg2, arg3, arg21, v16, arg28, arg30, arg31, arg32, arg33);
        let v18 = update(arg2, arg3, arg22, v17, arg28, arg30, arg31, arg32, arg33);
        let v19 = update(arg2, arg3, arg23, v18, arg28, arg30, arg31, arg32, arg33);
        let v20 = update(arg2, arg3, arg24, v19, arg28, arg30, arg31, arg32, arg33);
        let v21 = update(arg2, arg3, arg25, v20, arg28, arg30, arg31, arg32, arg33);
        let v22 = update(arg2, arg3, arg26, v21, arg28, arg30, arg31, arg32, arg33);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg27, v22, arg28, arg30, arg31, arg32, arg33));
    }

    public fun update25(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &0x2::clock::Clock, arg30: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg31: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg32: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg33: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg34: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg31, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg30, arg0, arg29), arg29), arg29, arg31, arg32, arg33, arg34);
        let v1 = update(arg2, arg3, arg5, v0, arg29, arg31, arg32, arg33, arg34);
        let v2 = update(arg2, arg3, arg6, v1, arg29, arg31, arg32, arg33, arg34);
        let v3 = update(arg2, arg3, arg7, v2, arg29, arg31, arg32, arg33, arg34);
        let v4 = update(arg2, arg3, arg8, v3, arg29, arg31, arg32, arg33, arg34);
        let v5 = update(arg2, arg3, arg9, v4, arg29, arg31, arg32, arg33, arg34);
        let v6 = update(arg2, arg3, arg10, v5, arg29, arg31, arg32, arg33, arg34);
        let v7 = update(arg2, arg3, arg11, v6, arg29, arg31, arg32, arg33, arg34);
        let v8 = update(arg2, arg3, arg12, v7, arg29, arg31, arg32, arg33, arg34);
        let v9 = update(arg2, arg3, arg13, v8, arg29, arg31, arg32, arg33, arg34);
        let v10 = update(arg2, arg3, arg14, v9, arg29, arg31, arg32, arg33, arg34);
        let v11 = update(arg2, arg3, arg15, v10, arg29, arg31, arg32, arg33, arg34);
        let v12 = update(arg2, arg3, arg16, v11, arg29, arg31, arg32, arg33, arg34);
        let v13 = update(arg2, arg3, arg17, v12, arg29, arg31, arg32, arg33, arg34);
        let v14 = update(arg2, arg3, arg18, v13, arg29, arg31, arg32, arg33, arg34);
        let v15 = update(arg2, arg3, arg19, v14, arg29, arg31, arg32, arg33, arg34);
        let v16 = update(arg2, arg3, arg20, v15, arg29, arg31, arg32, arg33, arg34);
        let v17 = update(arg2, arg3, arg21, v16, arg29, arg31, arg32, arg33, arg34);
        let v18 = update(arg2, arg3, arg22, v17, arg29, arg31, arg32, arg33, arg34);
        let v19 = update(arg2, arg3, arg23, v18, arg29, arg31, arg32, arg33, arg34);
        let v20 = update(arg2, arg3, arg24, v19, arg29, arg31, arg32, arg33, arg34);
        let v21 = update(arg2, arg3, arg25, v20, arg29, arg31, arg32, arg33, arg34);
        let v22 = update(arg2, arg3, arg26, v21, arg29, arg31, arg32, arg33, arg34);
        let v23 = update(arg2, arg3, arg27, v22, arg29, arg31, arg32, arg33, arg34);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg28, v23, arg29, arg31, arg32, arg33, arg34));
    }

    public fun update26(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg30: &0x2::clock::Clock, arg31: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg32: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg33: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg34: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg35: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg32, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg31, arg0, arg30), arg30), arg30, arg32, arg33, arg34, arg35);
        let v1 = update(arg2, arg3, arg5, v0, arg30, arg32, arg33, arg34, arg35);
        let v2 = update(arg2, arg3, arg6, v1, arg30, arg32, arg33, arg34, arg35);
        let v3 = update(arg2, arg3, arg7, v2, arg30, arg32, arg33, arg34, arg35);
        let v4 = update(arg2, arg3, arg8, v3, arg30, arg32, arg33, arg34, arg35);
        let v5 = update(arg2, arg3, arg9, v4, arg30, arg32, arg33, arg34, arg35);
        let v6 = update(arg2, arg3, arg10, v5, arg30, arg32, arg33, arg34, arg35);
        let v7 = update(arg2, arg3, arg11, v6, arg30, arg32, arg33, arg34, arg35);
        let v8 = update(arg2, arg3, arg12, v7, arg30, arg32, arg33, arg34, arg35);
        let v9 = update(arg2, arg3, arg13, v8, arg30, arg32, arg33, arg34, arg35);
        let v10 = update(arg2, arg3, arg14, v9, arg30, arg32, arg33, arg34, arg35);
        let v11 = update(arg2, arg3, arg15, v10, arg30, arg32, arg33, arg34, arg35);
        let v12 = update(arg2, arg3, arg16, v11, arg30, arg32, arg33, arg34, arg35);
        let v13 = update(arg2, arg3, arg17, v12, arg30, arg32, arg33, arg34, arg35);
        let v14 = update(arg2, arg3, arg18, v13, arg30, arg32, arg33, arg34, arg35);
        let v15 = update(arg2, arg3, arg19, v14, arg30, arg32, arg33, arg34, arg35);
        let v16 = update(arg2, arg3, arg20, v15, arg30, arg32, arg33, arg34, arg35);
        let v17 = update(arg2, arg3, arg21, v16, arg30, arg32, arg33, arg34, arg35);
        let v18 = update(arg2, arg3, arg22, v17, arg30, arg32, arg33, arg34, arg35);
        let v19 = update(arg2, arg3, arg23, v18, arg30, arg32, arg33, arg34, arg35);
        let v20 = update(arg2, arg3, arg24, v19, arg30, arg32, arg33, arg34, arg35);
        let v21 = update(arg2, arg3, arg25, v20, arg30, arg32, arg33, arg34, arg35);
        let v22 = update(arg2, arg3, arg26, v21, arg30, arg32, arg33, arg34, arg35);
        let v23 = update(arg2, arg3, arg27, v22, arg30, arg32, arg33, arg34, arg35);
        let v24 = update(arg2, arg3, arg28, v23, arg30, arg32, arg33, arg34, arg35);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg29, v24, arg30, arg32, arg33, arg34, arg35));
    }

    public fun update27(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg30: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg31: &0x2::clock::Clock, arg32: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg33: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg34: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg35: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg36: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg33, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg32, arg0, arg31), arg31), arg31, arg33, arg34, arg35, arg36);
        let v1 = update(arg2, arg3, arg5, v0, arg31, arg33, arg34, arg35, arg36);
        let v2 = update(arg2, arg3, arg6, v1, arg31, arg33, arg34, arg35, arg36);
        let v3 = update(arg2, arg3, arg7, v2, arg31, arg33, arg34, arg35, arg36);
        let v4 = update(arg2, arg3, arg8, v3, arg31, arg33, arg34, arg35, arg36);
        let v5 = update(arg2, arg3, arg9, v4, arg31, arg33, arg34, arg35, arg36);
        let v6 = update(arg2, arg3, arg10, v5, arg31, arg33, arg34, arg35, arg36);
        let v7 = update(arg2, arg3, arg11, v6, arg31, arg33, arg34, arg35, arg36);
        let v8 = update(arg2, arg3, arg12, v7, arg31, arg33, arg34, arg35, arg36);
        let v9 = update(arg2, arg3, arg13, v8, arg31, arg33, arg34, arg35, arg36);
        let v10 = update(arg2, arg3, arg14, v9, arg31, arg33, arg34, arg35, arg36);
        let v11 = update(arg2, arg3, arg15, v10, arg31, arg33, arg34, arg35, arg36);
        let v12 = update(arg2, arg3, arg16, v11, arg31, arg33, arg34, arg35, arg36);
        let v13 = update(arg2, arg3, arg17, v12, arg31, arg33, arg34, arg35, arg36);
        let v14 = update(arg2, arg3, arg18, v13, arg31, arg33, arg34, arg35, arg36);
        let v15 = update(arg2, arg3, arg19, v14, arg31, arg33, arg34, arg35, arg36);
        let v16 = update(arg2, arg3, arg20, v15, arg31, arg33, arg34, arg35, arg36);
        let v17 = update(arg2, arg3, arg21, v16, arg31, arg33, arg34, arg35, arg36);
        let v18 = update(arg2, arg3, arg22, v17, arg31, arg33, arg34, arg35, arg36);
        let v19 = update(arg2, arg3, arg23, v18, arg31, arg33, arg34, arg35, arg36);
        let v20 = update(arg2, arg3, arg24, v19, arg31, arg33, arg34, arg35, arg36);
        let v21 = update(arg2, arg3, arg25, v20, arg31, arg33, arg34, arg35, arg36);
        let v22 = update(arg2, arg3, arg26, v21, arg31, arg33, arg34, arg35, arg36);
        let v23 = update(arg2, arg3, arg27, v22, arg31, arg33, arg34, arg35, arg36);
        let v24 = update(arg2, arg3, arg28, v23, arg31, arg33, arg34, arg35, arg36);
        let v25 = update(arg2, arg3, arg29, v24, arg31, arg33, arg34, arg35, arg36);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg30, v25, arg31, arg33, arg34, arg35, arg36));
    }

    public fun update28(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg30: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg31: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg32: &0x2::clock::Clock, arg33: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg34: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg35: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg36: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg37: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg34, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg33, arg0, arg32), arg32), arg32, arg34, arg35, arg36, arg37);
        let v1 = update(arg2, arg3, arg5, v0, arg32, arg34, arg35, arg36, arg37);
        let v2 = update(arg2, arg3, arg6, v1, arg32, arg34, arg35, arg36, arg37);
        let v3 = update(arg2, arg3, arg7, v2, arg32, arg34, arg35, arg36, arg37);
        let v4 = update(arg2, arg3, arg8, v3, arg32, arg34, arg35, arg36, arg37);
        let v5 = update(arg2, arg3, arg9, v4, arg32, arg34, arg35, arg36, arg37);
        let v6 = update(arg2, arg3, arg10, v5, arg32, arg34, arg35, arg36, arg37);
        let v7 = update(arg2, arg3, arg11, v6, arg32, arg34, arg35, arg36, arg37);
        let v8 = update(arg2, arg3, arg12, v7, arg32, arg34, arg35, arg36, arg37);
        let v9 = update(arg2, arg3, arg13, v8, arg32, arg34, arg35, arg36, arg37);
        let v10 = update(arg2, arg3, arg14, v9, arg32, arg34, arg35, arg36, arg37);
        let v11 = update(arg2, arg3, arg15, v10, arg32, arg34, arg35, arg36, arg37);
        let v12 = update(arg2, arg3, arg16, v11, arg32, arg34, arg35, arg36, arg37);
        let v13 = update(arg2, arg3, arg17, v12, arg32, arg34, arg35, arg36, arg37);
        let v14 = update(arg2, arg3, arg18, v13, arg32, arg34, arg35, arg36, arg37);
        let v15 = update(arg2, arg3, arg19, v14, arg32, arg34, arg35, arg36, arg37);
        let v16 = update(arg2, arg3, arg20, v15, arg32, arg34, arg35, arg36, arg37);
        let v17 = update(arg2, arg3, arg21, v16, arg32, arg34, arg35, arg36, arg37);
        let v18 = update(arg2, arg3, arg22, v17, arg32, arg34, arg35, arg36, arg37);
        let v19 = update(arg2, arg3, arg23, v18, arg32, arg34, arg35, arg36, arg37);
        let v20 = update(arg2, arg3, arg24, v19, arg32, arg34, arg35, arg36, arg37);
        let v21 = update(arg2, arg3, arg25, v20, arg32, arg34, arg35, arg36, arg37);
        let v22 = update(arg2, arg3, arg26, v21, arg32, arg34, arg35, arg36, arg37);
        let v23 = update(arg2, arg3, arg27, v22, arg32, arg34, arg35, arg36, arg37);
        let v24 = update(arg2, arg3, arg28, v23, arg32, arg34, arg35, arg36, arg37);
        let v25 = update(arg2, arg3, arg29, v24, arg32, arg34, arg35, arg36, arg37);
        let v26 = update(arg2, arg3, arg30, v25, arg32, arg34, arg35, arg36, arg37);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg31, v26, arg32, arg34, arg35, arg36, arg37));
    }

    public fun update29(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg30: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg31: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg32: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg33: &0x2::clock::Clock, arg34: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg35: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg36: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg37: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg38: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg35, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg34, arg0, arg33), arg33), arg33, arg35, arg36, arg37, arg38);
        let v1 = update(arg2, arg3, arg5, v0, arg33, arg35, arg36, arg37, arg38);
        let v2 = update(arg2, arg3, arg6, v1, arg33, arg35, arg36, arg37, arg38);
        let v3 = update(arg2, arg3, arg7, v2, arg33, arg35, arg36, arg37, arg38);
        let v4 = update(arg2, arg3, arg8, v3, arg33, arg35, arg36, arg37, arg38);
        let v5 = update(arg2, arg3, arg9, v4, arg33, arg35, arg36, arg37, arg38);
        let v6 = update(arg2, arg3, arg10, v5, arg33, arg35, arg36, arg37, arg38);
        let v7 = update(arg2, arg3, arg11, v6, arg33, arg35, arg36, arg37, arg38);
        let v8 = update(arg2, arg3, arg12, v7, arg33, arg35, arg36, arg37, arg38);
        let v9 = update(arg2, arg3, arg13, v8, arg33, arg35, arg36, arg37, arg38);
        let v10 = update(arg2, arg3, arg14, v9, arg33, arg35, arg36, arg37, arg38);
        let v11 = update(arg2, arg3, arg15, v10, arg33, arg35, arg36, arg37, arg38);
        let v12 = update(arg2, arg3, arg16, v11, arg33, arg35, arg36, arg37, arg38);
        let v13 = update(arg2, arg3, arg17, v12, arg33, arg35, arg36, arg37, arg38);
        let v14 = update(arg2, arg3, arg18, v13, arg33, arg35, arg36, arg37, arg38);
        let v15 = update(arg2, arg3, arg19, v14, arg33, arg35, arg36, arg37, arg38);
        let v16 = update(arg2, arg3, arg20, v15, arg33, arg35, arg36, arg37, arg38);
        let v17 = update(arg2, arg3, arg21, v16, arg33, arg35, arg36, arg37, arg38);
        let v18 = update(arg2, arg3, arg22, v17, arg33, arg35, arg36, arg37, arg38);
        let v19 = update(arg2, arg3, arg23, v18, arg33, arg35, arg36, arg37, arg38);
        let v20 = update(arg2, arg3, arg24, v19, arg33, arg35, arg36, arg37, arg38);
        let v21 = update(arg2, arg3, arg25, v20, arg33, arg35, arg36, arg37, arg38);
        let v22 = update(arg2, arg3, arg26, v21, arg33, arg35, arg36, arg37, arg38);
        let v23 = update(arg2, arg3, arg27, v22, arg33, arg35, arg36, arg37, arg38);
        let v24 = update(arg2, arg3, arg28, v23, arg33, arg35, arg36, arg37, arg38);
        let v25 = update(arg2, arg3, arg29, v24, arg33, arg35, arg36, arg37, arg38);
        let v26 = update(arg2, arg3, arg30, v25, arg33, arg35, arg36, arg37, arg38);
        let v27 = update(arg2, arg3, arg31, v26, arg33, arg35, arg36, arg37, arg38);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg32, v27, arg33, arg35, arg36, arg37, arg38));
    }

    public fun update3(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &0x2::clock::Clock, arg8: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg9: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg10: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg11: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg12: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg9, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg8, arg0, arg7), arg7), arg7, arg9, arg10, arg11, arg12);
        let v1 = update(arg2, arg3, arg5, v0, arg7, arg9, arg10, arg11, arg12);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg6, v1, arg7, arg9, arg10, arg11, arg12));
    }

    public fun update30(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg14: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg15: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg16: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg17: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg18: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg19: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg20: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg21: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg22: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg23: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg24: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg25: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg26: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg27: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg28: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg29: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg30: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg31: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg32: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg33: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg34: &0x2::clock::Clock, arg35: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg36: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg37: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg38: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg39: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg36, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg35, arg0, arg34), arg34), arg34, arg36, arg37, arg38, arg39);
        let v1 = update(arg2, arg3, arg5, v0, arg34, arg36, arg37, arg38, arg39);
        let v2 = update(arg2, arg3, arg6, v1, arg34, arg36, arg37, arg38, arg39);
        let v3 = update(arg2, arg3, arg7, v2, arg34, arg36, arg37, arg38, arg39);
        let v4 = update(arg2, arg3, arg8, v3, arg34, arg36, arg37, arg38, arg39);
        let v5 = update(arg2, arg3, arg9, v4, arg34, arg36, arg37, arg38, arg39);
        let v6 = update(arg2, arg3, arg10, v5, arg34, arg36, arg37, arg38, arg39);
        let v7 = update(arg2, arg3, arg11, v6, arg34, arg36, arg37, arg38, arg39);
        let v8 = update(arg2, arg3, arg12, v7, arg34, arg36, arg37, arg38, arg39);
        let v9 = update(arg2, arg3, arg13, v8, arg34, arg36, arg37, arg38, arg39);
        let v10 = update(arg2, arg3, arg14, v9, arg34, arg36, arg37, arg38, arg39);
        let v11 = update(arg2, arg3, arg15, v10, arg34, arg36, arg37, arg38, arg39);
        let v12 = update(arg2, arg3, arg16, v11, arg34, arg36, arg37, arg38, arg39);
        let v13 = update(arg2, arg3, arg17, v12, arg34, arg36, arg37, arg38, arg39);
        let v14 = update(arg2, arg3, arg18, v13, arg34, arg36, arg37, arg38, arg39);
        let v15 = update(arg2, arg3, arg19, v14, arg34, arg36, arg37, arg38, arg39);
        let v16 = update(arg2, arg3, arg20, v15, arg34, arg36, arg37, arg38, arg39);
        let v17 = update(arg2, arg3, arg21, v16, arg34, arg36, arg37, arg38, arg39);
        let v18 = update(arg2, arg3, arg22, v17, arg34, arg36, arg37, arg38, arg39);
        let v19 = update(arg2, arg3, arg23, v18, arg34, arg36, arg37, arg38, arg39);
        let v20 = update(arg2, arg3, arg24, v19, arg34, arg36, arg37, arg38, arg39);
        let v21 = update(arg2, arg3, arg25, v20, arg34, arg36, arg37, arg38, arg39);
        let v22 = update(arg2, arg3, arg26, v21, arg34, arg36, arg37, arg38, arg39);
        let v23 = update(arg2, arg3, arg27, v22, arg34, arg36, arg37, arg38, arg39);
        let v24 = update(arg2, arg3, arg28, v23, arg34, arg36, arg37, arg38, arg39);
        let v25 = update(arg2, arg3, arg29, v24, arg34, arg36, arg37, arg38, arg39);
        let v26 = update(arg2, arg3, arg30, v25, arg34, arg36, arg37, arg38, arg39);
        let v27 = update(arg2, arg3, arg31, v26, arg34, arg36, arg37, arg38, arg39);
        let v28 = update(arg2, arg3, arg32, v27, arg34, arg36, arg37, arg38, arg39);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg33, v28, arg34, arg36, arg37, arg38, arg39));
    }

    public fun update4(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &0x2::clock::Clock, arg9: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg10: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg11: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg12: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg13: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg10, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg9, arg0, arg8), arg8), arg8, arg10, arg11, arg12, arg13);
        let v1 = update(arg2, arg3, arg5, v0, arg8, arg10, arg11, arg12, arg13);
        let v2 = update(arg2, arg3, arg6, v1, arg8, arg10, arg11, arg12, arg13);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg7, v2, arg8, arg10, arg11, arg12, arg13));
    }

    public fun update5(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &0x2::clock::Clock, arg10: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg11: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg12: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg13: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg14: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg11, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg10, arg0, arg9), arg9), arg9, arg11, arg12, arg13, arg14);
        let v1 = update(arg2, arg3, arg5, v0, arg9, arg11, arg12, arg13, arg14);
        let v2 = update(arg2, arg3, arg6, v1, arg9, arg11, arg12, arg13, arg14);
        let v3 = update(arg2, arg3, arg7, v2, arg9, arg11, arg12, arg13, arg14);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg8, v3, arg9, arg11, arg12, arg13, arg14));
    }

    public fun update6(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &0x2::clock::Clock, arg11: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg12: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg13: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg14: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg15: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg12, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg11, arg0, arg10), arg10), arg10, arg12, arg13, arg14, arg15);
        let v1 = update(arg2, arg3, arg5, v0, arg10, arg12, arg13, arg14, arg15);
        let v2 = update(arg2, arg3, arg6, v1, arg10, arg12, arg13, arg14, arg15);
        let v3 = update(arg2, arg3, arg7, v2, arg10, arg12, arg13, arg14, arg15);
        let v4 = update(arg2, arg3, arg8, v3, arg10, arg12, arg13, arg14, arg15);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg9, v4, arg10, arg12, arg13, arg14, arg15));
    }

    public fun update7(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &0x2::clock::Clock, arg12: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg13: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg14: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg15: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg16: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg13, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg12, arg0, arg11), arg11), arg11, arg13, arg14, arg15, arg16);
        let v1 = update(arg2, arg3, arg5, v0, arg11, arg13, arg14, arg15, arg16);
        let v2 = update(arg2, arg3, arg6, v1, arg11, arg13, arg14, arg15, arg16);
        let v3 = update(arg2, arg3, arg7, v2, arg11, arg13, arg14, arg15, arg16);
        let v4 = update(arg2, arg3, arg8, v3, arg11, arg13, arg14, arg15, arg16);
        let v5 = update(arg2, arg3, arg9, v4, arg11, arg13, arg14, arg15, arg16);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg10, v5, arg11, arg13, arg14, arg15, arg16));
    }

    public fun update8(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &0x2::clock::Clock, arg13: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg14: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg15: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg16: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg17: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg14, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg13, arg0, arg12), arg12), arg12, arg14, arg15, arg16, arg17);
        let v1 = update(arg2, arg3, arg5, v0, arg12, arg14, arg15, arg16, arg17);
        let v2 = update(arg2, arg3, arg6, v1, arg12, arg14, arg15, arg16, arg17);
        let v3 = update(arg2, arg3, arg7, v2, arg12, arg14, arg15, arg16, arg17);
        let v4 = update(arg2, arg3, arg8, v3, arg12, arg14, arg15, arg16, arg17);
        let v5 = update(arg2, arg3, arg9, v4, arg12, arg14, arg15, arg16, arg17);
        let v6 = update(arg2, arg3, arg10, v5, arg12, arg14, arg15, arg16, arg17);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg11, v6, arg12, arg14, arg15, arg16, arg17));
    }

    public fun update9(arg0: vector<u8>, arg1: vector<u8>, arg2: &mut vector<0x2::coin::Coin<0x2::sui::SUI>>, arg3: &mut vector<vector<address>>, arg4: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg5: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg6: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg7: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg8: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg9: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg10: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg11: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg12: &mut 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfoObject, arg13: &0x2::clock::Clock, arg14: &0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::state::State, arg15: &0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::state::State, arg16: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::config::OracleConfig, arg17: &mut 0xca441b44943c16be0e6e23c5a955bb971537ea3289ae8016fbf33fffe1fd210f::oracle::PriceOracle, arg18: &0x5d8fbbf6f908a4af8c6d072669a462d53e03eb3c1d863bd0359dc818c69ea706::SupraSValueFeed::OracleHolder) {
        let v0 = update(arg2, arg3, arg4, 0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::pyth::create_authenticated_price_infos_using_accumulator(arg15, arg1, 0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a::vaa::parse_and_verify(arg14, arg0, arg13), arg13), arg13, arg15, arg16, arg17, arg18);
        let v1 = update(arg2, arg3, arg5, v0, arg13, arg15, arg16, arg17, arg18);
        let v2 = update(arg2, arg3, arg6, v1, arg13, arg15, arg16, arg17, arg18);
        let v3 = update(arg2, arg3, arg7, v2, arg13, arg15, arg16, arg17, arg18);
        let v4 = update(arg2, arg3, arg8, v3, arg13, arg15, arg16, arg17, arg18);
        let v5 = update(arg2, arg3, arg9, v4, arg13, arg15, arg16, arg17, arg18);
        let v6 = update(arg2, arg3, arg10, v5, arg13, arg15, arg16, arg17, arg18);
        let v7 = update(arg2, arg3, arg11, v6, arg13, arg15, arg16, arg17, arg18);
        0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::hot_potato_vector::destroy<0x8d97f1cd6ac663735be08d1d2b6d02a159e711586461306ce60a2b7a6a565a9e::price_info::PriceInfo>(update(arg2, arg3, arg12, v7, arg13, arg15, arg16, arg17, arg18));
    }

    // decompiled from Move bytecode v6
}

