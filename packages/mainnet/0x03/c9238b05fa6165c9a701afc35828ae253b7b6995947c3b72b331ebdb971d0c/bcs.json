{
  "dataType": "package",
  "id": "0x03c9238b05fa6165c9a701afc35828ae253b7b6995947c3b72b331ebdb971d0c",
  "version": 1,
  "moduleMap": {
    "catfish": ""
  },
  "typeOriginTable": [
    {
      "module_name": "catfish",
      "datatype_name": "CATFISH",
      "package": "0x03c9238b05fa6165c9a701afc35828ae253b7b6995947c3b72b331ebdb971d0c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}