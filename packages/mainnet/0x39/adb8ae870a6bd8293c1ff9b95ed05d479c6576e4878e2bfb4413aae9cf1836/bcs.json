{
  "dataType": "package",
  "id": "0x39adb8ae870a6bd8293c1ff9b95ed05d479c6576e4878e2bfb4413aae9cf1836",
  "version": 1,
  "moduleMap": {
    "scs": ""
  },
  "typeOriginTable": [
    {
      "module_name": "scs",
      "datatype_name": "SCS",
      "package": "0x39adb8ae870a6bd8293c1ff9b95ed05d479c6576e4878e2bfb4413aae9cf1836"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}