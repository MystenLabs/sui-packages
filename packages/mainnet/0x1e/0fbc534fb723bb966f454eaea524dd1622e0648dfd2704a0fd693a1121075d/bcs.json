{
  "dataType": "package",
  "id": "0x1e0fbc534fb723bb966f454eaea524dd1622e0648dfd2704a0fd693a1121075d",
  "version": 1,
  "moduleMap": {
    "tiger": ""
  },
  "typeOriginTable": [
    {
      "module_name": "tiger",
      "datatype_name": "TIGER",
      "package": "0x1e0fbc534fb723bb966f454eaea524dd1622e0648dfd2704a0fd693a1121075d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "tiger": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1e0fbc534fb723bb966f454eaea524dd1622e0648dfd2704a0fd693a1121075d::tiger::TIGER",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}