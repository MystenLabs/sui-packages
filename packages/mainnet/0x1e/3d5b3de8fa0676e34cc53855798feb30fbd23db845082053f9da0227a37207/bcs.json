{
  "dataType": "package",
  "id": "0x1e3d5b3de8fa0676e34cc53855798feb30fbd23db845082053f9da0227a37207",
  "version": 1,
  "moduleMap": {
    "droppy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "droppy",
      "datatype_name": "DROPPY",
      "package": "0x1e3d5b3de8fa0676e34cc53855798feb30fbd23db845082053f9da0227a37207"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "droppy": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1e3d5b3de8fa0676e34cc53855798feb30fbd23db845082053f9da0227a37207::droppy::DROPPY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}