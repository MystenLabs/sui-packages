{
  "dataType": "package",
  "id": "0xcc67ae26c194918413670b7bb51d4ba25f1b87c0e986bb8151ac1b118a2a5e34",
  "version": 1,
  "moduleMap": {
    "vibe": ""
  },
  "typeOriginTable": [
    {
      "module_name": "vibe",
      "datatype_name": "VIBE",
      "package": "0xcc67ae26c194918413670b7bb51d4ba25f1b87c0e986bb8151ac1b118a2a5e34"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "vibe": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xcc67ae26c194918413670b7bb51d4ba25f1b87c0e986bb8151ac1b118a2a5e34::vibe::VIBE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}