{
  "dataType": "package",
  "id": "0x96c5e98857abfcd319a562c6ae0e4a2776004f50633d85a6fe9878f7cddb31d5",
  "version": 1,
  "moduleMap": {
    "suichi": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suichi",
      "datatype_name": "SUICHI",
      "package": "0x96c5e98857abfcd319a562c6ae0e4a2776004f50633d85a6fe9878f7cddb31d5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}