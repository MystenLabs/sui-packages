{
  "dataType": "package",
  "id": "0xc9447aeeca73bc833827fdae9f4782091a6b3d2b3a99f5919115974564a828e3",
  "version": 1,
  "moduleMap": {
    "bluey": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bluey",
      "datatype_name": "BLUEY",
      "package": "0xc9447aeeca73bc833827fdae9f4782091a6b3d2b3a99f5919115974564a828e3"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}