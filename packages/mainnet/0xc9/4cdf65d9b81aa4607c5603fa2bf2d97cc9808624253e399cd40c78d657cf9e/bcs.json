{
  "dataType": "package",
  "id": "0xc94cdf65d9b81aa4607c5603fa2bf2d97cc9808624253e399cd40c78d657cf9e",
  "version": 1,
  "moduleMap": {
    "duckbuck": ""
  },
  "typeOriginTable": [
    {
      "module_name": "duckbuck",
      "datatype_name": "DUCKBUCK",
      "package": "0xc94cdf65d9b81aa4607c5603fa2bf2d97cc9808624253e399cd40c78d657cf9e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "duckbuck": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xc94cdf65d9b81aa4607c5603fa2bf2d97cc9808624253e399cd40c78d657cf9e::duckbuck::DUCKBUCK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}