{
  "dataType": "package",
  "id": "0x3efccc88a27eb19130cca5b8e0fa68cf153eaab93a94dfdb9fdd77f718e8c4e6",
  "version": 1,
  "moduleMap": {
    "thc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "thc",
      "datatype_name": "THC",
      "package": "0x3efccc88a27eb19130cca5b8e0fa68cf153eaab93a94dfdb9fdd77f718e8c4e6"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  }
}