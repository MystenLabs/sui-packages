{
  "dataType": "package",
  "id": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa",
  "version": 1,
  "moduleMap": {
    "voting": ""
  },
  "typeOriginTable": [
    {
      "module_name": "voting",
      "datatype_name": "Votes",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    },
    {
      "module_name": "voting",
      "datatype_name": "Project",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    },
    {
      "module_name": "voting",
      "datatype_name": "Approval",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    },
    {
      "module_name": "voting",
      "datatype_name": "AdminCap",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    },
    {
      "module_name": "voting",
      "datatype_name": "VOTING",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    },
    {
      "module_name": "voting",
      "datatype_name": "TransferApprovalCap",
      "package": "0x3e7b6b19e8adee49afdb0a4b1b2e3372ae18a79048346e1a3d13986a21a12faa"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}