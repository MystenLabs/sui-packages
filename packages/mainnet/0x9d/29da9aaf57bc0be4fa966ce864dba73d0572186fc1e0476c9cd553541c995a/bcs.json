{
  "dataType": "package",
  "id": "0x9d29da9aaf57bc0be4fa966ce864dba73d0572186fc1e0476c9cd553541c995a",
  "version": 1,
  "moduleMap": {
    "robo": ""
  },
  "typeOriginTable": [
    {
      "module_name": "robo",
      "datatype_name": "ROBO",
      "package": "0x9d29da9aaf57bc0be4fa966ce864dba73d0572186fc1e0476c9cd553541c995a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  }
}