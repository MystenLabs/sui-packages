{
  "dataType": "package",
  "id": "0x43aab8ebfa87e46542fe97be9f0100b671698d71af968e5b77a1d1256a0f4183",
  "version": 1,
  "moduleMap": {
    "ducking_coin": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ducking_coin",
      "datatype_name": "DUCKING_COIN",
      "package": "0x43aab8ebfa87e46542fe97be9f0100b671698d71af968e5b77a1d1256a0f4183"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "ducking_coin": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x43aab8ebfa87e46542fe97be9f0100b671698d71af968e5b77a1d1256a0f4183::ducking_coin::DUCKING_COIN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}