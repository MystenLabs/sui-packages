{
  "dataType": "package",
  "id": "0x437161079ec8bca5a40eeeb86b234e622e43c11694783c8a2b26bd77c7d8da48",
  "version": 1,
  "moduleMap": {
    "sparky": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sparky",
      "datatype_name": "SPARKY",
      "package": "0x437161079ec8bca5a40eeeb86b234e622e43c11694783c8a2b26bd77c7d8da48"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "sparky": {
      "addToDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x437161079ec8bca5a40eeeb86b234e622e43c11694783c8a2b26bd77c7d8da48::sparky::SPARKY>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x437161079ec8bca5a40eeeb86b234e622e43c11694783c8a2b26bd77c7d8da48::sparky::SPARKY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "removeFromDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x437161079ec8bca5a40eeeb86b234e622e43c11694783c8a2b26bd77c7d8da48::sparky::SPARKY>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}