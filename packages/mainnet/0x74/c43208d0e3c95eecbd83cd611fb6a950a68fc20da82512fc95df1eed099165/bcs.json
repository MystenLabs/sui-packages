{
  "dataType": "package",
  "id": "0x74c43208d0e3c95eecbd83cd611fb6a950a68fc20da82512fc95df1eed099165",
  "version": 1,
  "moduleMap": {
    "x": ""
  },
  "typeOriginTable": [
    {
      "module_name": "x",
      "datatype_name": "X",
      "package": "0x74c43208d0e3c95eecbd83cd611fb6a950a68fc20da82512fc95df1eed099165"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "x": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x74c43208d0e3c95eecbd83cd611fb6a950a68fc20da82512fc95df1eed099165::x::X",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}