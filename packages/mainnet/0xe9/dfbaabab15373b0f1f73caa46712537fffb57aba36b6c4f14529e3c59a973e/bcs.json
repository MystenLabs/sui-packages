{
  "dataType": "package",
  "id": "0xe9dfbaabab15373b0f1f73caa46712537fffb57aba36b6c4f14529e3c59a973e",
  "version": 1,
  "moduleMap": {
    "a": ""
  },
  "typeOriginTable": [
    {
      "module_name": "a",
      "datatype_name": "A",
      "package": "0xe9dfbaabab15373b0f1f73caa46712537fffb57aba36b6c4f14529e3c59a973e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "a": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe9dfbaabab15373b0f1f73caa46712537fffb57aba36b6c4f14529e3c59a973e::a::A",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}