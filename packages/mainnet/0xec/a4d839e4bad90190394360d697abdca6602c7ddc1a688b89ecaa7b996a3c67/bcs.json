{
  "dataType": "package",
  "id": "0xeca4d839e4bad90190394360d697abdca6602c7ddc1a688b89ecaa7b996a3c67",
  "version": 1,
  "moduleMap": {
    "lgpt": ""
  },
  "typeOriginTable": [
    {
      "module_name": "lgpt",
      "datatype_name": "LGPT",
      "package": "0xeca4d839e4bad90190394360d697abdca6602c7ddc1a688b89ecaa7b996a3c67"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "lgpt": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xeca4d839e4bad90190394360d697abdca6602c7ddc1a688b89ecaa7b996a3c67::lgpt::LGPT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}