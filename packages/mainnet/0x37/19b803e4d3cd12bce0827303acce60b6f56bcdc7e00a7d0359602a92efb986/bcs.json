{
  "dataType": "package",
  "id": "0x3719b803e4d3cd12bce0827303acce60b6f56bcdc7e00a7d0359602a92efb986",
  "version": 1,
  "moduleMap": {
    "suilama": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suilama",
      "datatype_name": "SUILAMA",
      "package": "0x3719b803e4d3cd12bce0827303acce60b6f56bcdc7e00a7d0359602a92efb986"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}