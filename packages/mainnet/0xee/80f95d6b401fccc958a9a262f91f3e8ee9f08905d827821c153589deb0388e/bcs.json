{
  "dataType": "package",
  "id": "0xee80f95d6b401fccc958a9a262f91f3e8ee9f08905d827821c153589deb0388e",
  "version": 1,
  "moduleMap": {
    "suiween": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suiween",
      "datatype_name": "SUIWEEN",
      "package": "0xee80f95d6b401fccc958a9a262f91f3e8ee9f08905d827821c153589deb0388e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "suiween": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xee80f95d6b401fccc958a9a262f91f3e8ee9f08905d827821c153589deb0388e::suiween::SUIWEEN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}