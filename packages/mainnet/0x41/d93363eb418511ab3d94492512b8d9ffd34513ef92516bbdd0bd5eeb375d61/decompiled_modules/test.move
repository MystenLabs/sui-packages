module 0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::test {
    public fun find_prices<T0, T1, T2, T3, T4, T5, T6, T7, T8>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, 0x2::sui::SUI>, arg1: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg2: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg3: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, T3>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2::sui::SUI>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg8: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2::sui::SUI>, arg9: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg10: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>) : vector<0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::paths::PriceNode> {
        let v0 = 0x1::vector::empty<0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::paths::PriceNode>();
        let v1 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v2 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T3, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v1, 0), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v2, 0), 1), 0, arg0);
        let v3 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v4 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v3, 1), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v4, 1), 1), 1, arg1);
        let v5 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v6 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v5, 2), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v6, 2), 1), 2, arg2);
        let v7 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v8 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v7, 3), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v8, 3), 1), 3, arg3);
        let v9 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v10 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T5, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v9, 4), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v10, 4), 1), 4, arg4);
        let v11 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v12 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T2, T3>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v11, 5), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v12, 5), 1), 5, arg5);
        let v13 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v14 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T7, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v13, 6), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v14, 6), 1), 6, arg6);
        let v15 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v16 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v15, 7), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v16, 7), 1), 7, arg7);
        let v17 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v18 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T8, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v17, 8), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v18, 8), 1), 8, arg8);
        let v19 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v20 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T7, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v19, 9), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v20, 9), 1), 9, arg9);
        let v21 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v22 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::cetus::add_prices<T7, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v21, 11), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v22, 11), 1), 11, arg10);
        0x41d93363eb418511ab3d94492512b8d9ffd34513ef92516bbdd0bd5eeb375d61::paths::emit_prices(v0);
        v0
    }

    // decompiled from Move bytecode v6
}

