{
  "dataType": "package",
  "id": "0x414834d9e51929beca3a23fd99752c90eb20f70614ab2580ffa1bdaa882f067a",
  "version": 1,
  "moduleMap": {
    "flow": ""
  },
  "typeOriginTable": [
    {
      "module_name": "flow",
      "datatype_name": "FLOW",
      "package": "0x414834d9e51929beca3a23fd99752c90eb20f70614ab2580ffa1bdaa882f067a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "flow": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x414834d9e51929beca3a23fd99752c90eb20f70614ab2580ffa1bdaa882f067a::flow::FLOW",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}