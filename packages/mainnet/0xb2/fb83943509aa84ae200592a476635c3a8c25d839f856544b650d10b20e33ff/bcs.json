{
  "dataType": "package",
  "id": "0xb2fb83943509aa84ae200592a476635c3a8c25d839f856544b650d10b20e33ff",
  "version": 1,
  "moduleMap": {
    "jfj": ""
  },
  "typeOriginTable": [
    {
      "module_name": "jfj",
      "datatype_name": "JFJ",
      "package": "0xb2fb83943509aa84ae200592a476635c3a8c25d839f856544b650d10b20e33ff"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 4
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 18
    }
  }
}