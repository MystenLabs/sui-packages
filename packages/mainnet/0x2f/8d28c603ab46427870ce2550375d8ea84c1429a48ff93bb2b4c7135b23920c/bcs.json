{
  "dataType": "package",
  "id": "0x2f8d28c603ab46427870ce2550375d8ea84c1429a48ff93bb2b4c7135b23920c",
  "version": 1,
  "moduleMap": {
    "xbtc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "xbtc",
      "datatype_name": "XBTC",
      "package": "0x2f8d28c603ab46427870ce2550375d8ea84c1429a48ff93bb2b4c7135b23920c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 16
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 34
    }
  },
  "functionMap": {
    "xbtc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x2f8d28c603ab46427870ce2550375d8ea84c1429a48ff93bb2b4c7135b23920c::xbtc::XBTC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}