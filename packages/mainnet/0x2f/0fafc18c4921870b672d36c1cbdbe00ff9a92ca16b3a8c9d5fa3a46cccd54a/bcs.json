{
  "dataType": "package",
  "id": "0x2f0fafc18c4921870b672d36c1cbdbe00ff9a92ca16b3a8c9d5fa3a46cccd54a",
  "version": 1,
  "moduleMap": {
    "ripbiden": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ripbiden",
      "datatype_name": "RIPBIDEN",
      "package": "0x2f0fafc18c4921870b672d36c1cbdbe00ff9a92ca16b3a8c9d5fa3a46cccd54a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}