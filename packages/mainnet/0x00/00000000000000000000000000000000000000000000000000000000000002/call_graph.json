{
  "package_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
  "module_call_graphs": [
    {
      "module_name": "address",
      "call_graph": {
        "from_ascii_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::from_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::hex_char_value"
        ],
        "from_bytes": [],
        "from_u256": [],
        "hex_char_value": [],
        "length": [],
        "max": [],
        "to_ascii_string": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::to_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::hex::encode"
        ],
        "to_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes"
        ],
        "to_string": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::from_ascii",
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::to_ascii_string"
        ],
        "to_u256": []
      }
    },
    {
      "module_name": "authenticator_state",
      "call_graph": {
        "active_jwk_equal": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_equal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_id_equal"
        ],
        "check_sorted": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_lt"
        ],
        "create": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::authenticator_state",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "deduplicate": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_id_equal"
        ],
        "expire_jwks": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::max",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::load_inner_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "get_active_jwks": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::load_inner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "jwk_equal": [],
        "jwk_id_equal": [],
        "jwk_lt": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::string_bytes_lt"
        ],
        "load_inner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "load_inner_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "string_bytes_lt": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::as_bytes"
        ],
        "update_authenticator_state": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::max",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::active_jwk_equal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::check_sorted",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::deduplicate",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_id_equal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::jwk_lt",
          "0x0000000000000000000000000000000000000000000000000000000000000002::authenticator_state::load_inner_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ]
      }
    },
    {
      "module_name": "bag",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add"
        ],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "contains_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "is_empty": [],
        "length": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove"
        ]
      }
    },
    {
      "module_name": "balance",
      "call_graph": {
        "create_staking_rewards": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "create_supply": [],
        "decrease_supply": [],
        "destroy_storage_rebates": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "destroy_supply": [],
        "destroy_zero": [],
        "increase_supply": [],
        "join": [],
        "split": [],
        "supply_value": [],
        "value": [],
        "withdraw_all": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split"
        ],
        "zero": []
      }
    },
    {
      "module_name": "bcs",
      "call_graph": {
        "into_remainder_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse"
        ],
        "peel_address": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::from_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::length"
        ],
        "peel_bool": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u8"
        ],
        "peel_enum_tag": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_option_address": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool"
        ],
        "peel_option_bool": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool"
        ],
        "peel_option_u128": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u128"
        ],
        "peel_option_u16": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u16"
        ],
        "peel_option_u256": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u256"
        ],
        "peel_option_u32": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u32"
        ],
        "peel_option_u64": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u64"
        ],
        "peel_option_u8": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u8"
        ],
        "peel_u128": [],
        "peel_u16": [],
        "peel_u256": [],
        "peel_u32": [],
        "peel_u64": [],
        "peel_u8": [],
        "peel_vec_address": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_bool": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_bool",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_length": [],
        "peel_vec_u128": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u128",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_u16": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u16",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_u256": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u256",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_u32": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u32",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_u64": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u64",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_u8": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u8",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length"
        ],
        "peel_vec_vec_u8": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_length",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_vec_u8"
        ],
        "to_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes"
        ]
      }
    },
    {
      "module_name": "bls12381",
      "call_graph": {
        "bls12381_min_pk_verify": [],
        "bls12381_min_sig_verify": [],
        "g1_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::add"
        ],
        "g1_div": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::div"
        ],
        "g1_from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g1_generator": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g1_identity": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g1_mul": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::mul"
        ],
        "g1_multi_scalar_multiplication": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::multi_scalar_multiplication"
        ],
        "g1_neg": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::g1_identity",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::g1_sub"
        ],
        "g1_sub": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::sub"
        ],
        "g1_to_uncompressed_g1": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::convert"
        ],
        "g2_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::add"
        ],
        "g2_div": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::div"
        ],
        "g2_from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g2_generator": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g2_identity": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "g2_mul": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::mul"
        ],
        "g2_multi_scalar_multiplication": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::multi_scalar_multiplication"
        ],
        "g2_neg": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::g2_identity",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::g2_sub"
        ],
        "g2_sub": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::sub"
        ],
        "gt_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::add"
        ],
        "gt_div": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::div"
        ],
        "gt_generator": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "gt_identity": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "gt_mul": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::mul"
        ],
        "gt_neg": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::gt_identity",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::gt_sub"
        ],
        "gt_sub": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::sub"
        ],
        "hash_to_g1": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::hash_to"
        ],
        "hash_to_g2": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::hash_to"
        ],
        "pairing": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::pairing"
        ],
        "scalar_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::add"
        ],
        "scalar_div": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::div"
        ],
        "scalar_from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "scalar_from_u64": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::set_as_prefix"
        ],
        "scalar_inv": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::scalar_div",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::scalar_one"
        ],
        "scalar_mul": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::mul"
        ],
        "scalar_neg": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::scalar_sub",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::scalar_zero"
        ],
        "scalar_one": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "scalar_sub": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::sub"
        ],
        "scalar_zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::from_bytes"
        ],
        "uncompressed_g1_sum": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::sum"
        ],
        "uncompressed_g1_to_g1": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::convert"
        ]
      }
    },
    {
      "module_name": "borrow",
      "call_graph": {
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::extract",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "destroy": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::fresh_object_address"
        ],
        "put_back": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ]
      }
    },
    {
      "module_name": "clock",
      "call_graph": {
        "consensus_commit_prologue": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "create": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::clock",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "timestamp_ms": []
      }
    },
    {
      "module_name": "coin",
      "call_graph": {
        "balance": [],
        "balance_mut": [],
        "burn": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::decrease_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "create_currency": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::string",
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::utf8",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::create_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::types::is_one_time_witness"
        ],
        "create_regulated_currency": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::create_currency",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::freeze_object"
        ],
        "create_regulated_currency_v2": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::create_currency",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::freeze_object"
        ],
        "deny_list_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_add"
        ],
        "deny_list_contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::is_primitive",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_contains"
        ],
        "deny_list_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_remove"
        ],
        "deny_list_v2_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_add"
        ],
        "deny_list_v2_contains_current_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_contains_current_epoch"
        ],
        "deny_list_v2_contains_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_contains_next_epoch"
        ],
        "deny_list_v2_disable_global_pause": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_disable_global_pause"
        ],
        "deny_list_v2_enable_global_pause": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_enable_global_pause"
        ],
        "deny_list_v2_is_global_pause_enabled_current_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_is_global_pause_enabled_current_epoch"
        ],
        "deny_list_v2_is_global_pause_enabled_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_is_global_pause_enabled_next_epoch"
        ],
        "deny_list_v2_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v2_remove"
        ],
        "destroy_zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::destroy_zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "divide_into_n": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value"
        ],
        "from_balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "get_decimals": [],
        "get_description": [],
        "get_icon_url": [],
        "get_name": [],
        "get_symbol": [],
        "into_balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "join": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "migrate_regulated_currency_to_v2": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::into_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::into_string",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::migrate_v1_to_v2",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "mint": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::increase_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "mint_and_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::mint",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer"
        ],
        "mint_balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::increase_supply"
        ],
        "put": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::into_balance"
        ],
        "split": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::take"
        ],
        "supply": [],
        "supply_immut": [],
        "supply_mut": [],
        "take": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "total_supply": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::supply_value"
        ],
        "treasury_into_supply": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "update_description": [],
        "update_icon_url": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::url::new_unsafe"
        ],
        "update_name": [],
        "update_symbol": [],
        "value": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ]
      }
    },
    {
      "module_name": "config",
      "call_graph": {
        "add_for_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::extract",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch"
        ],
        "borrow_for_next_epoch_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch"
        ],
        "exists_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "exists_with_type_for_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "read_setting": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::read_setting_impl",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_to_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch"
        ],
        "read_setting_for_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "read_setting_impl": [],
        "remove_for_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::extract",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch"
        ],
        "share": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object"
        ],
        "transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer"
        ]
      }
    },
    {
      "module_name": "deny_list",
      "call_graph": {
        "add_per_type_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::internal_add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "borrow_per_type_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::internal_borrow"
        ],
        "borrow_per_type_config_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::internal_borrow_mut"
        ],
        "create": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_list",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::sui_deny_list_object_id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "migrate_v1_to_v2": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::add_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::borrow_for_next_epoch_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::exists_with_type_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::add_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ],
        "per_type_exists": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_"
        ],
        "per_type_list": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::new"
        ],
        "v1_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_per_type_list_add"
        ],
        "v1_contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_per_type_list_contains"
        ],
        "v1_per_type_list_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "v1_per_type_list_contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains"
        ],
        "v1_per_type_list_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::remove"
        ],
        "v1_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::v1_per_type_list_remove"
        ],
        "v2_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::add_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::borrow_for_next_epoch_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::exists_with_type_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::add_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ],
        "v2_contains_current_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::read_setting",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "v2_contains_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::read_setting_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ],
        "v2_disable_global_pause": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::remove_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::add_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ],
        "v2_enable_global_pause": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::add_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::borrow_for_next_epoch_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::exists_with_type_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::add_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ],
        "v2_is_global_pause_enabled_current_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::read_setting",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "v2_is_global_pause_enabled_next_epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::read_setting_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ],
        "v2_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::config::remove_for_next_epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::add_per_type_config",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::borrow_per_type_config_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::per_type_exists"
        ]
      }
    },
    {
      "module_name": "display",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::add_internal"
        ],
        "add_internal": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::insert"
        ],
        "add_multiple": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::add_internal"
        ],
        "create_and_keep": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "create_internal": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_inner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::empty"
        ],
        "edit": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::add_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::remove"
        ],
        "fields": [],
        "is_authorized": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::from_package"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::create_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::is_authorized"
        ],
        "new_with_fields": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::add_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::display::new"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::remove"
        ],
        "update_version": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_inner"
        ],
        "version": []
      }
    },
    {
      "module_name": "dynamic_field",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::has_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new_uid_from_hash",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "add_child_object": [],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "borrow_child_object": [],
        "borrow_child_object_mut": [],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "exists_": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::has_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "exists_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::has_child_object_with_ty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "field_info": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_to_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "field_info_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_to_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "has_child_object": [],
        "has_child_object_with_ty": [],
        "hash_type_and_key": [],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::hash_type_and_key",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "remove_child_object": [],
        "remove_if_exists": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove"
        ]
      }
    },
    {
      "module_name": "dynamic_object_field",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info_mut"
        ],
        "exists_": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "exists_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::has_child_object_with_ty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "id": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_from_address"
        ],
        "internal_add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "internal_borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info"
        ],
        "internal_borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_child_object_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info_mut"
        ],
        "internal_exists_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::has_child_object_with_ty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "internal_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::field_info",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_child_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address"
        ]
      }
    },
    {
      "module_name": "ecdsa_k1",
      "call_graph": {
        "decompress_pubkey": [],
        "secp256k1_ecrecover": [],
        "secp256k1_verify": []
      }
    },
    {
      "module_name": "ecdsa_r1",
      "call_graph": {
        "secp256r1_ecrecover": [],
        "secp256r1_verify": []
      }
    },
    {
      "module_name": "ecvrf",
      "call_graph": {
        "ecvrf_verify": []
      }
    },
    {
      "module_name": "ed25519",
      "call_graph": {
        "ed25519_verify": []
      }
    },
    {
      "module_name": "event",
      "call_graph": {
        "emit": []
      }
    },
    {
      "module_name": "groth16",
      "call_graph": {
        "bls12381": [],
        "bn254": [],
        "prepare_verifying_key": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::groth16::prepare_verifying_key_internal"
        ],
        "prepare_verifying_key_internal": [],
        "proof_points_from_bytes": [],
        "public_proof_inputs_from_bytes": [],
        "pvk_from_bytes": [],
        "pvk_to_bytes": [],
        "verify_groth16_proof": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::groth16::verify_groth16_proof_internal"
        ],
        "verify_groth16_proof_internal": []
      }
    },
    {
      "module_name": "group_ops",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_add"
        ],
        "bytes": [],
        "convert": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_convert"
        ],
        "div": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_div"
        ],
        "equal": [],
        "from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_validate"
        ],
        "hash_to": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_hash_to"
        ],
        "internal_add": [],
        "internal_convert": [],
        "internal_div": [],
        "internal_hash_to": [],
        "internal_mul": [],
        "internal_multi_scalar_mul": [],
        "internal_pairing": [],
        "internal_sub": [],
        "internal_sum": [],
        "internal_validate": [],
        "mul": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_mul"
        ],
        "multi_scalar_multiplication": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_multi_scalar_mul"
        ],
        "pairing": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_pairing"
        ],
        "set_as_prefix": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::to_bytes"
        ],
        "sub": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_sub"
        ],
        "sum": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse",
          "0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::internal_sum"
        ]
      }
    },
    {
      "module_name": "hash",
      "call_graph": {
        "blake2b256": [],
        "keccak256": []
      }
    },
    {
      "module_name": "hex",
      "call_graph": {
        "decode": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::hex::decode_byte"
        ],
        "decode_byte": [],
        "encode": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append"
        ]
      }
    },
    {
      "module_name": "hmac",
      "call_graph": {
        "hmac_sha3_256": []
      }
    },
    {
      "module_name": "kiosk",
      "call_graph": {
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed"
        ],
        "borrow_val": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "close_and_withdraw": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_inner"
        ],
        "default": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "delist": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed_exclusively",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "has_access": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "has_item": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_"
        ],
        "has_item_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_with_type"
        ],
        "is_listed": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed_exclusively"
        ],
        "is_listed_exclusively": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "is_locked": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "item_count": [],
        "kiosk_owner_cap_for": [],
        "list": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed_exclusively",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "list_with_purchase_cap": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "lock": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::lock_internal"
        ],
        "lock_internal": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::place_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "owner": [],
        "place": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::place_internal"
        ],
        "place_and_list": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::list",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::place",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "place_internal": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "profits_amount": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "profits_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access"
        ],
        "purchase": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::put",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_if_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer_policy::new_request"
        ],
        "purchase_cap_item": [],
        "purchase_cap_kiosk": [],
        "purchase_cap_min_price": [],
        "purchase_with_cap": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::put",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_if_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer_policy::new_request"
        ],
        "return_purchase_cap": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "return_val": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "set_allow_extensions": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access"
        ],
        "set_owner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "set_owner_custom": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access"
        ],
        "take": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove_if_exists",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_item",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_listed_exclusively",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::is_locked"
        ],
        "uid": [],
        "uid_mut": [],
        "uid_mut_as_owner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access"
        ],
        "uid_mut_internal": [],
        "withdraw": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::take",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access"
        ]
      }
    },
    {
      "module_name": "kiosk_extension",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::uid_mut_as_owner"
        ],
        "can_lock": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_enabled"
        ],
        "can_place": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_enabled"
        ],
        "disable": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "enable": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "extension": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::uid"
        ],
        "extension_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::uid_mut_internal"
        ],
        "is_enabled": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension"
        ],
        "is_installed": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::uid"
        ],
        "lock": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::lock_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::can_lock",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "place": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::place_internal",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::can_lock",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::can_place",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bag::destroy_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::has_access",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk::uid_mut_as_owner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "storage": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ],
        "storage_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::extension_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::kiosk_extension::is_installed"
        ]
      }
    },
    {
      "module_name": "linked_table",
      "call_graph": {
        "back": [],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "drop": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "front": [],
        "is_empty": [],
        "length": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "next": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "pop_back": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::linked_table::remove"
        ],
        "pop_front": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::linked_table::remove"
        ],
        "prev": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "push_back": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::swap_or_fill",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "push_front": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::fill",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::swap_or_fill",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove"
        ]
      }
    },
    {
      "module_name": "math",
      "call_graph": {
        "diff": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::diff"
        ],
        "divide_and_round_up": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::divide_and_round_up"
        ],
        "max": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::max"
        ],
        "min": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::min"
        ],
        "pow": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::pow"
        ],
        "sqrt": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u64::sqrt"
        ],
        "sqrt_u128": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::u128::sqrt"
        ]
      }
    },
    {
      "module_name": "nitro_attestation",
      "call_graph": {
        "digest": [],
        "index": [],
        "load_nitro_attestation": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::nitro_attestation::load_nitro_attestation_internal"
        ],
        "load_nitro_attestation_internal": [],
        "module_id": [],
        "nonce": [],
        "pcrs": [],
        "public_key": [],
        "timestamp": [],
        "user_data": [],
        "value": []
      }
    },
    {
      "module_name": "object",
      "call_graph": {
        "authenticator_state": [],
        "borrow_id": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::borrow_uid"
        ],
        "borrow_uid": [],
        "bridge": [],
        "clock": [],
        "delete": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete_impl"
        ],
        "delete_impl": [],
        "id": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::borrow_uid"
        ],
        "id_address": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::borrow_uid"
        ],
        "id_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::borrow_uid"
        ],
        "id_from_address": [],
        "id_from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::from_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_from_address"
        ],
        "id_to_address": [],
        "id_to_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::fresh_object_address"
        ],
        "new_uid_from_hash": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::record_new_uid"
        ],
        "randomness_state": [],
        "record_new_uid": [],
        "sui_deny_list_object_id": [],
        "sui_system_state": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "uid_as_inner": [],
        "uid_to_address": [],
        "uid_to_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes"
        ],
        "uid_to_inner": []
      }
    },
    {
      "module_name": "object_bag",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::add"
        ],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow_mut"
        ],
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_"
        ],
        "contains_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_with_type"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "is_empty": [],
        "length": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove"
        ],
        "value_id": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::id"
        ]
      }
    },
    {
      "module_name": "object_table",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::add"
        ],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::borrow_mut"
        ],
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::exists_"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "is_empty": [],
        "length": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::remove"
        ],
        "value_id": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field::id"
        ]
      }
    },
    {
      "module_name": "package",
      "call_graph": {
        "additive_policy": [],
        "authorize_upgrade": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_from_address"
        ],
        "burn_publisher": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "claim": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_address",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_module",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::types::is_one_time_witness"
        ],
        "claim_and_keep": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::claim",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "commit_upgrade": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id_to_address"
        ],
        "compatible_policy": [],
        "dep_only_policy": [],
        "from_module": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_address",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_module",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids"
        ],
        "from_package": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_address",
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get_with_original_ids"
        ],
        "make_immutable": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "only_additive_upgrades": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::restrict"
        ],
        "only_dep_upgrades": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::restrict"
        ],
        "published_module": [],
        "published_package": [],
        "receipt_cap": [],
        "receipt_package": [],
        "restrict": [],
        "ticket_digest": [],
        "ticket_package": [],
        "ticket_policy": [],
        "upgrade_package": [],
        "upgrade_policy": [],
        "version": []
      }
    },
    {
      "module_name": "party",
      "call_graph": {
        "empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::empty"
        ],
        "into_native": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::into_keys_values"
        ],
        "is_single_owner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_entry_by_idx",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "set_permissions": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::insert",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::remove"
        ],
        "single_owner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::set_permissions"
        ]
      }
    },
    {
      "module_name": "pay",
      "call_graph": {
        "divide_and_keep": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::divide_into_n",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "join": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::join"
        ],
        "join_vec": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::join"
        ],
        "join_vec_and_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::pay::join_vec",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer"
        ],
        "keep": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "split": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::pay::keep"
        ],
        "split_and_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer"
        ],
        "split_vec": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::pay::split"
        ]
      }
    },
    {
      "module_name": "poseidon",
      "call_graph": {
        "poseidon_bn254": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::peel_u256",
          "0x0000000000000000000000000000000000000000000000000000000000000002::bcs::to_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::poseidon::poseidon_bn254_internal"
        ],
        "poseidon_bn254_internal": []
      }
    },
    {
      "module_name": "priority_queue",
      "call_graph": {
        "create_entries": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::remove"
        ],
        "insert": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::priority_queue::restore_heap_recursive"
        ],
        "max_heapify_recursive": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::priority_queue::max_heapify_recursive"
        ],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::priority_queue::max_heapify_recursive"
        ],
        "new_entry": [],
        "pop_max": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::swap_remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::priority_queue::max_heapify_recursive"
        ],
        "priorities": [],
        "restore_heap_recursive": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::priority_queue::restore_heap_recursive"
        ]
      }
    },
    {
      "module_name": "prover",
      "call_graph": {}
    },
    {
      "module_name": "random",
      "call_graph": {
        "create": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::randomness_state",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x0000000000000000000000000000000000000000000000000000000000000002::versioned::create"
        ],
        "derive_next_block": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::bcs::to_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::hmac::hmac_sha3_256"
        ],
        "generate_bool": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u128": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u128_in_range": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u16": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u16_in_range": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u256": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u32": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u32_in_range": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u64": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u64_in_range": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u8": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "generate_u8_in_range": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::append",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::derive_next_block"
        ],
        "load_inner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::versioned::load_value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::versioned::version"
        ],
        "load_inner_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::versioned::load_value_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::versioned::version"
        ],
        "new_generator": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::address::to_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::hmac::hmac_sha3_256",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::load_inner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::fresh_object_address"
        ],
        "shuffle": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::generate_u16_in_range"
        ],
        "update_randomness_state": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::is_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::random::load_inner_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ]
      }
    },
    {
      "module_name": "sui",
      "call_graph": {
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::destroy_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::increase_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::create_currency",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::treasury_into_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_freeze_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::epoch",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer"
        ]
      }
    },
    {
      "module_name": "table",
      "call_graph": {
        "add": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add"
        ],
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "drop": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "is_empty": [],
        "length": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove"
        ]
      }
    },
    {
      "module_name": "table_vec",
      "call_graph": {
        "borrow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "borrow_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::destroy_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "drop": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::drop"
        ],
        "empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::new"
        ],
        "is_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "length": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::length"
        ],
        "pop_back": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "push_back": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "singleton": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::push_back"
        ],
        "swap": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length"
        ],
        "swap_remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::length",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::pop_back",
          "0x0000000000000000000000000000000000000000000000000000000000000002::table_vec::swap"
        ]
      }
    },
    {
      "module_name": "token",
      "call_graph": {
        "action": [],
        "add_approval": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "add_rule_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "add_rule_for_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::allow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "allow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::insert",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty"
        ],
        "amount": [],
        "approvals": [],
        "burn": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::decrease_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::supply_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "confirm_request": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ],
        "confirm_request_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::extract",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::confirm_request",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains"
        ],
        "confirm_with_policy_cap": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_none"
        ],
        "confirm_with_treasury_cap": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::decrease_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::supply_mut"
        ],
        "destroy_zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::destroy_zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "disallow": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::remove"
        ],
        "flush": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::decrease_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::supply_mut"
        ],
        "from_coin": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::into_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::from_coin_action",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::new_request"
        ],
        "from_coin_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::utf8"
        ],
        "has_rule_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "has_rule_config_with_type": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "is_allowed": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains"
        ],
        "join": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "keep": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "key": [],
        "mint": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::increase_supply",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::supply_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "new_policy": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::empty"
        ],
        "new_request": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty"
        ],
        "recipient": [],
        "remove_rule_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::has_rule_config_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "remove_rule_for_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::remove"
        ],
        "rule_config": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::has_rule_config_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "rule_config_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::has_rule_config_with_type",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::key"
        ],
        "rules": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get"
        ],
        "sender": [],
        "share_policy": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object"
        ],
        "spend": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::new_request",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::spend_action"
        ],
        "spend_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::utf8"
        ],
        "spent": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "spent_balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "split": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "to_coin": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::new_request",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::to_coin_action"
        ],
        "to_coin_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::utf8"
        ],
        "transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::new_request",
          "0x0000000000000000000000000000000000000000000000000000000000000002::token::transfer_action",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer"
        ],
        "transfer_action": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::utf8"
        ],
        "value": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ]
      }
    },
    {
      "module_name": "transfer",
      "call_graph": {
        "freeze_object": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::freeze_object_impl"
        ],
        "freeze_object_impl": [],
        "party_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::into_native",
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::is_single_owner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::party_transfer_impl"
        ],
        "party_transfer_impl": [],
        "public_freeze_object": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::freeze_object_impl"
        ],
        "public_party_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::into_native",
          "0x0000000000000000000000000000000000000000000000000000000000000002::party::is_single_owner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::party_transfer_impl"
        ],
        "public_receive": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::receive_impl"
        ],
        "public_share_object": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object_impl"
        ],
        "public_transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer_impl"
        ],
        "receive": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_address",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::receive_impl"
        ],
        "receive_impl": [],
        "receiving_object_id": [],
        "share_object": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object_impl"
        ],
        "share_object_impl": [],
        "transfer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer_impl"
        ],
        "transfer_impl": []
      }
    },
    {
      "module_name": "transfer_policy",
      "call_graph": {
        "add_receipt": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "add_rule": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer_policy::has_rule",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "add_to_balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::put",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer_policy::has_rule"
        ],
        "confirm_request": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::size"
        ],
        "default": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer_policy::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "destroy_and_withdraw": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "from": [],
        "get_rule": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "has_rule": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "item": [],
        "new": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_inner",
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::from_package",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty"
        ],
        "new_request": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty"
        ],
        "paid": [],
        "remove_rule": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::type_name::get",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::remove"
        ],
        "rules": [],
        "uid": [],
        "uid_mut_as_owner": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "withdraw": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::take",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ]
      }
    },
    {
      "module_name": "tx_context",
      "call_graph": {
        "derive_id": [],
        "digest": [],
        "epoch": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::native_epoch"
        ],
        "epoch_timestamp_ms": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::native_epoch_timestamp_ms"
        ],
        "fresh_id": [],
        "fresh_object_address": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::fresh_id"
        ],
        "ids_created": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::native_ids_created"
        ],
        "native_epoch": [],
        "native_epoch_timestamp_ms": [],
        "native_gas_budget": [],
        "native_gas_price": [],
        "native_ids_created": [],
        "native_sender": [],
        "native_sponsor": [],
        "option_sponsor": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::native_sponsor"
        ],
        "sender": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::native_sender"
        ],
        "sponsor": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::option_sponsor"
        ]
      }
    },
    {
      "module_name": "types",
      "call_graph": {
        "is_one_time_witness": []
      }
    },
    {
      "module_name": "url",
      "call_graph": {
        "inner_url": [],
        "new_unsafe": [],
        "new_unsafe_from_bytes": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::string"
        ],
        "update": []
      }
    },
    {
      "module_name": "vdf",
      "call_graph": {
        "hash_to_input": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vdf::hash_to_input_internal"
        ],
        "hash_to_input_internal": [],
        "vdf_verify": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vdf::vdf_verify_internal"
        ],
        "vdf_verify_internal": []
      }
    },
    {
      "module_name": "vec_map",
      "call_graph": {
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_idx_opt"
        ],
        "destroy_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::is_empty"
        ],
        "empty": [],
        "from_keys_values": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::insert"
        ],
        "get": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_idx"
        ],
        "get_entry_by_idx": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "get_entry_by_idx_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "get_idx": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_idx_opt"
        ],
        "get_idx_opt": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "get_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_idx"
        ],
        "insert": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains"
        ],
        "into_keys_values": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse"
        ],
        "is_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "keys": [],
        "pop": [],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get_idx"
        ],
        "remove_entry_by_idx": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::size"
        ],
        "size": [],
        "try_get": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::contains",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::get"
        ]
      }
    },
    {
      "module_name": "vec_set",
      "call_graph": {
        "contains": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::get_idx_opt"
        ],
        "empty": [],
        "from_keys": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::reverse",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "get_idx": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::destroy_some",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::is_some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::get_idx_opt"
        ],
        "get_idx_opt": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::none",
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::some",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::size"
        ],
        "insert": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains"
        ],
        "into_keys": [],
        "is_empty": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::size"
        ],
        "keys": [],
        "remove": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::get_idx"
        ],
        "singleton": [],
        "size": []
      }
    },
    {
      "module_name": "versioned",
      "call_graph": {
        "create": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new"
        ],
        "destroy": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "load_value": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "load_value_mut": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut"
        ],
        "remove_value_for_upgrade": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "upgrade": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::id"
        ],
        "version": []
      }
    },
    {
      "module_name": "zklogin_verified_id",
      "call_graph": {
        "audience": [],
        "check_zklogin_id": [],
        "check_zklogin_id_internal": [],
        "delete": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "issuer": [],
        "key_claim_name": [],
        "key_claim_value": [],
        "owner": [],
        "verify_zklogin_id": []
      }
    },
    {
      "module_name": "zklogin_verified_issuer",
      "call_graph": {
        "check_zklogin_issuer": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::string::as_bytes",
          "0x0000000000000000000000000000000000000000000000000000000000000002::zklogin_verified_issuer::check_zklogin_issuer_internal"
        ],
        "check_zklogin_issuer_internal": [],
        "delete": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::delete"
        ],
        "issuer": [],
        "owner": [],
        "verify_zklogin_issuer": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x0000000000000000000000000000000000000000000000000000000000000002::zklogin_verified_issuer::check_zklogin_issuer"
        ]
      }
    }
  ]
}