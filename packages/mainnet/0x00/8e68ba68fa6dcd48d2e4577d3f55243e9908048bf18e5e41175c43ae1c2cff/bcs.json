{
  "dataType": "package",
  "id": "0x008e68ba68fa6dcd48d2e4577d3f55243e9908048bf18e5e41175c43ae1c2cff",
  "version": 1,
  "moduleMap": {
    "dich": ""
  },
  "typeOriginTable": [
    {
      "module_name": "dich",
      "datatype_name": "DICH",
      "package": "0x008e68ba68fa6dcd48d2e4577d3f55243e9908048bf18e5e41175c43ae1c2cff"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  }
}