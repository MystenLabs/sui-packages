{
  "dataType": "package",
  "id": "0x000000000000000000000000000000000000000000000000000000000000000b",
  "version": 5,
  "moduleMap": {
    "bridge": "",
    "chain_ids": "oRzrCwYAAAALAQAEAgQEAwhCBEoCBUwkB3DaAQjKAkAGigMcCqYDBwytA6cCDdQFBAACAREAAAcAAA4AAQAADwABAAANAAEAAAYAAQAABwABAAAFAAEAAAsCAwAACgIDAAABAQAAABAABAAACQUGAAAIBQcAAQMJBgEADAcAAQIBBggAAQYCAQoIAAICAgEBAQgAAgoIAAgAAgYKCQAGCQALQnJpZGdlUm91dGUVYXNzZXJ0X3ZhbGlkX2NoYWluX2lkCWNoYWluX2lkcwhjb250YWlucwtkZXN0aW5hdGlvbgpldGhfY3VzdG9tC2V0aF9tYWlubmV0C2V0aF9zZXBvbGlhCWdldF9yb3V0ZQ5pc192YWxpZF9yb3V0ZRFyb3V0ZV9kZXN0aW5hdGlvbgxyb3V0ZV9zb3VyY2UGc291cmNlCnN1aV9jdXN0b20Lc3VpX21haW5uZXQLc3VpX3Rlc3RuZXQMdmFsaWRfcm91dGVzBnZlY3RvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAQACAQECAQICAQoCAQsCAQwDCAAAAAAAAAAAAAICDAIEAgABAAAAAgcAAgEBAAAAAgcBAgIBAAAAAgcCAgMBAAAAAgcDAgQBAAAAAgcEAgUBAAAAAgcFAgYBAAAAAwsAEAACBwEAAAADCwAQAQIIAQAABi0KAAcAIQQHCAwBBScKAAcBIQQOCAwBBScKAAcCIQQVCAwBBScKAAcDIQQcCAwBBScKAAcEIQQjCAwBBScLAAcFIQwBCwEEKgUsBwYnAgkBAAAAIAcABwMSAAcDBwASAAcBBwQSAAcBBwUSAAcCBwUSAAcCBwQSAAcEBwESAAcEBwISAAcFBwESAAcFBwISAEAHCgAAAAAAAAACCgEAAAgKCwALARIADAMRCQwCDgIOAzgAAgsBAAAIDwsACwESAAwDEQkMAg4CDgM4AAQLBQ0HBicLAwIAAAABAA==",
    "committee": "oRzrCwYAAAAMAQAWAhY8A1LLAQSdAjIFzwKIAwfXBaQHCPsMgAEG+w2rAQqmD00M8w/cBw3PFxYP5RcCABUAGQAuATABQQIbAiACPQI/AkADOgABAwAAAgQAAAcDAAAGAwAABAcAAAUHAAIAAgACAwcAAwgHAQAABwoCAAgLBwIBAAAACQwHAQMACgkIAABCAAEAABgCAwAAMgQBAAA7BQEAACEGAQAAFgcIAAA+CQEAABQKAQABHDQMAAIPMBEAAhAwMQACMw4PAAI2EAwAAxotJgEAAyksFQEABA4SAQEABBchFQEABTQTDAAGHSYBAQMHHwIPAAc1AhoACBcXFQIBAAgeARsCAQAIIhcYAgEACCMoKQIBAAgkMjMCAQAIJSIjAgEACCckAQIBAAgoHhUCAQAINx4PAgEACDwXKwIBAQkXFBUBAwkeAQ0BAwknGQEBAwoNHyAAIAwPER8MFRYXFiEMFhYWHBwWEBoVHBocGxwSJR0cGBweKg4PDQ8bFhIuHRYZFhI1EjcDBggBCAcKCgIAAQYICQEIAQUHCAEHCAwKAgoCBggJBAcIAQsKAgUDAwYICQIHCAEIBgEGCAEBBgsKAgoCCAQDBwgBCgIGCAkCBggBCgIIAwYIBAoCCgIDCwsBCgIDAwEKAgELCwEJAAEGCAcBAwEIBwECAgcKCQAKCQADBgoCBgoCAgIGCwsBCQAGCQABAQIKAggEAgYLCgIJAAkBBgkAAQYJAQIHCwsBCQAJAAEFAQsKAgkACQECBQgFBggFBwgFCAUIBQUKBQEGCwoCCQAJAQEHCAwBCgUCBgoJAAYJAAIHCwoCCQAJAQYJAAEHCQEDBwsKAgkACQEJAAkBAQgFAQkABwMIBAsKAgoCCAQGCAUDCwgBAwMCBgsKAgkACQEDAgYJAAYJAQIFAwELCAEJAQEGCwgBCQABCwgBCQABCAILAQoCBgoKAgEDAwcIBAMGCgIKCgIGCgIBBggGAQYKCgICBwsKAgkACQEDAgYJAAcJAQEGCgIBCAACAwcIBAEIAwMBAwYIBQlCbG9ja2xpc3QXQmxvY2tsaXN0VmFsaWRhdG9yRXZlbnQPQnJpZGdlQ29tbWl0dGVlDUJyaWRnZU1lc3NhZ2UPQ29tbWl0dGVlTWVtYmVyG0NvbW1pdHRlZU1lbWJlclJlZ2lzdHJhdGlvbh1Db21taXR0ZWVNZW1iZXJVcmxVcGRhdGVFdmVudBRDb21taXR0ZWVVcGRhdGVFdmVudAZPcHRpb24OU3VpU3lzdGVtU3RhdGUJVHhDb250ZXh0BlZlY01hcAZWZWNTZXQaYWN0aXZlX3ZhbGlkYXRvcl9hZGRyZXNzZXMGYXBwZW5kDmJsb2NrbGlzdF90eXBlHWJsb2NrbGlzdF92YWxpZGF0b3JfYWRkcmVzc2VzC2Jsb2NrbGlzdGVkBmJyaWRnZRNicmlkZ2VfcHVia2V5X2J5dGVzHGNoZWNrX3VuaXF1ZW5lc3NfYnJpZGdlX2tleXMJY29tbWl0dGVlEWNvbW1pdHRlZV9tZW1iZXJzCGNvbnRhaW5zBmNyZWF0ZQZjcnlwdG8MZGVzdHJveV9zb21lCGVjZHNhX2sxHGVjZHNhX3B1Yl9rZXlfdG9fZXRoX2FkZHJlc3MEZW1pdAVlbXB0eQVlcG9jaAVldmVudBFleGVjdXRlX2Jsb2NrbGlzdANnZXQQZ2V0X2VudHJ5X2J5X2lkeBRnZXRfZW50cnlfYnlfaWR4X211dAdnZXRfbXV0DWh0dHBfcmVzdF91cmwGaW5zZXJ0CGlzX2VtcHR5B2lzX3NvbWUbbGFzdF9jb21taXR0ZWVfdXBkYXRlX2Vwb2NoBm1lbWJlchRtZW1iZXJfcmVnaXN0cmF0aW9ucwdtZW1iZXJzB21lc3NhZ2UHbmV3X3VybAZvcHRpb24LcHVibGljX2tleXMIcmVnaXN0ZXIVcmVxdWlyZWRfdm90aW5nX3Bvd2VyE3NlY3AyNTZrMV9lY3JlY292ZXIGc2VuZGVyEXNlcmlhbGl6ZV9tZXNzYWdlBHNpemUec3Rha2VfcGFydGljaXBhdGlvbl9wZXJjZW50YWdlC3N1aV9hZGRyZXNzCnN1aV9zeXN0ZW0ZdHJ5X2NyZWF0ZV9uZXh0X2NvbW1pdHRlZQd0cnlfZ2V0CnR4X2NvbnRleHQPdXBkYXRlX25vZGVfdXJsB3ZlY19tYXAHdmVjX3NldAZ2ZWN0b3IRdmVyaWZ5X3NpZ25hdHVyZXMMdm90aW5nX3Bvd2VyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDCAAAAAAAAAAAAwgBAAAAAAAAAAMIAgAAAAAAAAADCAMAAAAAAAAAAwgEAAAAAAAAAAMIBQAAAAAAAAADCAYAAAAAAAAAAwgHAAAAAAAAAAMICAAAAAAAAAADCAkAAAAAAAAACgITElNVSV9CUklER0VfTUVTU0FHRQMIIQAAAAAAAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoCAQAAAgIRATEKCgIBAgMtCwoCCgIIBCwLCgIFCAUqAwICAi0LCgIKAggEOAMDAgIrCgIvCgIEAgU5BRMKAkMDJgoCEQEFAgM5BRMKAiYKAgABAAALVwYAAAAAAAAAAA4CQQwMCQwDOAAMCA4BEQsMBwcKDAUNBQsBEQw4AQYAAAAAAAAAAAwKCgMKCSMETQUXDgIKA0IMDgUxABERDAYOCA4GOAIgBCQFKAsAAQcBJwoAEAAOBjgDBC4FMgsAAQcCJwoAEAAOBjgEDAQKBBABFCAEQwsKCwQQAhQWDAoFRQsEAQ0ICwY4BQsDBgEAAAAAAAAAFgwDBRILAAELCgsHJgRUBVYHACcCAQMAAAENCwARFAcMIQQGBQgHAyc4BjgHBgAAAAAAAAAAEgECAgMAAB1VCgAQADgIBAUFDQsBAQsAAQsEAQcHJw4CQREHCyEEEwUbCwEBCwABCwQBBwYnCwQRFAwJCwERIgwKDgoOCTgJBCYFKgsAAQcFJwoAEAMOCTgKBEAKAA8DDgk4CwwGCwMKBg8EFQoCCgYPBRULBhQMBQVMCgkKAgsDEgUMBwoADwMLCQoHOAwLBwwFCwUMCAsALgsCEQcLCDgNAgMDAAAnWQYAAAAAAAAAAAwEOAYMBgYAAAAAAAAAAAwICgQKABADOA4jBD4FDQoAEAMKBDgPDAcBDgEKBxAGOBAMCQ4JOBEENwsJOBIMCgsICgoWDAgKBxAGFAoHEAUUCwo0CgcQBBQJEgQMBQ0GCwcQBRQLBTgTBTkLBwELBAYBAAAAAAAAABYMBAUGCggLAiYEVDgHCgAPAxUKBgoADwAVCwMREwsADwcVCwYLCBICOBQFWAsAAQsDAQIEAwAAL2AOAREJMQEiDAIOAREKDAQKBEEMDAcGAAAAAAAAAAAMBgYAAAAAAAAAAAwJBw0MCwoGCgcjBFcFFgoECgZCDAwMCQwFCgkKABAAOBUjBEkFIwoADwAKCTgWDAgMCgoKEQgMAwoMFAsDIQRACwwBCgILCA8BFQ0LCwoURAwIDAUGAAAAAAAAAAAMCQVJCwoBCwgBCwkGAQAAAAAAAAAWDAkFHAsFBEwFUgsAAQsEAQcEJwsGBgEAAAAAAAAAFgwGBRELAAELBAELAgsLEgA4FwIFAwAAAQMLABAAAgYDAAA2MgYAAAAAAAAAAAwDCgMKABAAOBUjBCwFCQoADwAKAzgWDAQBCgQQCBQKAhEUIQQlCwABCwIBCgEKBA8JFQsEEAoUCwESAzgYAgsEAQsDBgEAAAAAAAAAFgwDBQILAAELAgEHCScHAAAAOCkKABADOA4MAwkMAgoDBgAAAAAAAAAAJAQmBQsLAwYBAAAAAAAAABcMAwoAEAMKAzgPDAQBCwQQBRQKASEEBgsCIAQfBSMLAAEHCCcIDAIFBgsAAQIBAAQEBAIBAQUCBQEFAAECBAAEAwQBABIA",
    "crypto": "oRzrCwYAAAAIAQAGAwYPBRUVBypYCIIBQAbCAQQMxgGJAQ/PAgIAAQEDAQUABAABAAECAAEAAgYAAQABBgoCAQoCBgoCCgIKAgoCAwMAAQIJY29tbWl0dGVlBmNyeXB0bxFkZWNvbXByZXNzX3B1YmtleQhlY2RzYV9rMRxlY2RzYV9wdWJfa2V5X3RvX2V0aF9hZGRyZXNzBGhhc2gJa2VjY2FrMjU2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoCAQAAAwAAAjALABEBDAIGAQAAAAAAAAAHAAwDDAUKBQZBAAAAAAAAACMEFwUMDQMOAgoFQgQURAQLBQYBAAAAAAAAABYMBQUHDgMRAgwEBwAMAQYMAAAAAAAAAAwGCgYGIAAAAAAAAAAjBC4FIw0BDgQKBkIEFEQECwYGAQAAAAAAAAAWDAYFHgsBAgAAAA==",
    "limiter": "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",
    "message": "oRzrCwYAAAALAQAMAgwsAzi1AgTtAhAF/QLsAQfpBJoMCIMRYAbjEV8KwhJiDKQTxAwN6B8qACwAFAAuAQ4BWwIQAAMHAAAEBwAACAIAAAUCAAACAgAACgIAAAkCAAAAAgAABgIAAwcHAAUBBwAAJAABAAAjAAIAACIAAwAAJgAEAAAlAAUAACEABgAAQwcIAAAaCQcAABgKBwAAFwsHAAAcDAcAABsNBwAAFg4HAAAZDxAAACoAEAAALwARAAAtABEAAEIAEgAARAARAAA1AAgAAFATEQAATxMIAABRExEAAEsTEgAAHxQRAAARFREAABIVFgAAWRcRAABYFxEAAFcXEgAAVRgRAABUGBIAACkZGgAATRkIAABSGRsAAE4ZHAAAHh0RAAAgHREAAD0AEgAASQAeAAA/CAgAADcfEgABDxEdAAILHREAAhUdEQACHR0RAAJKHREAAlMdEQACVh0RAANFCCcABA0qHQEABCgiGgEABD4tHQEABSchCAAFMQghAAU2HxoABTgfEQAFOR8cAAU6HwgABTsfJgAFSCkIAQAzETwSMhE8GjwIPBs8HDQRAQYIAAEIAgEIAwEIBAEIBQEIBgEIBwEIAAEKAgcCAwoCAgoCAgMDAgMCBAIDAgoKAgQCAwIDBAICAwMGAgMBCgIKCAkKAwMCAgMBCAEBAgEDAQYIAgEGCAMBBggEAQYKCgIBBggFAQYIBgEGCAcBAQEKCAkBCgMAAQgIAQcICgcKAgMICgoCCgICAgEICgEGCgkABwoCCgICCAoCAwoKAgQKAggKAwIICgIICgMBCgIKAwoICQoKAgEKCgIBCAkECgIKAgMCAQYJAAIHCgkACgkABAoCAwMKAggDAwMDAwMCCAMBBwoJAAMDAgMNQWRkVG9rZW5PblN1aQNCQ1MJQmxvY2tsaXN0DUJyaWRnZU1lc3NhZ2UQQnJpZGdlTWVzc2FnZUtleQtFbWVyZ2VuY3lPcBpQYXJzZWRUb2tlblRyYW5zZmVyTWVzc2FnZQZTdHJpbmcUVG9rZW5UcmFuc2ZlclBheWxvYWQQVXBkYXRlQXNzZXRQcmljZRFVcGRhdGVCcmlkZ2VMaW1pdBFhZGRfdG9rZW5zX29uX3N1aQZhbW91bnQGYXBwZW5kBWFzY2lpFWFzc2VydF92YWxpZF9jaGFpbl9pZANiY3MOYmxvY2tsaXN0X3R5cGUdYmxvY2tsaXN0X3ZhbGlkYXRvcl9hZGRyZXNzZXMOYnJpZGdlX3NlcV9udW0JY2hhaW5faWRzE2NvbW1pdHRlZV9ibG9ja2xpc3QgY3JlYXRlX2FkZF90b2tlbnNfb25fc3VpX21lc3NhZ2UYY3JlYXRlX2Jsb2NrbGlzdF9tZXNzYWdlG2NyZWF0ZV9lbWVyZ2VuY3lfb3BfbWVzc2FnZQpjcmVhdGVfa2V5G2NyZWF0ZV90b2tlbl9icmlkZ2VfbWVzc2FnZSFjcmVhdGVfdXBkYXRlX2Fzc2V0X3ByaWNlX21lc3NhZ2UiY3JlYXRlX3VwZGF0ZV9icmlkZ2VfbGltaXRfbWVzc2FnZQxlbWVyZ2VuY3lfb3ASZW1lcmdlbmN5X29wX3BhdXNlEWVtZXJnZW5jeV9vcF90eXBlFGVtZXJnZW5jeV9vcF91bnBhdXNlGWV4dHJhY3RfYWRkX3Rva2Vuc19vbl9zdWkZZXh0cmFjdF9ibG9ja2xpc3RfcGF5bG9hZBxleHRyYWN0X2VtZXJnZW5jeV9vcF9wYXlsb2FkHGV4dHJhY3RfdG9rZW5fYnJpZGdlX3BheWxvYWQaZXh0cmFjdF91cGRhdGVfYXNzZXRfcHJpY2UbZXh0cmFjdF91cGRhdGVfYnJpZGdlX2xpbWl0FGludG9fcmVtYWluZGVyX2J5dGVzCGlzX2VtcHR5CWlzX25hdGl2ZQNrZXkFbGltaXQHbWVzc2FnZQxtZXNzYWdlX3R5cGUNbWVzc2FnZV90eXBlcw9tZXNzYWdlX3ZlcnNpb24MbmF0aXZlX3Rva2VuA25ldwluZXdfcHJpY2UHb3BfdHlwZQ5wYXJzZWRfcGF5bG9hZAdwYXlsb2FkCXBlZWxfYm9vbAtwZWVsX3U2NF9iZQdwZWVsX3U4DHBlZWxfdmVjX3U2NAtwZWVsX3ZlY191OA9wZWVsX3ZlY192ZWNfdTgPcmVjZWl2aW5nX2NoYWluFXJlcXVpcmVkX3ZvdGluZ19wb3dlcgdyZXZlcnNlDXJldmVyc2VfYnl0ZXMOc2VuZGVyX2FkZHJlc3MNc2VuZGluZ19jaGFpbgdzZXFfbnVtEXNlcmlhbGl6ZV9tZXNzYWdlDHNvdXJjZV9jaGFpbgZzdHJpbmcOdGFyZ2V0X2FkZHJlc3MMdGFy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",
    "message_types": "oRzrCwYAAAAHAQACAwIeBSADByNuCJEBIAaxARIMwwE2AAMABAABAAABAAEAAAIAAQAABgABAAAFAAEAAAAAAQAAAQIRYWRkX3Rva2Vuc19vbl9zdWkTY29tbWl0dGVlX2Jsb2NrbGlzdAxlbWVyZ2VuY3lfb3ANbWVzc2FnZV90eXBlcwV0b2tlbhJ1cGRhdGVfYXNzZXRfcHJpY2UTdXBkYXRlX2JyaWRnZV9saW1pdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAgEAAgEBAgECAgEDAgEEAgEGAAEAAAACBwACAQEAAAACBwECAgEAAAACBwICAwEAAAACBwMCBAEAAAACBwQCBQEAAAACBwUCAA==",
    "treasury": "oRzrCwYAAAAMAQAgAiBUA3TZAQTNAjIF/wK+Age9BaAGCN0LYAa9DCgK5QxNDLIN2QMNixEOD5kRAgBDARUBOAFGAUcCFAIWAhoCIgIpAjYCNwI5AkECRQJLAAIEAAABBwAABQQAAA8DAAAHAwAACwMAAQoHAAIJBwEAAAMOBwAGAAwABwMMAQABBwQMAQABBwwMAQABCgYHAAsIDAAMEAwADg0CAA8RBwIBAAAAAD8AAQEAAB0AAgEAADUAAgEAADwDBAEAABMFBAAAGwYHAAAZCAQBAAAxCQoBAABJCwQAACgADAEAAS4SEwACHzMNAQACMDEyAQADJAQQAQADJRESAAMvEBIABDohAgAFIxMUAAYSGgQCBwQGMwYpAAY9HyACBwQHGSwCAQAHJhgBAQAHMS0KAQAHQA8CAQAIIA0EAQMJHhMTAAorFxQACxIcBAIHDAsXKisCBwwLMwYnAAxKFRYADTsNBAEMDyEEKAIBAA8nNCsCAQAPLSMEAgEAD0QvMAIBAQkNGA0NDRYNEhkcGxkdFBkjIiMkICUZJiEiISQdGxUNFw0kJAwQCxAiIhk1JCIMDAsMAQYIAAECAQMEBwgACwwBCQAIDwYLCwEJAAAFBwgACAYCAQMBBwgQAQgAAgcIAAsKAQkAAwcIAAMHCBABCwoBCQADBwgAAgMBCAEBCQAECA0FCAIICAEGCwwBCQABCAgBBggIAQgGAQoCAQUBBggPAQgNAQYIDQEGCwsBCQACCAYIAgMHCAkJAAkBAggICwwBCQADBwgOCQAJAQEIBQQCAwgICA8CBwgJCQABCQECAwICCAgIAQMHCxECCQAJAQkACQECAggIAQgPAQgEAQgOAQsRAgkACQEBCAkCBwgOCQABBwkBAgcLDAEJAAsKAQkAAwcLDAEJAAMHCBADBwgBCwcBCAgICAIGCxECCQAJAQYJAAELBwEJAQEGCwcBCQABAQELBwEJAAIHCxECCQAJAQYJAAEIAwIICAsHAQgBA0JhZxNCcmlkZ2VUb2tlbk1ldGFkYXRhDkJyaWRnZVRyZWFzdXJ5BENvaW4MQ29pbk1ldGFkYXRhGEZvcmVpZ25Ub2tlblJlZ2lzdHJhdGlvbgJJRA1OZXdUb2tlbkV2ZW50CU9iamVjdEJhZwZPcHRpb24GU3RyaW5nFlRva2VuUmVnaXN0cmF0aW9uRXZlbnQLVHJlYXN1cnlDYXAJVHhDb250ZXh0CFR5cGVOYW1lFVVwZGF0ZVRva2VuUHJpY2VFdmVudApVcGdyYWRlQ2FwBlZlY01hcANhZGQNYWRkX25ld190b2tlbgdhZGRyZXNzBWFzY2lpA2JhZwpib3Jyb3dfbXV0BmJyaWRnZQRidXJuBGNvaW4GY3JlYXRlB2RlY2ltYWwSZGVjaW1hbF9tdWx0aXBsaWVyBmRlY29kZQxkZXN0cm95X3NvbWUEZW1pdAVlbXB0eQVldmVudApmcm9tX2J5dGVzA2dldAtnZXRfYWRkcmVzcwxnZXRfZGVjaW1hbHMHZ2V0X211dBJnZXRfdG9rZW5fbWV0YWRhdGEDaGV4AmlkDWlkX3RvX2FkZHJlc3MRaWRfdG9rZW5fdHlwZV9tYXAGaW5zZXJ0CmludG9fYnl0ZXMLaW50b19zdHJpbmcHaXNfc29tZQRtaW50DG5hdGl2ZV90b2tlbgNuZXcJbmV3X3ByaWNlDm5vdGlvbmFsX3ZhbHVlBm9iamVjdApvYmplY3RfYmFnBm9wdGlvbgdwYWNrYWdlA3BvdxRwdWJsaWNfZnJlZXplX29iamVjdBZyZWdpc3Rlcl9mb3JlaWduX3Rva2VuBnJlbW92ZRBzdXBwb3J0ZWRfdG9rZW5zCHRva2VuX2lkDHRvdGFsX3N1cHBseQh0cmFuc2Zlcgp0cmVhc3VyaWVzCHRyZWFzdXJ5B3RyeV9nZXQKdHhfY29udGV4dAl0eXBlX25hbWUDdTY0AnVjG3VwZGF0ZV9hc3NldF9ub3Rpb25hbF9wcmljZQ91cGdyYWRlX3BhY2thZ2UHdmVjX21hcAx3YWl0aW5nX3Jvb20AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAEAAAAAAAAAAwgCAAAAAAAAAAMIAwAAAAAAAAADCAQAAAAAAAAAAAIEQggOPgsRAggICAEsCxECAggITAgJAQIEKgIdAzUDMgECAgNGCAhICA8cAgMCAj8CNAMEAgU/AkYICDIBHQM1AwUCA0YICBwCMgEAAQAADAcLADgADAEOARAAFAIBAQAADAcLADgADAEOARABFAICAQAADAcLADgADAEOARACFAIDAwAADjsOATgBBgAAAAAAAAAAIQQGBQwLAAELAwEHAic4AgwHDgcRDhEKERoREQwFDgIRHwwEDgQRGwsFIQQdBSMLAAELAwEHAScKBwsCCgM4AxICDAYKAA8DCgcRDwsGOAQLAA8ECgcLATgFCwcLAzgDCRIFOAYCBAMAAB4zCgMgBDAKBAYAAAAAAAAAACQECAUMCwABBwMnCgAPAwsBOAcTAgwFDAgMBwYKAAAAAAAAAAsFERAMBgoADwUKBwoCCgYKBAoDEgE4CAsADwYKAgoHOAkLCDgKCwILBwsDCwYLBBIEOAsFMgsAAQIFAwAABAgKABEeOAw4DQsAERMSAAIGAwAABAgLAA8EOAI4DgsBOA8BAgcDAAAECAsADwQ4AjgOCwELAjgQAggDAAAuJwoAEAYOATgRDAQOBDgSBAkFDQsAAQcAJwoCBgAAAAAAAAAAJAQSBRYLAAEHAycLBDgTDAULAA8FDgU4FAwDCgILAw8CFQsBCwISAzgVAgkAAAA2EDgCDAELABAFDgE4FgwCDgI4FwQLBQ0HACcLAjgYAgEAAQEBAgADAAAAAQACABgA"
  },
  "typeOriginTable": [
    {
      "module_name": "treasury",
      "datatype_name": "BridgeTreasury",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "treasury",
      "datatype_name": "BridgeTokenMetadata",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "treasury",
      "datatype_name": "ForeignTokenRegistration",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "treasury",
      "datatype_name": "UpdateTokenPriceEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "treasury",
      "datatype_name": "NewTokenEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "treasury",
      "datatype_name": "TokenRegistrationEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "chain_ids",
      "datatype_name": "BridgeRoute",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "BridgeMessage",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "BridgeMessageKey",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "TokenTransferPayload",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "EmergencyOp",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "Blocklist",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "UpdateBridgeLimit",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "UpdateAssetPrice",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "AddTokenOnSui",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "message",
      "datatype_name": "ParsedTokenTransferMessage",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "limiter",
      "datatype_name": "TransferLimiter",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "limiter",
      "datatype_name": "TransferRecord",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "limiter",
      "datatype_name": "UpdateRouteLimitEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "BlocklistValidatorEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "BridgeCommittee",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "CommitteeUpdateEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "CommitteeMemberUrlUpdateEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "CommitteeMember",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "committee",
      "datatype_name": "CommitteeMemberRegistration",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "Bridge",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "BridgeInner",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenDepositedEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "EmergencyOpEvent",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "BridgeRecord",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenTransferApproved",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenTransferClaimed",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenTransferAlreadyApproved",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenTransferAlreadyClaimed",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    },
    {
      "module_name": "bridge",
      "datatype_name": "TokenTransferLimitExceed",
      "package": "0x000000000000000000000000000000000000000000000000000000000000000b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 0
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 0
    },
    "0x0000000000000000000000000000000000000000000000000000000000000003": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000003",
      "upgraded_version": 0
    }
  },
  "functionMap": {
    "bridge": {
      "approve_token_transfer": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage",
          "vector<vector<u8>>"
        ],
        "return": []
      },
      "claim_and_transfer_token": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::clock::Clock",
          "u8",
          "u64",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "claim_token": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::clock::Clock",
          "u8",
          "u64",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<T0>"
        ]
      },
      "claim_token_internal": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::clock::Clock",
          "u8",
          "u64",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::Option<0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<T0>>",
          "address"
        ]
      },
      "committee_registration": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000003::sui_system::SuiSystemState",
          "vector<u8>",
          "vector<u8>",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "create": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::UID",
          "u8",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "execute_add_tokens_on_sui": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ],
        "return": []
      },
      "execute_emergency_op": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::EmergencyOp"
        ],
        "return": []
      },
      "execute_system_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage",
          "vector<vector<u8>>"
        ],
        "return": []
      },
      "execute_update_asset_price": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateAssetPrice"
        ],
        "return": []
      },
      "execute_update_bridge_limit": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateBridgeLimit"
        ],
        "return": []
      },
      "get_current_seq_num_and_increment": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner",
          "u8"
        ],
        "return": [
          "u64"
        ]
      },
      "get_parsed_token_transfer_message": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "u8",
          "u64"
        ],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::Option<0x000000000000000000000000000000000000000000000000000000000000000b::message::ParsedTokenTransferMessage>"
        ]
      },
      "get_token_transfer_action_signatures": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "u8",
          "u64"
        ],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::option::Option<vector<vector<u8>>>"
        ]
      },
      "get_token_transfer_action_status": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "u8",
          "u64"
        ],
        "return": [
          "u8"
        ]
      },
      "init_bridge_committee": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::VecMap<address, u64>",
          "u64",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "load_inner": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge"
        ],
        "return": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner"
        ]
      },
      "load_inner_mut": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge"
        ],
        "return": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::BridgeInner"
        ]
      },
      "register_foreign_token": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::TreasuryCap<T0>",
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::UpgradeCap",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::coin::CoinMetadata<T0>"
        ],
        "return": []
      },
      "send_token": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "u8",
          "vector<u8>",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<T0>",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "update_node_url": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::bridge::Bridge",
          "vector<u8>",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    },
    "chain_ids": {
      "assert_valid_chain_id": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8"
        ],
        "return": []
      },
      "eth_custom": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "eth_mainnet": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "eth_sepolia": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "get_route": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u8"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute"
        ]
      },
      "is_valid_route": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u8"
        ],
        "return": [
          "bool"
        ]
      },
      "route_destination": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute"
        ],
        "return": [
          "&u8"
        ]
      },
      "route_source": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute"
        ],
        "return": [
          "&u8"
        ]
      },
      "sui_custom": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "sui_mainnet": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "sui_testnet": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "valid_routes": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "vector<0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute>"
        ]
      }
    },
    "committee": {
      "check_uniqueness_bridge_keys": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "vector<u8>"
        ],
        "return": []
      },
      "committee_members": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee"
        ],
        "return": [
          "&0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::VecMap<vector<u8>, 0x000000000000000000000000000000000000000000000000000000000000000b::committee::CommitteeMember>"
        ]
      },
      "create": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee"
        ]
      },
      "execute_blocklist": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::Blocklist"
        ],
        "return": []
      },
      "register": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000003::sui_system::SuiSystemState",
          "vector<u8>",
          "vector<u8>",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "try_create_next_committee": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::VecMap<address, u64>",
          "u64",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "update_node_url": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "vector<u8>",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "verify_signatures": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::committee::BridgeCommittee",
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage",
          "vector<vector<u8>>"
        ],
        "return": []
      }
    },
    "crypto": {
      "ecdsa_pub_key_to_eth_address": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&vector<u8>"
        ],
        "return": [
          "vector<u8>"
        ]
      }
    },
    "limiter": {
      "adjust_transfer_records": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::limiter::TransferRecord",
          "u64"
        ],
        "return": []
      },
      "check_and_record_sending_transfer": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::limiter::TransferLimiter",
          "&0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::clock::Clock",
          "0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute",
          "u64"
        ],
        "return": [
          "bool"
        ]
      },
      "current_hour_since_epoch": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x0000000000000000000000000000000000000000000000000000000000000002::clock::Clock"
        ],
        "return": [
          "u64"
        ]
      },
      "get_route_limit": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::limiter::TransferLimiter",
          "&0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute"
        ],
        "return": [
          "u64"
        ]
      },
      "initial_transfer_limits": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_map::VecMap<0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute, u64>"
        ]
      },
      "new": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::limiter::TransferLimiter"
        ]
      },
      "update_route_limit": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::limiter::TransferLimiter",
          "&0x000000000000000000000000000000000000000000000000000000000000000b::chain_ids::BridgeRoute",
          "u64"
        ],
        "return": []
      }
    },
    "message": {
      "blocklist_type": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::Blocklist"
        ],
        "return": [
          "u8"
        ]
      },
      "blocklist_validator_addresses": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::Blocklist"
        ],
        "return": [
          "&vector<vector<u8>>"
        ]
      },
      "create_add_tokens_on_sui_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u64",
          "bool",
          "vector<u8>",
          "vector<0x0000000000000000000000000000000000000000000000000000000000000001::ascii::String>",
          "vector<u64>"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "create_blocklist_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u64",
          "u8",
          "vector<vector<u8>>"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "create_emergency_op_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u64",
          "u8"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "create_key": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u8",
          "u64"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessageKey"
        ]
      },
      "create_token_bridge_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u64",
          "vector<u8>",
          "u8",
          "vector<u8>",
          "u8",
          "u64"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "create_update_asset_price_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u8",
          "u64",
          "u64"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "create_update_bridge_limit_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "u8",
          "u64",
          "u8",
          "u64"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ]
      },
      "emergency_op_pause": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "emergency_op_type": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::EmergencyOp"
        ],
        "return": [
          "u8"
        ]
      },
      "emergency_op_unpause": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "extract_add_tokens_on_sui": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ]
      },
      "extract_blocklist_payload": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::Blocklist"
        ]
      },
      "extract_emergency_op_payload": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::EmergencyOp"
        ]
      },
      "extract_token_bridge_payload": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::TokenTransferPayload"
        ]
      },
      "extract_update_asset_price": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateAssetPrice"
        ]
      },
      "extract_update_bridge_limit": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateBridgeLimit"
        ]
      },
      "is_native": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ],
        "return": [
          "bool"
        ]
      },
      "key": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessageKey"
        ]
      },
      "message_type": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "u8"
        ]
      },
      "message_version": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "u8"
        ]
      },
      "payload": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "vector<u8>"
        ]
      },
      "peel_u64_be": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::bcs::BCS"
        ],
        "return": [
          "u64"
        ]
      },
      "required_voting_power": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "u64"
        ]
      },
      "reverse_bytes": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "vector<u8>"
        ],
        "return": [
          "vector<u8>"
        ]
      },
      "seq_num": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "u64"
        ]
      },
      "serialize_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "vector<u8>"
        ]
      },
      "source_chain": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "u8"
        ]
      },
      "to_parsed_token_transfer_message": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::BridgeMessage"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::message::ParsedTokenTransferMessage"
        ]
      },
      "token_amount": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::TokenTransferPayload"
        ],
        "return": [
          "u64"
        ]
      },
      "token_ids": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ],
        "return": [
          "vector<u8>"
        ]
      },
      "token_prices": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ],
        "return": [
          "vector<u64>"
        ]
      },
      "token_target_address": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::TokenTransferPayload"
        ],
        "return": [
          "vector<u8>"
        ]
      },
      "token_target_chain": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::TokenTransferPayload"
        ],
        "return": [
          "u8"
        ]
      },
      "token_type": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::TokenTransferPayload"
        ],
        "return": [
          "u8"
        ]
      },
      "token_type_names": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::AddTokenOnSui"
        ],
        "return": [
          "vector<0x0000000000000000000000000000000000000000000000000000000000000001::ascii::String>"
        ]
      },
      "update_asset_price_payload_new_price": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateAssetPrice"
        ],
        "return": [
          "u64"
        ]
      },
      "update_asset_price_payload_token_id": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateAssetPrice"
        ],
        "return": [
          "u8"
        ]
      },
      "update_bridge_limit_payload_limit": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateBridgeLimit"
        ],
        "return": [
          "u64"
        ]
      },
      "update_bridge_limit_payload_receiving_chain": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateBridgeLimit"
        ],
        "return": [
          "u8"
        ]
      },
      "update_bridge_limit_payload_sending_chain": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::message::UpdateBridgeLimit"
        ],
        "return": [
          "u8"
        ]
      }
    },
    "message_types": {
      "add_tokens_on_sui": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "committee_blocklist": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "emergency_op": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "token": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "update_asset_price": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      },
      "update_bridge_limit": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [],
        "return": [
          "u8"
        ]
      }
    },
    "treasury": {
      "add_new_token": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "0x0000000000000000000000000000000000000000000000000000000000000001::ascii::String",
          "u8",
          "bool",
          "u64"
        ],
        "return": []
      },
      "burn": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<T0>"
        ],
        "return": []
      },
      "create": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury"
        ]
      },
      "decimal_multiplier": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury"
        ],
        "return": [
          "u64"
        ]
      },
      "get_token_metadata": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury"
        ],
        "return": [
          "0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTokenMetadata"
        ]
      },
      "mint": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "u64",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<T0>"
        ]
      },
      "notional_value": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury"
        ],
        "return": [
          "u64"
        ]
      },
      "register_foreign_token": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::TreasuryCap<T0>",
          "0x0000000000000000000000000000000000000000000000000000000000000002::package::UpgradeCap",
          "&0x0000000000000000000000000000000000000000000000000000000000000002::coin::CoinMetadata<T0>"
        ],
        "return": []
      },
      "token_id": {
        "visibility": "PUBLIC",
        "is_entry": false,
        "params": [
          "&0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury"
        ],
        "return": [
          "u8"
        ]
      },
      "update_asset_notional_price": {
        "visibility": "FRIEND",
        "is_entry": false,
        "params": [
          "&mut 0x000000000000000000000000000000000000000000000000000000000000000b::treasury::BridgeTreasury",
          "u8",
          "u64"
        ],
        "return": []
      }
    }
  }
}