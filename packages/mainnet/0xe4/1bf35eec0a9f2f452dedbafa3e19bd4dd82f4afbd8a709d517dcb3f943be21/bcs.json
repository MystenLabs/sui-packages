{
  "dataType": "package",
  "id": "0xe41bf35eec0a9f2f452dedbafa3e19bd4dd82f4afbd8a709d517dcb3f943be21",
  "version": 1,
  "moduleMap": {
    "mstr": "oRzrCwYAAAAKAQAMAgweAyotBFcKBWFjB8QB1QEImQNgBvkDtisKry8FDLQvNgALAQ0CBgISAhMCFAABAgABAgcBAAACAAwBAAECAwwBAAEEBAIABQUHAAAJAAEAAREFBgEAAgcICQECAgoMAQEAAw4FAQEMAw8OAQEMBBAKCwAFDAMEAAEEAgcDBwUNBA8CCAAHCAQAAgsCAQgACwMBCAABCgIBCAUBCQABCwEBCQABCAAHCQACCgIKAgoCCwEBCAUHCAQCCwMBCQALAgEJAAEGCAQBBQQHCwMBCQADBQcIBAELAwEIAAIJAAUBCwIBCAAMQ29pbk1ldGFkYXRhBE1TVFIGT3B0aW9uC1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVcmwEY29pbg9jcmVhdGVfY3VycmVuY3kLZHVtbXlfZmllbGQEaW5pdBFtaW50X2FuZF90cmFuc2ZlcgRtc3RyFW5ld191bnNhZmVfZnJvbV9ieXRlcwZvcHRpb24TcHVibGljX3NoYXJlX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUIdHJhbnNmZXIKdHhfY29udGV4dAN1cmzkG/Ne7AqfL0Ut7br6Phm9TdgvSvvYpwnVF9yz+UO+IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAQIKAgUETVNUUgoCDg1NaWNyb1N0cmF0ZWd5CgLpBecFTWljcm9TdHJhdGVneSBJbmNvcnBvcmF0ZWQgaXMgYW4gQW1lcmljYW4gQml0Y29pbiBkZXZlbG9wbWVudCBjb21wYW55IHRoYXQgcHJvdmlkZXMgYnVzaW5lc3MgaW50ZWxsaWdlbmNlLCBtb2JpbGUgc29mdHdhcmUsIGFuZCBjbG91ZC1iYXNlZCBzZXJ2aWNlcy4gRm91bmRlZCBpbiAxOTg5IGJ5IE1pY2hhZWwgSi4gU2F5bG9yLCBTYW5qdSBCYW5zYWwsIGFuZCBUaG9tYXMgU3BhaHIsIHRoZSBmaXJtIGRldmVsb3BzIHNvZnR3YXJlIHRvIGFuYWx5emUgaW50ZXJuYWwgYW5kIGV4dGVybmFsIGRhdGEgaW4gb3JkZXIgdG8gbWFrZSBidXNpbmVzcyBkZWNpc2lvbnMgYW5kIHRvIGRldmVsb3AgbW9iaWxlIGFwcHMuIEl0IGlzIGEgcHVibGljIGNvbXBhbnkgaGVhZHF1YXJ0ZXJlZCBpbiBUeXNvbnMgQ29ybmVyLCBWaXJnaW5pYSwgaW4gdGhlIFdhc2hpbmd0b24gbWV0cm9wb2xpdGFuIGFyZWEuIEl0cyBwcmltYXJ5IGJ1c2luZXNzIGFuYWx5dGljcyBjb21wZXRpdG9ycyBpbmNsdWRlIFNBUCBBRyBCdXNpbmVzcyBPYmplY3RzLCBJQk0gQ29nbm9zLCBhbmQgT3JhY2xlIENvcnBvcmF0aW9uJ3MgQkkgUGxhdGZvcm0uIFNheWxvciBpcyB0aGUgRXhlY3V0aXZlIENoYWlybWFuIGFuZCwgZnJvbSAxOTg5IHRvIDIwMjIsIHdhcyB0aGUgQ0VPLiBJdCBpcyB3aWRlbHkgY29uc2lkZXJlZCB0byBiZSBhIGJpdGNvaW4gcHJveHkgZHVlIHRvIGl0cyBtYXNzaXZlIGhvbGRpbmdzIG9mIHRoZSBjcnlwdG9jdXJyZW5jeS4KAv0k+yRkYXRhOmltYWdlL2pwZWc7YmFzZTY0LC85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC80Z0hZU1VORFgxQlNUMFpKVEVVQUFRRUFBQUhJQUFBQUFBUXdBQUJ0Ym5SeVVrZENJRmhaV2lBSDRBQUJBQUVBQUFBQUFBQmhZM053QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQTl0WUFBUUFBQUFEVExRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFsa1pYTmpBQUFBOEFBQUFDUnlXRmxhQUFBQkZBQUFBQlJuV0ZsYUFBQUJLQUFBQUJSaVdGbGFBQUFCUEFBQUFCUjNkSEIwQUFBQlVBQUFBQlJ5VkZKREFBQUJaQUFBQUNoblZGSkRBQUFCWkFBQUFDaGlWRkpEQUFBQlpBQUFBQ2hqY0hKMEFBQUJqQUFBQUR4dGJIVmpBQUFBQUFBQUFBRUFBQUFNWlc1VlV3QUFBQWdBQUFBY0FITUFVZ0JIQUVKWVdWb2dBQUFBQUFBQWI2SUFBRGoxQUFBRGtGaFpXaUFBQUFBQUFBQmltUUFBdDRVQUFCamFXRmxhSUFBQUFBQUFBQ1NnQUFBUGhBQUF0czlZV1ZvZ0FBQUFBQUFBOXRZQUFRQUFBQURUTFhCaGNtRUFBQUFBQUFRQUFBQUNabVlBQVBLbkFBQU5XUUFBRTlBQUFBcGJBQUFBQUFBQUFBQnRiSFZqQUFBQUFBQUFBQUVBQUFBTVpXNVZVd0FBQUNBQUFBQWNBRWNBYndCdkFHY0FiQUJsQUNBQVNRQnVBR01BTGdBZ0FESUFNQUF4QURiLzJ3QkRBQVlFQlFZRkJBWUdCUVlIQndZSUNoQUtDZ2tKQ2hRT0R3d1FGeFFZR0JjVUZoWWFIU1VmR2hzakhCWVdJQ3dnSXlZbktTb3BHUjh0TUMwb01DVW9LU2ovMndCREFRY0hCd29JQ2hNS0NoTW9HaFlhS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDai93QUFSQ0FENkFQb0RBU0lBQWhFQkF4RUIvOFFBSEFBQkFRQUNBd0VCQUFBQUFBQUFBQUFBQUFjREJnRUVCUUlJLzhRQU54QUFBZ0lDQVFJRUF3WUVCUVVBQUFBQUFBRUNBd1FSQlFZaEVoTXhRU0pSWVFjeWNZR1JzUlFWSTZFV1VtS1N3VUpEVTRMUi84UUFHZ0VCQUFNQkFRRUFBQUFBQUFBQUFBQUFBQUVEQkFJRkJ2L0VBQzhSQVFBQkF3SUVCQVVEQlFBQUFBQUFBQUFCQWdNUkJDRUZFakZCQmhSUllSTVdJbkdoZ1pIUk1rTEI0ZkQvMmdBTUF3RUFBaEVERVFBL0FQeW9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEa3lXNDl0VUs1MlZ5akd4Ymkydlh1MSs2WVRFVE84TVFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTlucEhBcTVQcUhFeGNpSGpwazI1eDIxdEpOK3E3bmpHNmZaVGorYjFCZGMxMnBvazAvcTJsKzJ5dTdWeTBUTGJ3MnpGN1ZXN2N4bUptUDI3dHA1cm9yaDF4R1pMQnd2THlvMVNsWEpXemZ4SmIxcHZYZld2elBCK3ozcGpCNVRqY2pMNVRIODVPendWTHh5anBKZDMyYTM2L3dCaWhyTWcrVm5ndlhtS2lONitxY3BSZjdMOVRwVlJvNmQ0akhvanJ3ZWZHcUsrYm5aL3dtMytSNThYYStYbHp2TDdtNXd6U3pmcHY4bE1VVXhPWXhHTTl0djMvRFJPdk9Fd09DeU9OdndNWHdWU2xKVGg0NVM4VFduN3QvTXc5VmM1aDVuSFdWMU8zSW5iYTdJZWJYcFk4ZXljWXRhN05yZjZiWGMzanJERzg2dmk3ZGJkT2ZVMytEZmgvZG85SGwrTW81UEJsaTNSU3FuS0xscnMyazA5Zm5vN3B2UkVVelZ1eTN1RlYxVjM2TEV4VEV4RzJQYjlNZCswK3ZWQllWV1RpNVFybktLOVdsdEhDakpyYWkzK1JjK1k1UGorbStPcW5kUzRVZUpWd3JvZ3ZsOHV5OWo0Nlh1eDgzanJjbkhTbFRia1d5ZzNIWFp5ZnNYZWFuSE55N1BNK1hLSnV4WitOOVdNekdQOW9lb1NhazFHV28rcjE2SE1LckpwdUVKU1M5V2xzdUU0OFBuVzVmRHg4dVZtL092cWdtdC9FcFBiK3IwZlhKY3J4bkJQRXg3MHFWZS9CWEd1dnNrdGV1dlJkMFI1cVoyaW5jK1c2S1ltdXUvRVV4MW5IZk9NZFVTd01PN1B6YWNYR2o0cnJaZUdLLzhBcFVPTzZFNGZBeGxQbFp2SXMvNnBUc2RjRS9wcHIrN1BZNWZENC9qOHF2bkowS0ZtUHRXenJqNndsMjIwdlhXOTc5ZEdmenVJNmh4blI1bU5tMWZlY0ZMYlgxK2FLN2wrcXVJbW5hSG9hRGd0blMxVlUzdVd1djhBdGllbVB0djN6NjlHbDlYZE04TmpUNDZ2anZNcXlNeTZOY0lSbjQ0dUxlbkx2dCs2OXpCMUYwUGk4UncrVG1yT3RtNmt0UmRhU2JiU1h2OEFVMi9qZUN3T0Y1aUU4WjJwWkVIWFhWSnVhZzE4VGFiOUYyUFU1TGtNWEJsalY1YmU4bXhWVnBSOFc1RWZHcWlZaW1jcnA0UnA3bE55dTlSVFJNN1JqcFR0MTdaek01NlIyUUE1Y1drbTAwbjZQNWwvNUtPRFhnM1N6MVZIRlVmNmptdExYeVowTVhHNDNtTWpGNUdqeXI4ZkhnNFVSVWZoakxmZDYrZlphTFkxZTJlVjVWZmhpWXE1SXV4TSttTzNlZXYvQUU3SWpLdWNXbEtFazM2YlhxZHZpTUNXZnltTGlQeFFWMWlnNWE5TmxucTVMak0zbko4ZEdIbVptR25adHc3UmV0UFQrZnhhL003czhqSHJ6NmNSeC9yMndsWkZLUG9vNjIyL2IxUkU2cWVuS3N0ZUc3Y3p6ZkdpYVluSFQ4ZGV1ZGszNm42S3hPRzRhN05obVhXVGc0cU1aUlNUYmVqUjRRblk5UWpLVCtTV3kvNTkxUGpxd3JYSldaYW5DSGhXOWFqdHY2YU9uUENzNG5qNnFlbitQeDV5VWtuR2N2RDI5MjM2dG5OdlV6RVlxM2xmcmZEMXE1YzVyTTh0TVJ2RVJNem43WjlKUXVTY1cxSk5OZXpQdXVtMjJMZFZVNXFQcTR4YjBXdnFqcHZINXpEakdWY2FzcUxUamFsM1MzM1QrYTF2OHpMbTVQSGRLOEpHWGxPR0xXMVhHRlVVNVNiL0FIZnEyMldlYWlZakVic1UrR3FyZGRVM2JrUlJFWnpqL0hzaDhhYlp4VW8xemtuN3FMWnovRDNmK0d6L0FHc3ZlTlppMWNWSEtvclZlTTYza0tQaDEyYThiN2UzcXpvZElaLzgwNmR4YjdHcFcrRjEyUDhBMUxzUjVxY1RQSzdqdzNSejAyNXZiekV6MDlNZS91aU5kVmxtL0xoS1d2WHdyWnhPRXEzcWNaUmZ5YTBXYnBqQW82YjZkdHR5ZFFlNVhYU2ZzdlpmcHI4MlNibStSczViazc4eTdzN0pmREgvQUN4OWtYVzd2eEtwaUkyaDVPdTRiR2lzMFZWMWZYVjJ4MGo3dWdBQzU1UUFBQUFBRzkvWnJ5bkc4VlRuVDVETGhUWmJLQ2lwSnZzdC9KZlUwUUhGeWlLNmVXV3JSYXVyUjNvdlVSRXpIcit5aVpuVXVISHIvR3phY21NOEZVS2lkaVQwazl2OGV6YVBucnZxWER6TGVNcjQ3SWpkWFZhcnJKUlRXbW10ZXEvRW5vT0lzVXhNVDZOdGZHcjlkdTVieEdLNXo5dW0wZTJ5MGNoMVB3T1RqdXYrWlZQNDR6WHd5OVl5VWw3ZlF4Y3QxcHhXUGhPM0N5NjhpNk1vL3dCSktTY28rSmIxdGZMWkhBVnhwS1BWc3I4VGFtck9LYVltWXhuZitWbm4xSjAzeW1HbGw1R1BPdnRKMVpFTzZmNE5mc2RiZ3VwdUV4OFc2RTgycWxQSXRsR0NoSkpSY25yU1MrUklRVDVXbkdNeWo1azFIUEZmSlRtSXgzL2x0VlBVTWVNNjJ6ZVN4LzYrTGJiTlMxMjhkYmU5cmY0Si9rYjYrb3VtdVNoVGJrNUdOS1ZUOGNGZkQ0b1A2Ylg3RVlCMVhwNmFzU3phWGpkL1RSVlRpS3FhcHppZlZaNGRhOEZaa1NvZVUxRmY5eVZiOEVqaW5rK2xlTGxaazR0MkRWWk5mRTZWdVQrbWw2RVpCeDVTbnRNdGZ6TGZuZXVpbVpqcE9KMi9LbzRIV09EbmRSenZ5TGxpNFdQVEtGUG1KN25LVFc1ZHZUc2o0NTNuK0x6ZXBlRGxETnJsaVkwcDIyV2Flb3ZYWmVuMC91VEVIWGw2WW5NTTg4ZTFGVkhKWEVUbVltZXZhWW5IWHB0RWZaUy90QjZoNDdPNEZZL0g1ZGQ5azdZK0tNZDlvcmIzM1h6U01QMmRkUzRPRnhzOERrTG8wU2hOenJuTDdzay9iZnozdjlTZEFueTlQSnlPSjQzZm5WeHE4Um5HTWRzTExUMU4wMVh5R1RPdStpdTZTWG1YcXRyelBwdExiT3RIcVhocGRUV1pVOCt0VXd4RlZDWGhsM2NwN2w3ZjZZL3FTTUhQbGFmV1dpZkVtb25FY2xPMDU3L3lwUFVQVjJIWDFMeFdWaDJySnhxSVRWbmdUWDMrejF2WGZTVFBXNURsdW1lWnJ4N01ya1ZHTk12R29lS1VHL28xNnNrQUo4dFR0aWVpdW5qOS9OZlBUVFZGVTV4UFR0SHI3UTN6UDUvaWNYbHNIL0QySFpaT3U1T2RpbE51YTlQQkZOOTk3K1J0ZDNVL0I1MU1LRTQ1bHRzbEdPTEtsdHVXK3lhYTB1LzZFdTZZNUtqaU9ZcHpNbkhsa1JyVDhNVkxYaGYrYjY2N20rUHI3aFkyUElqZ1hmeERYM3ZMZ3BmN3RsVjIxdkVSRXorcjBlRzhUaWFhNnJseW1qTS8wOHUwUjdkUHpsc1BXT1FzWHBma0p0K0hkVHJYL3Q4UC9KcnYyVFJ5bzhabU95T3NTVmlkVGZ2TFdwYStuM1RVZXF1cXNubjV3cmNQSXdvUGFxaTl0djV0KzdQYXh2dEFyd3VPamlZUEZLcU5kZmdyYnYyazlkbS9oNzkrNUh3YTR0OHNSdksyZUxhVzdyNDFGVmVLYUl4RzAvVk0vcDArL3N5ZmFoenF0dGp4R05QY0sycFh0ZTh2YVA1ZXY0NitSUGo3dXRuZGJPMjJUblpOdVVwUDFiWjhHdTNSRkZQTEQ1alg2eXJXWDZyMVhmcDdSMkFBZHNZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS85az0DCAAAil14RWMBBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAQgBAAAAAAIZCwAHAAcBBwIHAwcEEQc4AAoBOAEMAgwDDQMHBQoBLhEGCwE4AgsDBwY4AwsCOAQCAA=="
  },
  "typeOriginTable": [
    {
      "module_name": "mstr",
      "datatype_name": "MSTR",
      "package": "0xe41bf35eec0a9f2f452dedbafa3e19bd4dd82f4afbd8a709d517dcb3f943be21"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "mstr": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe41bf35eec0a9f2f452dedbafa3e19bd4dd82f4afbd8a709d517dcb3f943be21::mstr::MSTR",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}