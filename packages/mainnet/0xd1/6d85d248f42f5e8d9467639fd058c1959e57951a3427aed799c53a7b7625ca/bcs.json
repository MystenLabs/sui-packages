{
  "dataType": "package",
  "id": "0xd16d85d248f42f5e8d9467639fd058c1959e57951a3427aed799c53a7b7625ca",
  "version": 1,
  "moduleMap": {
    "bailey": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bailey",
      "datatype_name": "BAILEY",
      "package": "0xd16d85d248f42f5e8d9467639fd058c1959e57951a3427aed799c53a7b7625ca"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}