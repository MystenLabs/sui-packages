{
  "dataType": "package",
  "id": "0xd15cc084154d2d3db3244399c6010f2931fad6f6dee9da3ff8a91e1297ab86fb",
  "version": 1,
  "moduleMap": {
    "puccn": ""
  },
  "typeOriginTable": [
    {
      "module_name": "puccn",
      "datatype_name": "PUCCN",
      "package": "0xd15cc084154d2d3db3244399c6010f2931fad6f6dee9da3ff8a91e1297ab86fb"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 4
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 19
    }
  },
  "functionMap": {
    "puccn": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xd15cc084154d2d3db3244399c6010f2931fad6f6dee9da3ff8a91e1297ab86fb::puccn::PUCCN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}