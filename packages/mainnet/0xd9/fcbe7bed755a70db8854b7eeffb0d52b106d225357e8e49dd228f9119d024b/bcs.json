{
  "dataType": "package",
  "id": "0xd9fcbe7bed755a70db8854b7eeffb0d52b106d225357e8e49dd228f9119d024b",
  "version": 1,
  "moduleMap": {
    "hoppy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "hoppy",
      "datatype_name": "HOPPY",
      "package": "0xd9fcbe7bed755a70db8854b7eeffb0d52b106d225357e8e49dd228f9119d024b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}