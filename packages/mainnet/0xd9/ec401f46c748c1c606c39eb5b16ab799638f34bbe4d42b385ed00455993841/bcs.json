{
  "dataType": "package",
  "id": "0xd9ec401f46c748c1c606c39eb5b16ab799638f34bbe4d42b385ed00455993841",
  "version": 1,
  "moduleMap": {
    "mythic": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mythic",
      "datatype_name": "MYTHIC",
      "package": "0xd9ec401f46c748c1c606c39eb5b16ab799638f34bbe4d42b385ed00455993841"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 6
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 21
    }
  }
}