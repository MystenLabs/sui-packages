{
  "dataType": "package",
  "id": "0xd9ae2f27c946de45559784c294ce81a36d47d106eda36c77cdc9bc1462f4adfe",
  "version": 1,
  "moduleMap": {
    "emc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "emc",
      "datatype_name": "EMC",
      "package": "0xd9ae2f27c946de45559784c294ce81a36d47d106eda36c77cdc9bc1462f4adfe"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}