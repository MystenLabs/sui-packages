{
  "dataType": "package",
  "id": "0x80b7da8ce6a494331e60fab119ba8df10b6be7337473bf66051d771d9a0c6091",
  "version": 1,
  "moduleMap": {
    "pipet": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pipet",
      "datatype_name": "PIPET",
      "package": "0x80b7da8ce6a494331e60fab119ba8df10b6be7337473bf66051d771d9a0c6091"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "pipet": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x80b7da8ce6a494331e60fab119ba8df10b6be7337473bf66051d771d9a0c6091::pipet::PIPET",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}