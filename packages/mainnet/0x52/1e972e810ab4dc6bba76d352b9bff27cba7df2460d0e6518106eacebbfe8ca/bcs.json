{
  "dataType": "package",
  "id": "0x521e972e810ab4dc6bba76d352b9bff27cba7df2460d0e6518106eacebbfe8ca",
  "version": 1,
  "moduleMap": {
    "bpug": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bpug",
      "datatype_name": "BPUG",
      "package": "0x521e972e810ab4dc6bba76d352b9bff27cba7df2460d0e6518106eacebbfe8ca"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "bpug": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x521e972e810ab4dc6bba76d352b9bff27cba7df2460d0e6518106eacebbfe8ca::bpug::BPUG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}