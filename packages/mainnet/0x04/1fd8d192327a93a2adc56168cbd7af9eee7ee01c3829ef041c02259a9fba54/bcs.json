{
  "dataType": "package",
  "id": "0x041fd8d192327a93a2adc56168cbd7af9eee7ee01c3829ef041c02259a9fba54",
  "version": 1,
  "moduleMap": {
    "racc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "racc",
      "datatype_name": "RACC",
      "package": "0x041fd8d192327a93a2adc56168cbd7af9eee7ee01c3829ef041c02259a9fba54"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "racc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x041fd8d192327a93a2adc56168cbd7af9eee7ee01c3829ef041c02259a9fba54::racc::RACC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}