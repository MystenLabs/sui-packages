{
  "dataType": "package",
  "id": "0x5aa93f071ffbb12c6f948087945a45b70f63f05547ad5f6a41257dd932e04a04",
  "version": 1,
  "moduleMap": {
    "mog": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mog",
      "datatype_name": "MOG",
      "package": "0x5aa93f071ffbb12c6f948087945a45b70f63f05547ad5f6a41257dd932e04a04"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "mog": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5aa93f071ffbb12c6f948087945a45b70f63f05547ad5f6a41257dd932e04a04::mog::MOG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}