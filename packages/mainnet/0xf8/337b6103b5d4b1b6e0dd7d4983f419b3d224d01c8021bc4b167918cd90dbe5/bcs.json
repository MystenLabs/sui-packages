{
  "dataType": "package",
  "id": "0xf8337b6103b5d4b1b6e0dd7d4983f419b3d224d01c8021bc4b167918cd90dbe5",
  "version": 1,
  "moduleMap": {
    "abudhabi": ""
  },
  "typeOriginTable": [
    {
      "module_name": "abudhabi",
      "datatype_name": "ABUDHABI",
      "package": "0xf8337b6103b5d4b1b6e0dd7d4983f419b3d224d01c8021bc4b167918cd90dbe5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  }
}