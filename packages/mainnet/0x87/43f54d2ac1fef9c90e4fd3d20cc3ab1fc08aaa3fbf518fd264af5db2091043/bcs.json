{
  "dataType": "package",
  "id": "0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043",
  "version": 1,
  "moduleMap": {
    "chimp": ""
  },
  "typeOriginTable": [
    {
      "module_name": "chimp",
      "datatype_name": "CHIMP",
      "package": "0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "chimp": {
      "addToDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043::chimp::CHIMP>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043::chimp::CHIMP",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "mint": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::TreasuryCap<0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043::chimp::CHIMP>",
          "address",
          "u64",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "removeFromDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x8743f54d2ac1fef9c90e4fd3d20cc3ab1fc08aaa3fbf518fd264af5db2091043::chimp::CHIMP>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}