{
  "dataType": "package",
  "id": "0x87ee6677b1271fc201909906e46830f767b9620365ceb1b84705b5dce929aac1",
  "version": 1,
  "moduleMap": {
    "drip": ""
  },
  "typeOriginTable": [
    {
      "module_name": "drip",
      "datatype_name": "DRIP",
      "package": "0x87ee6677b1271fc201909906e46830f767b9620365ceb1b84705b5dce929aac1"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 5
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 20
    }
  }
}