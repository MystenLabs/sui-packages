{
  "dataType": "package",
  "id": "0xfcf51b0555cd5b4b1e040e27be7bc0ac6d118b3c31f6162766a1193222b26adf",
  "version": 1,
  "moduleMap": {
    "popkins": ""
  },
  "typeOriginTable": [
    {
      "module_name": "popkins",
      "datatype_name": "POPKINS",
      "package": "0xfcf51b0555cd5b4b1e040e27be7bc0ac6d118b3c31f6162766a1193222b26adf"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "popkins": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xfcf51b0555cd5b4b1e040e27be7bc0ac6d118b3c31f6162766a1193222b26adf::popkins::POPKINS",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}