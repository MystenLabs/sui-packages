{
  "dataType": "package",
  "id": "0xcd76f18319ba22330cc4a40db4b3c3d1ab24bd0b656bc663f4f5306e94fc3d94",
  "version": 1,
  "moduleMap": {
    "pok": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pok",
      "datatype_name": "POK",
      "package": "0xcd76f18319ba22330cc4a40db4b3c3d1ab24bd0b656bc663f4f5306e94fc3d94"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 15
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 33
    }
  },
  "functionMap": {
    "pok": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xcd76f18319ba22330cc4a40db4b3c3d1ab24bd0b656bc663f4f5306e94fc3d94::pok::POK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}