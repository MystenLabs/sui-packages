module 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::sub(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::sub(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::div(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::mul(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1)), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(v0)))), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::sub(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::div(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::mul(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0)), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::add(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::sub(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::div(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::mul(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg1)), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::as_u64(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::add(0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg0), 0xcd1659fc82acb45eff40f8fac0f15e0c7da96df9f917a65d9337bd94dce5b04f::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

