{
  "dataType": "package",
  "id": "0x4798fa400d150f4bdf4af01aa43865d595cd58ed15ee72239c2e273f4e5b1924",
  "version": 1,
  "moduleMap": {
    "trump": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trump",
      "datatype_name": "TRUMP",
      "package": "0x4798fa400d150f4bdf4af01aa43865d595cd58ed15ee72239c2e273f4e5b1924"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "trump": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x4798fa400d150f4bdf4af01aa43865d595cd58ed15ee72239c2e273f4e5b1924::trump::TRUMP",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}