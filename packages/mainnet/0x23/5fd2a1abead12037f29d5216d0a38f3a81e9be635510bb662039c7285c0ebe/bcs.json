{
  "dataType": "package",
  "id": "0x235fd2a1abead12037f29d5216d0a38f3a81e9be635510bb662039c7285c0ebe",
  "version": 1,
  "moduleMap": {
    "rug": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rug",
      "datatype_name": "RUG",
      "package": "0x235fd2a1abead12037f29d5216d0a38f3a81e9be635510bb662039c7285c0ebe"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  },
  "functionMap": {
    "rug": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x235fd2a1abead12037f29d5216d0a38f3a81e9be635510bb662039c7285c0ebe::rug::RUG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}