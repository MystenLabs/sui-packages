{
  "dataType": "package",
  "id": "0xca3897c7e169023f74d4222bef6bedbb29922572db9dc4ba686ecadc5cb0fa34",
  "version": 1,
  "moduleMap": {
    "pza": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pza",
      "datatype_name": "PZA",
      "package": "0xca3897c7e169023f74d4222bef6bedbb29922572db9dc4ba686ecadc5cb0fa34"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "pza": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xca3897c7e169023f74d4222bef6bedbb29922572db9dc4ba686ecadc5cb0fa34::pza::PZA",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}