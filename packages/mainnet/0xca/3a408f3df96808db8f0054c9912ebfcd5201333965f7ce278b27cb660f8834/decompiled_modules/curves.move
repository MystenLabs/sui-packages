module 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::sub(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::sub(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::div(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::mul(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1)), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(v0)))), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::sub(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::div(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::mul(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0)), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::add(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::sub(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::div(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::mul(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg1)), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::as_u64(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::add(0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg0), 0xca3a408f3df96808db8f0054c9912ebfcd5201333965f7ce278b27cb660f8834::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

