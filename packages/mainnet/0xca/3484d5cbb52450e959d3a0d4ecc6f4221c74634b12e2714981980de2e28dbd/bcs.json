{
  "dataType": "package",
  "id": "0xca3484d5cbb52450e959d3a0d4ecc6f4221c74634b12e2714981980de2e28dbd",
  "version": 1,
  "moduleMap": {
    "geco": ""
  },
  "typeOriginTable": [
    {
      "module_name": "geco",
      "datatype_name": "GECO",
      "package": "0xca3484d5cbb52450e959d3a0d4ecc6f4221c74634b12e2714981980de2e28dbd"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  }
}