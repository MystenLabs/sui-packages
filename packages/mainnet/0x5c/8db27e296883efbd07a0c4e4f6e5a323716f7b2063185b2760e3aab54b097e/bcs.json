{
  "dataType": "package",
  "id": "0x5c8db27e296883efbd07a0c4e4f6e5a323716f7b2063185b2760e3aab54b097e",
  "version": 1,
  "moduleMap": {
    "rod": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rod",
      "datatype_name": "ROD",
      "package": "0x5c8db27e296883efbd07a0c4e4f6e5a323716f7b2063185b2760e3aab54b097e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 15
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 33
    }
  },
  "functionMap": {
    "rod": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5c8db27e296883efbd07a0c4e4f6e5a323716f7b2063185b2760e3aab54b097e::rod::ROD",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}