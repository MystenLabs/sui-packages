{
  "dataType": "package",
  "id": "0xe2548f287f986b205d5a0f6b24095c81f2952e402c1ad05c5fdd788c03236be4",
  "version": 1,
  "moduleMap": {
    "dgg": ""
  },
  "typeOriginTable": [
    {
      "module_name": "dgg",
      "datatype_name": "DGG",
      "package": "0xe2548f287f986b205d5a0f6b24095c81f2952e402c1ad05c5fdd788c03236be4"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  },
  "functionMap": {
    "dgg": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xe2548f287f986b205d5a0f6b24095c81f2952e402c1ad05c5fdd788c03236be4::dgg::DGG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}