module 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::test {
    fun check_profit_arb(arg0: u64, arg1: u64, arg2: u128) : bool {
        arg1 < ((arg2 * (arg0 as u128) >> 64) as u64)
    }

    fun compute_multiple(arg0: u128, arg1: u128, arg2: u128, arg3: u64) : u64 {
        let v0 = 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::arithmetic::mul_128(arg2, arg1);
        (((arg3 as u128) * (0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::arithmetic::mul_128(arg0, arg1) - v0) / (0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::arithmetic::mul_128(arg0, arg2) - v0)) as u64) - (arg3 as u64) >> 1
    }

    public fun find_best_arb<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(arg0: u64, arg1: u64, arg2: u64, arg3: u128, arg4: u128, arg5: u64, arg6: u64, arg7: 0x2::coin::Coin<T0>, arg8: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2::sui::SUI>, arg9: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg10: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg11: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg12: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T10, 0x2::sui::SUI>, arg13: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, T8>, arg14: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg15: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg16: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, 0x2::sui::SUI>, arg17: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg18: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, T5>, arg19: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg20: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg21: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg22: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, T8>, arg23: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T4>, arg24: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, T8>, arg25: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, T8>, arg26: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg27: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg28: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T3>, arg29: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, T8>, arg30: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg31: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, T6>, arg32: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, 0x2::sui::SUI>, arg33: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg34: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T7, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg35: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg36: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T10, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg37: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg38: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T1, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg39: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg40: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg41: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T9, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg42: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T2, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg43: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg44: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg45: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T6, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg46: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg47: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Versioned, arg48: &0x2::clock::Clock, arg49: &0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::fee::Fee, arg50: &mut 0x2::tx_context::TxContext) : 0x2::coin::Coin<T0> {
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::fee::check_fee(1, 0x2::tx_context::sender(arg50), arg49);
        let v0 = find_route<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(arg0, arg0, arg1, arg2, 1, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45);
        let v1 = *0x1::vector::borrow<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::Route>(&v0, 0);
        let v2 = 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::get_route_sqrt_price(&v1);
        if (v2 < arg3) {
            abort 9
        };
        let v3 = 0x2::coin::value<T0>(&arg7);
        let v4 = if (v3 / arg5 < arg6) {
            v3 / arg5
        } else {
            arg6
        };
        let v5 = vector[];
        let v6 = 18446744073709551616;
        let v7 = 1;
        let v8 = 0x2::coin::split<T0>(&mut arg7, arg5, arg50);
        0x1::vector::push_back<u64>(&mut v5, arg5);
        let v9 = &mut v6;
        let v10 = swap_route_static<T0, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(v9, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::get_route_route(&v1), v8, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg50);
        let v11 = arg5;
        let v12 = 0x2::coin::value<T0>(&v10);
        0x2::coin::join<T0>(&mut arg7, v10);
        assert!(0x2::coin::value<T0>(&arg7) >= v3, 31);
        while (v6 > arg3) {
            let v13 = compute_multiple(v2, v6, arg3, v7);
            let v14 = if (v13 <= v4) {
                v13
            } else {
                v4
            };
            v7 = v14;
            if (v14 < 1) {
                break
            };
            let v15 = v14 * arg5;
            let v16 = 0x2::coin::split<T0>(&mut arg7, v15, arg50);
            0x1::vector::push_back<u64>(&mut v5, v15);
            v2 = v6;
            v6 = 18446744073709551616;
            let v17 = &mut v6;
            let v18 = swap_route_static<T0, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(v17, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::get_route_route(&v1), v16, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg50);
            v11 = v11 + v15;
            v12 = v12 + 0x2::coin::value<T0>(&v18);
            0x2::coin::join<T0>(&mut arg7, v18);
            assert!(0x2::coin::value<T0>(&arg7) >= v3, 13);
        };
        let v19 = 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::fee::get_fee(arg49);
        let v20 = if (v19 == 0) {
            0
        } else {
            v12 / v19
        };
        if (check_profit_arb(v11, v12 - v20, arg4)) {
            abort 99
        };
        if (v19 > 0) {
            0x2::pay::split_and_transfer<T0>(&mut arg7, v20, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::fee::get_recipient(arg49), arg50);
        };
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::data::emit_data(0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::data::data_arb_new(0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::data::input_arb_new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, v3), 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::get_route_route(&v1), 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::get_route_sqrt_price(&v1), v5, v6, v12 - v11, v20));
        arg7
    }

    public fun find_prices<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2::sui::SUI>, arg1: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg2: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg3: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2::sui::SUI>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, T7>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg8: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg9: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg10: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T4>, arg11: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg12: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg13: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg14: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, T7>, arg15: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T3>, arg16: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T7>, arg17: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, T7>, arg18: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg19: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg20: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, T2>, arg21: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T7>, arg22: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2::sui::SUI>, arg23: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T5>, arg24: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg25: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg26: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T6, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg27: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T6, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg28: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg29: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg30: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T0, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg31: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg32: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg33: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T8, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg34: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T1, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg35: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg36: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg37: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>) : vector<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode> {
        let v0 = 0x1::vector::empty<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>();
        let v1 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v2 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T7, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v1, 0), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v2, 0), 1), 0, arg0);
        let v3 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v4 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v3, 1), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v4, 1), 1), 1, arg1);
        let v5 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v6 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v5, 2), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v6, 2), 1), 2, arg2);
        let v7 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v8 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v7, 3), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v8, 3), 1), 3, arg3);
        let v9 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v10 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T9, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v9, 4), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v10, 4), 1), 4, arg4);
        let v11 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v12 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T6, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v11, 5), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v12, 5), 1), 5, arg5);
        let v13 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v14 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v13, 6), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v14, 6), 1), 6, arg6);
        let v15 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v16 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v15, 7), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v16, 7), 1), 7, arg7);
        let v17 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v18 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T5, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v17, 8), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v18, 8), 1), 8, arg8);
        let v19 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v20 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v19, 9), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v20, 9), 1), 9, arg9);
        let v21 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v22 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v21, 10), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v22, 10), 1), 10, arg10);
        let v23 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v24 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v23, 11), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v24, 11), 1), 11, arg11);
        let v25 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v26 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T1, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v25, 12), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v26, 12), 1), 12, arg12);
        let v27 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v28 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v27, 13), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v28, 13), 1), 13, arg13);
        let v29 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v30 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T4, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v29, 14), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v30, 14), 1), 14, arg14);
        let v31 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v32 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T3>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v31, 15), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v32, 15), 1), 15, arg15);
        let v33 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v34 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T8, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v33, 16), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v34, 16), 1), 16, arg16);
        let v35 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v36 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T3, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v35, 17), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v36, 17), 1), 17, arg17);
        let v37 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v38 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v37, 18), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v38, 18), 1), 18, arg18);
        let v39 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v40 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T7, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v39, 19), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v40, 19), 1), 19, arg19);
        let v41 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v42 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T7, T2>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v41, 20), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v42, 20), 1), 20, arg20);
        let v43 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v44 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v43, 21), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v44, 21), 1), 21, arg21);
        let v45 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v46 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T4, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v45, 22), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v46, 22), 1), 22, arg22);
        let v47 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v48 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, T5>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v47, 23), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v48, 23), 1), 23, arg23);
        let v49 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v50 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T2, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v49, 24), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v50, 24), 1), 24, arg24);
        let v51 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v52 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices<T0, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v51, 25), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v52, 25), 1), 25, arg25);
        let v53 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v54 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<T6, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v53, 26), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v54, 26), 1), 26, arg26);
        let v55 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v56 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0x2::sui::SUI, T6, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v55, 27), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v56, 27), 1), 27, arg27);
        let v57 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v58 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v57, 28), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v58, 28), 1), 28, arg28);
        let v59 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v60 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v59, 29), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v60, 29), 1), 29, arg29);
        let v61 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v62 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0x2::sui::SUI, T0, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v61, 30), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v62, 30), 1), 30, arg30);
        let v63 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v64 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v63, 31), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v64, 31), 1), 31, arg31);
        let v65 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v66 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v65, 32), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v66, 32), 1), 32, arg32);
        let v67 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v68 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<T8, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v67, 33), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v68, 33), 1), 33, arg33);
        let v69 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v70 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<T1, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v69, 34), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v70, 34), 1), 34, arg34);
        let v71 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v72 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v71, 35), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v72, 35), 1), 35, arg35);
        let v73 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v74 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v73, 36), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v74, 36), 1), 36, arg36);
        let v75 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v76 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v75, 37), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v76, 37), 1), 37, arg37);
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::emit_prices(v0);
        v0
    }

    public fun find_prices_no_fee<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2::sui::SUI>, arg1: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg2: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg3: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2::sui::SUI>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, T7>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg8: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg9: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg10: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T4>, arg11: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg12: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg13: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg14: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, T7>, arg15: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T3>, arg16: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T7>, arg17: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, T7>, arg18: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg19: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg20: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, T2>, arg21: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T7>, arg22: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2::sui::SUI>, arg23: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T5>, arg24: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg25: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg26: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T6, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg27: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T6, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg28: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg29: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg30: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T0, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg31: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg32: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg33: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T8, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg34: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T1, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg35: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg36: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg37: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>) : vector<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode> {
        let v0 = 0x1::vector::empty<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>();
        let v1 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v2 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T7, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v1, 0), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v2, 0), 1), 0, arg0);
        let v3 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v4 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v3, 1), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v4, 1), 1), 1, arg1);
        let v5 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v6 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v5, 2), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v6, 2), 1), 2, arg2);
        let v7 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v8 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v7, 3), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v8, 3), 1), 3, arg3);
        let v9 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v10 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T9, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v9, 4), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v10, 4), 1), 4, arg4);
        let v11 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v12 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T6, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v11, 5), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v12, 5), 1), 5, arg5);
        let v13 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v14 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v13, 6), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v14, 6), 1), 6, arg6);
        let v15 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v16 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v15, 7), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v16, 7), 1), 7, arg7);
        let v17 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v18 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T5, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v17, 8), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v18, 8), 1), 8, arg8);
        let v19 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v20 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v19, 9), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v20, 9), 1), 9, arg9);
        let v21 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v22 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v21, 10), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v22, 10), 1), 10, arg10);
        let v23 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v24 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v23, 11), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v24, 11), 1), 11, arg11);
        let v25 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v26 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T1, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v25, 12), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v26, 12), 1), 12, arg12);
        let v27 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v28 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v27, 13), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v28, 13), 1), 13, arg13);
        let v29 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v30 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T4, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v29, 14), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v30, 14), 1), 14, arg14);
        let v31 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v32 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T3>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v31, 15), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v32, 15), 1), 15, arg15);
        let v33 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v34 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T8, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v33, 16), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v34, 16), 1), 16, arg16);
        let v35 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v36 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T3, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v35, 17), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v36, 17), 1), 17, arg17);
        let v37 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v38 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v37, 18), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v38, 18), 1), 18, arg18);
        let v39 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v40 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T7, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v39, 19), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v40, 19), 1), 19, arg19);
        let v41 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v42 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T7, T2>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v41, 20), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v42, 20), 1), 20, arg20);
        let v43 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v44 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v43, 21), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v44, 21), 1), 21, arg21);
        let v45 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v46 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T4, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v45, 22), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v46, 22), 1), 22, arg22);
        let v47 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v48 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, T5>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v47, 23), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v48, 23), 1), 23, arg23);
        let v49 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v50 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T2, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v49, 24), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v50, 24), 1), 24, arg24);
        let v51 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v52 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::add_prices_no_fee<T0, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v51, 25), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v52, 25), 1), 25, arg25);
        let v53 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v54 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<T6, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v53, 26), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v54, 26), 1), 26, arg26);
        let v55 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v56 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0x2::sui::SUI, T6, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v55, 27), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v56, 27), 1), 27, arg27);
        let v57 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v58 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v57, 28), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v58, 28), 1), 28, arg28);
        let v59 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v60 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v59, 29), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v60, 29), 1), 29, arg29);
        let v61 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v62 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0x2::sui::SUI, T0, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v61, 30), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v62, 30), 1), 30, arg30);
        let v63 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v64 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v63, 31), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v64, 31), 1), 31, arg31);
        let v65 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v66 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v65, 32), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v66, 32), 1), 32, arg32);
        let v67 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v68 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<T8, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v67, 33), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v68, 33), 1), 33, arg33);
        let v69 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v70 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<T1, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v69, 34), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v70, 34), 1), 34, arg34);
        let v71 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v72 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v71, 35), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v72, 35), 1), 35, arg35);
        let v73 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v74 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v73, 36), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v74, 36), 1), 36, arg36);
        let v75 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        let v76 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::add_prices_no_fee<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v75, 37), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v76, 37), 1), 37, arg37);
        0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::emit_prices(v0);
        v0
    }

    public(friend) fun find_route<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(arg0: u64, arg1: u64, arg2: u64, arg3: u64, arg4: u64, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2::sui::SUI>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg8: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg9: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2::sui::SUI>, arg10: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, T7>, arg11: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg12: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg13: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg14: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg15: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T4>, arg16: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg17: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg18: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg19: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, T7>, arg20: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T3>, arg21: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T7>, arg22: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, T7>, arg23: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg24: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg25: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, T2>, arg26: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T7>, arg27: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2::sui::SUI>, arg28: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T5>, arg29: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg30: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, 0x2::sui::SUI>, arg31: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T6, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg32: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T6, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg33: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg34: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg35: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T0, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg36: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg37: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg38: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T8, T7, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg39: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T1, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg40: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg41: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg42: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>) : vector<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::Route> {
        let v0 = find_prices<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42);
        let v1 = 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::new_state(arg0, 18);
        let v2 = 0;
        while (v2 < arg3) {
            0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::evolve(&mut v1, &v0, arg4, arg2);
            v2 = v2 + 1;
        };
        *0x1::vector::borrow<vector<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::Route>>(&v1, arg1)
    }

    public(friend) fun swap_route_static<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(arg0: &mut u128, arg1: vector<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>, arg2: 0x2::coin::Coin<T0>, arg3: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2::sui::SUI>, arg4: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg5: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg6: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg7: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T11, 0x2::sui::SUI>, arg8: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T9>, arg9: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg10: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg11: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, 0x2::sui::SUI>, arg12: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg13: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, T6>, arg14: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg15: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, 0x2::sui::SUI>, arg16: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg17: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, T9>, arg18: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T5>, arg19: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T10, T9>, arg20: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, T9>, arg21: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg22: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg23: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, T4>, arg24: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, T9>, arg25: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, 0x2::sui::SUI>, arg26: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, T7>, arg27: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2::sui::SUI>, arg28: &mut 0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, 0x2::sui::SUI>, arg29: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T8, T9, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg30: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg31: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T11, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg32: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg33: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T2, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg34: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T9, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg35: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg36: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T10, T9, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg37: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T3, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg38: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg39: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg40: &mut 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T7, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg41: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::config::GlobalConfig, arg42: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Versioned, arg43: &0x2::clock::Clock, arg44: &mut 0x2::tx_context::TxContext) : 0x2::coin::Coin<T1> {
        let v0 = &arg1;
        let v1 = vector[];
        let v2 = 0;
        while (v2 < 0x1::vector::length<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v0)) {
            0x1::vector::push_back<u16>(&mut v1, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::price_node_arg(0x1::vector::borrow<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v0, v2)));
            v2 = v2 + 1;
        };
        let v3 = &arg1;
        let v4 = vector[];
        let v5 = 0;
        while (v5 < 0x1::vector::length<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v3)) {
            0x1::vector::push_back<u64>(&mut v4, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::price_node_from(0x1::vector::borrow<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v3, v5)));
            v5 = v5 + 1;
        };
        let v6 = vector[];
        let v7 = 0;
        while (v7 < 0x1::vector::length<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(&arg1)) {
            let v8 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
            let v9 = *0x1::vector::borrow<vector<u64>>(&v8, (*0x1::vector::borrow<u16>(&v1, v7) as u64));
            let v10 = 0;
            loop {
                if (*0x1::vector::borrow<u64>(&v9, v10) == *0x1::vector::borrow<u64>(&v4, v7)) {
                    break
                };
                v10 = v10 + 1;
            };
            0x1::vector::push_back<u16>(&mut v6, (v10 as u16));
            v7 = v7 + 1;
        };
        let v11 = &arg1;
        let v12 = vector[];
        let v13 = 0;
        while (v13 < 0x1::vector::length<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v11)) {
            0x1::vector::push_back<u64>(&mut v12, 0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::price_node_to(0x1::vector::borrow<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(v11, v13)));
            v13 = v13 + 1;
        };
        let v14 = vector[];
        let v15 = 0;
        while (v15 < 0x1::vector::length<0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::paths::PriceNode>(&arg1)) {
            let v16 = vector[vector[7, 1], vector[0, 1], vector[2, 0], vector[2, 1], vector[9, 1], vector[6, 7], vector[10, 1], vector[12, 1], vector[4, 1], vector[10, 0], vector[10, 17], vector[10, 5], vector[11, 1], vector[10, 3], vector[17, 7], vector[5, 15], vector[8, 7], vector[15, 7], vector[13, 1], vector[7, 3], vector[7, 14], vector[10, 7], vector[17, 1], vector[10, 4], vector[14, 1], vector[10, 1], vector[6, 7], vector[1, 6], vector[9, 1], vector[12, 1], vector[1, 10], vector[1, 7], vector[16, 1], vector[8, 7], vector[11, 1], vector[13, 1], vector[0, 16], vector[4, 1]];
            let v17 = *0x1::vector::borrow<vector<u64>>(&v16, (*0x1::vector::borrow<u16>(&v1, v15) as u64));
            let v18 = 0;
            loop {
                if (*0x1::vector::borrow<u64>(&v17, v18) == *0x1::vector::borrow<u64>(&v12, v15)) {
                    break
                };
                v18 = v18 + 1;
            };
            0x1::vector::push_back<u16>(&mut v14, (v18 as u16));
            v15 = v15 + 1;
        };
        let v19 = 0;
        let v20 = 0x2::bag::new(arg44);
        0x2::bag::add<vector<u8>, 0x2::coin::Coin<T0>>(&mut v20, b"", arg2);
        while (v19 < 0x1::vector::length<u16>(&v1)) {
            let v21 = *0x1::vector::borrow<u16>(&v1, v19);
            if (v21 == 0) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T9, 0x2::sui::SUI>(arg0, &mut v20, arg3, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 1) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>(arg0, &mut v20, arg4, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 2) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(arg0, &mut v20, arg5, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 3) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>(arg0, &mut v20, arg6, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 4) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T11, 0x2::sui::SUI>(arg0, &mut v20, arg7, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 5) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T8, T9>(arg0, &mut v20, arg8, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 6) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, 0x2::sui::SUI>(arg0, &mut v20, arg9, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 7) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(arg0, &mut v20, arg10, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 8) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T7, 0x2::sui::SUI>(arg0, &mut v20, arg11, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 9) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(arg0, &mut v20, arg12, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 10) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, T6>(arg0, &mut v20, arg13, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 11) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>(arg0, &mut v20, arg14, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 12) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T3, 0x2::sui::SUI>(arg0, &mut v20, arg15, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 13) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(arg0, &mut v20, arg16, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 14) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T6, T9>(arg0, &mut v20, arg17, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 15) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T5>(arg0, &mut v20, arg18, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 16) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T10, T9>(arg0, &mut v20, arg19, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 17) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T5, T9>(arg0, &mut v20, arg20, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 18) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>(arg0, &mut v20, arg21, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 19) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T9, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(arg0, &mut v20, arg22, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 20) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T9, T4>(arg0, &mut v20, arg23, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 21) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, T9>(arg0, &mut v20, arg24, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 22) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T6, 0x2::sui::SUI>(arg0, &mut v20, arg25, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 23) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, T7>(arg0, &mut v20, arg26, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 24) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T4, 0x2::sui::SUI>(arg0, &mut v20, arg27, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 25) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::cetus::swap_bag<T2, 0x2::sui::SUI>(arg0, &mut v20, arg28, *0x1::vector::borrow<u16>(&v6, v19), arg41, arg43, arg44);
            } else if (v21 == 26) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS, T8, T9>(arg0, &mut v20, arg29, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 27) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS, 0x2::sui::SUI, T8>(arg0, &mut v20, arg30, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 28) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS, T11, 0x2::sui::SUI>(arg0, &mut v20, arg31, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 29) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS, 0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(arg0, &mut v20, arg32, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 30) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS, 0x2::sui::SUI, T2>(arg0, &mut v20, arg33, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 31) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS, 0x2::sui::SUI, T9>(arg0, &mut v20, arg34, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 32) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI>(arg0, &mut v20, arg35, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 33) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS, T10, T9>(arg0, &mut v20, arg36, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 34) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS, T3, 0x2::sui::SUI>(arg0, &mut v20, arg37, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 35) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS, 0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>(arg0, &mut v20, arg38, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 36) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS>(arg0, &mut v20, arg39, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            } else if (v21 == 37) {
                0x51c8d6fee9336237cd56584aecaef70479a8ea23ee1245788680900ca38d7026::turbos::swap_bag<0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS, T7, 0x2::sui::SUI>(arg0, &mut v20, arg40, *0x1::vector::borrow<u16>(&v6, v19), arg42, arg43, arg44);
            };
            v19 = v19 + 1;
        };
        0x2::bag::destroy_empty(v20);
        0x2::bag::remove<vector<u8>, 0x2::coin::Coin<T1>>(&mut v20, b"")
    }

    // decompiled from Move bytecode v6
}

