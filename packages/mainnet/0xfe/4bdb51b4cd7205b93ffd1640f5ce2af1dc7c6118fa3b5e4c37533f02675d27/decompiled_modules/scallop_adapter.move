module 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::scallop_adapter {
    public entry fun stake<T0>(arg0: &0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::GlobalConfig, arg1: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::ShareSupply<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg2: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::NumberPool<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg3: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::Pool<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg4: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg5: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg6: 0x2::coin::Coin<T0>, arg7: &0x2::clock::Clock, arg8: &mut 0x2::tx_context::TxContext) {
        0x2::coin::value<T0>(&arg6);
        let v0 = supply_to_scallop<T0>(arg4, arg5, arg6, arg7, arg8);
        if (0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::contains_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(arg3)) {
            0x2::coin::join<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>(0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::borrow_mut_rewards_of_specific_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(arg3), v0);
        } else {
            0x2::bag::add<0x1::type_name::TypeName, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::borrow_mut_rewards<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg3), 0x1::type_name::get<0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(), v0);
        };
        let v1 = 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::new_share<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg1, arg2, 0x2::coin::value<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>(&v0), arg8);
        while (!0x1::vector::is_empty<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::StakedPoolShare<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>>(&v1)) {
            0x2::transfer::public_transfer<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::StakedPoolShare<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>>(0x1::vector::pop_back<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::StakedPoolShare<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>>(&mut v1), 0x2::tx_context::sender(arg8));
        };
        0x1::vector::destroy_empty<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::StakedPoolShare<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>>(v1);
    }

    public entry fun create_spool_account<T0>(arg0: &mut 0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::spool::Spool, arg1: &0x2::clock::Clock, arg2: &mut 0x2::tx_context::TxContext) {
        0x2::transfer::public_transfer<0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::spool_account::SpoolAccount<T0>>(0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::user::new_spool_account<T0>(arg0, arg1, arg2), 0x2::tx_context::sender(arg2));
    }

    public entry fun stake_scoin<T0>(arg0: &mut 0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::spool::Spool, arg1: &mut 0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::spool_account::SpoolAccount<T0>, arg2: 0x2::coin::Coin<T0>, arg3: &0x2::clock::Clock, arg4: &0x2::tx_context::TxContext) {
        0xe87f1b2d498106a2c61421cec75b7b5c5e348512b0dc263949a0e7a3c256571a::user::stake<T0>(arg0, arg1, arg2, arg3, arg4);
    }

    public fun supply_to_scallop<T0>(arg0: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg1: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg2: 0x2::coin::Coin<T0>, arg3: &0x2::clock::Clock, arg4: &mut 0x2::tx_context::TxContext) : 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>> {
        0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::mint::mint<T0>(arg0, arg1, arg2, arg3, arg4)
    }

    public entry fun withdraw<T0>(arg0: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::ShareSupply<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg1: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::NumberPool<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg2: &mut 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::Pool<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg3: 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::StakedPoolShare<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>, arg4: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg5: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg6: &0x2::clock::Clock, arg7: &mut 0x2::tx_context::TxContext) {
        assert!(0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::contains_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(arg2), 0);
        let v0 = 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::borrow_mut_rewards_of_specific_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>, 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>>(arg2);
        let v1 = 0x2::coin::split<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>(v0, 0x2::coin::value<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>(v0), arg7);
        let v2 = withdraw_from_scallop<T0>(arg4, arg5, v1, arg6, arg7);
        0x2::transfer::public_transfer<0x2::coin::Coin<T0>>(0x2::coin::split<T0>(&mut v2, 0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::amount<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(&arg3), arg7), 0x2::tx_context::sender(arg7));
        if (0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::contains_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg2)) {
            0x2::coin::join<T0>(0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::borrow_mut_rewards_of_specific_asset<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg2), v2);
        } else {
            0x2::bag::add<0x1::type_name::TypeName, 0x2::coin::Coin<T0>>(0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::borrow_mut_rewards<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg2), 0x1::type_name::get<0x2::coin::Coin<T0>>(), v2);
        };
        0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::staked_share::to_number_pool<0xfe4bdb51b4cd7205b93ffd1640f5ce2af1dc7c6118fa3b5e4c37533f02675d27::pool::SCALLOP_PROTOCOL, 0x2::coin::Coin<T0>, 0x2::coin::Coin<T0>>(arg1, arg0, arg3);
    }

    public fun withdraw_from_scallop<T0>(arg0: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg1: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg2: 0x2::coin::Coin<0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::reserve::MarketCoin<T0>>, arg3: &0x2::clock::Clock, arg4: &mut 0x2::tx_context::TxContext) : 0x2::coin::Coin<T0> {
        0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::redeem::redeem<T0>(arg0, arg1, arg2, arg3, arg4)
    }

    // decompiled from Move bytecode v6
}

