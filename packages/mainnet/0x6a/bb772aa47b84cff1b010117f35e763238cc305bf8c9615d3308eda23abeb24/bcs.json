{
  "dataType": "package",
  "id": "0x6abb772aa47b84cff1b010117f35e763238cc305bf8c9615d3308eda23abeb24",
  "version": 1,
  "moduleMap": {
    "peck": ""
  },
  "typeOriginTable": [
    {
      "module_name": "peck",
      "datatype_name": "PECK",
      "package": "0x6abb772aa47b84cff1b010117f35e763238cc305bf8c9615d3308eda23abeb24"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}