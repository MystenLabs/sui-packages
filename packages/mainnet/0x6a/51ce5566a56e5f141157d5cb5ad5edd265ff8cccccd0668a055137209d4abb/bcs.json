{
  "dataType": "package",
  "id": "0x6a51ce5566a56e5f141157d5cb5ad5edd265ff8cccccd0668a055137209d4abb",
  "version": 1,
  "moduleMap": {
    "m": ""
  },
  "typeOriginTable": [
    {
      "module_name": "m",
      "datatype_name": "M",
      "package": "0x6a51ce5566a56e5f141157d5cb5ad5edd265ff8cccccd0668a055137209d4abb"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 15
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 33
    }
  },
  "functionMap": {
    "m": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x6a51ce5566a56e5f141157d5cb5ad5edd265ff8cccccd0668a055137209d4abb::m::M",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}