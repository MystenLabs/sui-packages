{
  "dataType": "package",
  "id": "0xdae4ac9c13e033c8b6ab9218479f43e3deaeddd15a2919d54e46e44bbfee006b",
  "version": 1,
  "moduleMap": {
    "bluedog": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bluedog",
      "datatype_name": "BLUEDOG",
      "package": "0xdae4ac9c13e033c8b6ab9218479f43e3deaeddd15a2919d54e46e44bbfee006b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}