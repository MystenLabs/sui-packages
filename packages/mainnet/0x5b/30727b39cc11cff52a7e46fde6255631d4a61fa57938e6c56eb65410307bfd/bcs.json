{
  "dataType": "package",
  "id": "0x5b30727b39cc11cff52a7e46fde6255631d4a61fa57938e6c56eb65410307bfd",
  "version": 1,
  "moduleMap": {
    "spepe": ""
  },
  "typeOriginTable": [
    {
      "module_name": "spepe",
      "datatype_name": "SPEPE",
      "package": "0x5b30727b39cc11cff52a7e46fde6255631d4a61fa57938e6c56eb65410307bfd"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "spepe": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5b30727b39cc11cff52a7e46fde6255631d4a61fa57938e6c56eb65410307bfd::spepe::SPEPE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}