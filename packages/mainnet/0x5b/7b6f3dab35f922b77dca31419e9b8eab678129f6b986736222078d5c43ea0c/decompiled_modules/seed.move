module 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::seed {
    public fun consume_seed_receipt<T0, T1, T2>(arg0: &mut 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::Vault<T0, T1, T2>, arg1: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::VaultAcl, arg2: &mut 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt, arg3: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::market::Market, arg4: &mut 0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation::Obligation, arg5: &0x1478a432123e4b3d61878b629f2c692969fdb375644f1251cd278a4b1e7d7cd6::x_oracle::XOracle, arg6: &0xca5a5a62f01c79a104bf4d31669e29daa387f325c241de4edbe30986a9bc8b0d::coin_decimals_registry::CoinDecimalsRegistry, arg7: &0xce7e9b076229e914dc87900323fa122fb6869f39fda82b85770d1aa27f61ad8e::oracle::KriyaOracle, arg8: &0xdf3da4bcc7939caf6486ecc104e1cbd69f97f2025195d270649566301d15eb96::registry::CoinDecimalsRegistry, arg9: &0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_config::IncentiveConfig, arg10: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_pool::IncentivePools, arg11: &mut 0x2875153e09f8145ab63527bc85c00f2bd102e12f9573c47f8cdf1a1cb62934::incentive_account::IncentiveAccounts, arg12: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::obligation_access::ObligationAccessStore, arg13: &0x2::clock::Clock, arg14: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::version::Version, arg15: &0xefe8b36d5b2e43728cc323298626b83177803521d195cfb11e15b910e892fddf::version::Version, arg16: &mut 0x2::tx_context::TxContext) {
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::version::assert_current_version(arg14);
        let v0 = 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::access(arg1);
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u8, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, v0, b"flow_id") == 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::utils::deposit_flow_id(), 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::error::invalid_flow_id());
        assert!(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::object::ID, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, v0, b"vault_id") == 0x2::object::id<0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::Vault<T0, T1, T2>>(arg0), 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::error::invalid_vault());
        let v1 = 0x2::coin::from_balance<T0>(0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T0>, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, v0, b"deposit_balance"), arg16);
        let v2 = 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, 0x2::balance::Balance<T0>, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, v0, b"funds");
        0x2::coin::join<T0>(&mut v1, 0x2::coin::from_balance<T0>(v2, arg16));
        0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::add_data<vector<u8>, 0x2::balance::Balance<T1>, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::access(arg1), b"funds", 0x2::coin::into_balance<T1>(0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::deposit<T0, T1, T2>(arg0, v1, arg15, arg4, arg3, arg6, arg5, 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::remove_data<vector<u8>, u64, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::Access>(arg2, v0, b"repay_amount"), arg9, arg10, arg11, arg12, arg13, arg16)));
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::set_deposits_enabled<T0, T1, T2>(arg0, true);
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::seed<T0, T1, T2>(arg0, 0x2::coin::into_balance<T2>(0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::mint_vt<T0, T1, T2>(arg0, 0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::deposit::calc_vt_shares<T0, T1, T2>(arg0, arg7, arg8, arg4, ((((0x2::coin::value<T0>(&v1) + 0x2::balance::value<T0>(&v2)) as u128) * (0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::leverage_scaling() as u128) / (0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::leverage<T0, T1, T2>(arg0) as u128)) as u64), arg13), arg16)));
    }

    public fun issue_seed_receipt<T0, T1, T2>(arg0: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::VaultCap, arg1: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::Vault<T0, T1, T2>, arg2: 0x2::coin::Coin<T0>, arg3: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault_acl::VaultAcl, arg4: &0xfac036f8b889e6ca3fed666467ab40580193d6e27d3ae0a9fbd4305aa06d566b::acl::AggregatorAcl, arg5: &0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::version::Version, arg6: &mut 0x2::tx_context::TxContext) : 0xfe579a58d32d38e154a8c0d4aa646238851f340258d10c7482cef9bea165b823::receipt::PermissionedReceipt {
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::version::assert_current_version(arg5);
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::vault::assert_vault_cap<T0, T1, T2>(arg1, arg0);
        0x5b7b6f3dab35f922b77dca31419e9b8eab678129f6b986736222078d5c43ea0c::deposit::get_deposit_receipt<T0, T1, T2>(arg1, arg2, arg3, arg4, arg5, arg6)
    }

    // decompiled from Move bytecode v6
}

