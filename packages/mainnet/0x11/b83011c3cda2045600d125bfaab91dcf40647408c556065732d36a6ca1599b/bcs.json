{
  "dataType": "package",
  "id": "0x11b83011c3cda2045600d125bfaab91dcf40647408c556065732d36a6ca1599b",
  "version": 1,
  "moduleMap": {
    "suikoko": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suikoko",
      "datatype_name": "SUIKOKO",
      "package": "0x11b83011c3cda2045600d125bfaab91dcf40647408c556065732d36a6ca1599b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "suikoko": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x11b83011c3cda2045600d125bfaab91dcf40647408c556065732d36a6ca1599b::suikoko::SUIKOKO",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}