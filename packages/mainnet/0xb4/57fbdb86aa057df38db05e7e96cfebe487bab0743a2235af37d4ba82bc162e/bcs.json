{
  "dataType": "package",
  "id": "0xb457fbdb86aa057df38db05e7e96cfebe487bab0743a2235af37d4ba82bc162e",
  "version": 1,
  "moduleMap": {
    "cocaine": ""
  },
  "typeOriginTable": [
    {
      "module_name": "cocaine",
      "datatype_name": "COCAINE",
      "package": "0xb457fbdb86aa057df38db05e7e96cfebe487bab0743a2235af37d4ba82bc162e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}