module 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::curves {
    public fun calculate_add_liquidity_cost(arg0: u64, arg1: u64, arg2: u64) : u64 {
        let v0 = 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::sub(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg2)));
        assert!(v0 > 0, 100);
        0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::sub(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::div(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::mul(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1)), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(v0)))), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0)))
    }

    public fun calculate_remove_liquidity_return(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::sub(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::div(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::mul(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0)), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::add(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg2)))))))))
    }

    public fun calculate_token_amount_received(arg0: u64, arg1: u64, arg2: u64) : u64 {
        0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::sub(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::div(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::mul(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg1)), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::as_u64(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::add(0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg0), 0xe606e45da387df610971bfadd5f6a9d67ff439db641b9c0e40e6ef94a5b9846b::utils::from_u64(arg2)))))))))
    }

    // decompiled from Move bytecode v6
}

