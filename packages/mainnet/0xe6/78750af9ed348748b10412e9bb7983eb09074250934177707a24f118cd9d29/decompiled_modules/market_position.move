module 0xe678750af9ed348748b10412e9bb7983eb09074250934177707a24f118cd9d29::market_position {
    struct MarketPosition has store, key {
        id: 0x2::object::UID,
        market_state_id: 0x2::object::ID,
        expiry: u64,
        yield_token: 0x1::string::String,
        name: 0x1::string::String,
        url: 0x1::string::String,
        description: 0x1::string::String,
        lp_amount: u64,
        expiry_days: u64,
        lp_amount_display: 0x1::string::String,
        rewards_debt: 0x2::vec_map::VecMap<0x2::object::ID, u256>,
        rewards_harvested: 0x2::vec_map::VecMap<0x2::object::ID, u64>,
    }

    struct MARKET_POSITION has drop {
        dummy_field: bool,
    }

    public(friend) fun borrow_reward_debt(arg0: &mut MarketPosition) : &mut 0x2::vec_map::VecMap<0x2::object::ID, u256> {
        &mut arg0.rewards_debt
    }

    public(friend) fun borrow_reward_debt_harvested(arg0: &mut MarketPosition) : (&mut 0x2::vec_map::VecMap<0x2::object::ID, u256>, &mut 0x2::vec_map::VecMap<0x2::object::ID, u64>) {
        (&mut arg0.rewards_debt, &mut arg0.rewards_harvested)
    }

    public(friend) fun burn(arg0: MarketPosition) {
        let MarketPosition {
            id                : v0,
            market_state_id   : _,
            expiry            : _,
            yield_token       : _,
            name              : _,
            url               : _,
            description       : _,
            lp_amount         : _,
            expiry_days       : _,
            lp_amount_display : _,
            rewards_debt      : _,
            rewards_harvested : _,
        } = arg0;
        0x2::object::delete(v0);
    }

    public(friend) fun decrease_lp_amount(arg0: &mut MarketPosition, arg1: u64, arg2: &0x2::clock::Clock) {
        arg0.lp_amount = arg0.lp_amount - arg1;
        set_expiry_days(arg0, arg2);
    }

    public fun expiry(arg0: &MarketPosition) : u64 {
        arg0.expiry
    }

    public(friend) fun increase_lp_amount(arg0: &mut MarketPosition, arg1: u64, arg2: &0x2::clock::Clock) {
        arg0.lp_amount = arg0.lp_amount + arg1;
        set_expiry_days(arg0, arg2);
    }

    fun init(arg0: MARKET_POSITION, arg1: &mut 0x2::tx_context::TxContext) {
        let v0 = 0x2::package::claim<MARKET_POSITION>(arg0, arg1);
        let v1 = 0x2::display::new<MarketPosition>(&v0, arg1);
        0x2::display::add<MarketPosition>(&mut v1, 0x1::string::utf8(b"name"), 0x1::string::utf8(b"Nemo LP | {yield_token} Pool {expiry}"));
        0x2::display::add<MarketPosition>(&mut v1, 0x1::string::utf8(b"description"), 0x1::string::utf8(b"Nemo Liquidity Position"));
        0x2::display::add<MarketPosition>(&mut v1, 0x1::string::utf8(b"project_url"), 0x1::string::utf8(b"https://www.nemoprotocol.com"));
        0x2::display::add<MarketPosition>(&mut v1, 0x1::string::utf8(b"image_url"), 0x1::string::utf8(b"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%221300%22%20height%3D%221300%22%20fill%3D%22none%22%20xmlns%3Av%3D%22https%3A%2F%2Fvecta.io%2Fnano%22%3E%20%20%3Cstyle%3E%20%20%20%20%3C%21%5BCDATA%5B%20%20%20%20.B%20%7B%20%20%20%20%20%20fill%3A%20%23fff%20%20%20%20%7D%20%20%20%20.C%20%7B%20%20%20%20%20%20fill%3A%20color%28display-p3%20.0967%20.3285%201%29%20%20%20%20%7D%20%20%20%20.D%20%7B%20%20%20%20%20%20stroke%3A%20color%28display-p3%20.0967%20.3285%201%29%20%20%20%20%7D%20%20%20%20.E%20%7B%20%20%20%20%20%20stroke-width%3A%206.45%20%20%20%20%7D%20%20%20%20.F%20%7B%20%20%20%20%20%20fill-rule%3A%20evenodd%20%20%20%20%7D%20%20%20%20.G%20%7B%20%20%20%20%20%20stroke-linecap%3A%20round%20%20%20%20%7D%20%20%20%20.H%20%7B%20%20%20%20%20%20stroke-linejoin%3A%20round%20%20%20%20%7D%20%20%20%20.I%20%7B%20%20%20%20%20%20stroke-miterlimit%3A%2010%20%20%20%20%7D%20%20%20%20.J%20%7B%20%20%20%20%20%20color-interpolation-filters%3A%20sRGB%20%20%20%20%7D%20%20%20%20%5D%5D%3E%20%20%3C%2Fstyle%3E%20%20%3Crect%20width%3D%221300%22%20height%3D%221300%22%20fill%3D%22url%28%23B%29%22%20rx%3D%22100%22%20%2F%3E%20%20%3Crect%20width%3D%221200%22%20height%3D%221200%22%20x%3D%2250%22%20y%3D%2250%22%20fill%3D%22url%28%23C%29%22%20rx%3D%22120%22%20%2F%3E%20%20%3Cmask%20id%3D%22A%22%20width%3D%221200%22%20height%3D%221200%22%20x%3D%2250%22%20y%3D%2246%22%20maskUnits%3D%22userSpaceOnUse%22%20mask-type%3D%22alpha%22%3E%20%20%20%20%3Crect%20width%3D%221200%22%20height%3D%221200%22%20x%3D%2250%22%20y%3D%2246%22%20fill%3D%22color%28display-p3%20.5779%20.8734%201%29%22%20rx%3D%22120%22%20%2F%3E%20%20%3C%2Fmask%3E%20%20%3Cg%20mask%3D%22url%28%23A%29%22%3E%20%20%20%20%3Crect%20width%3D%221478.69%22%20height%3D%222627.56%22%20x%3D%22222.092%22%20y%3D%22-1082.9%22%20fill%3D%22url%28%23D%29%22%20fill-opacity%3D%22.3%22%20rx%3D%22120%22%20transform%3D%22rotate%288.603%20222.092%20-1082.9%29%22%20%2F%3E%20%20%20%20%3Cg%20filter%3D%22url%28%23E%29%22%3E%20%20%20%20%20%20%3Cpath%20fill%3D%22url%28%23D%29%22%20d%3D%22M-1076%201656H824v3800h-1900z%22%20transform%3D%22rotate%28270%20-1076%201656%29%22%20%2F%3E%20%20%20%20%20%20%3Cpath%20stroke%3D%22%23000%22%20d%3D%22M-1075.5%201655.5h1899v3799h-1899z%22%20transform%3D%22rotate%28270%20-1075.5%201655.5%29%22%20%2F%3E%20%20%20%20%3C%2Fg%3E%20%20%3C%2Fg%3E%20%20%3Cg%20filter%3D%22url%28%23F%29%22%3E%20%20%20%20%3Crect%20width%3D%221084%22%20height%3D%22307%22%20x%3D%22108%22%20y%3D%22802%22%20fill-opacity%3D%22.09%22%20rx%3D%2285.313%22%20class%3D%22B%22%20%2F%3E%20%20%20%20%3Crect%20width%3D%221080%22%20height%3D%22303%22%20x%3D%22110%22%20y%3D%22804%22%20stroke%3D%22color%28display-p3%20.6971%20.7998%201%29%22%20stroke-width%3D%224%22%20rx%3D%2283.313%22%20%2F%3E%20%20%3C%2Fg%3E%20%20%3Ctext%20x%3D%22490%22%20y%3D%22680%22%20font-size%3D%2270%22%20font-weight%3D%22800%22%20class%3D%22B%22%3ENEMO%20LP%3C%2Ftext%3E%20%20%3Ctext%20x%3D%22180%22%20y%3D%22940%22%20font-size%3D%2245%22%20class%3D%22B%22%3E{yield_token}%3C%2Ftext%3E%20%20%3Ctext%20x%3D%22180%22%20y%3D%221022%22%20font-size%3D%2245%22%20class%3D%22B%22%3EMaturity%20{expiry_days}%20day%3C%2Ftext%3E%20%20%20%3Ctext%20x%3D%22760%22%20y%3D%22942%22%20font-size%3D%2260%22%20class%3D%22B%22%3E{lp_amount_display}%3C%2Ftext%3E%20%20%3Cpath%20stroke%3D%22%23fff%22%20stroke-width%3D%228%22%20d%3D%22M861%20378.174c0%20116.63-94.506%20211.174-211.081%20211.174s-211.082-94.544-211.082-211.174S533.343%20167%20649.919%20167%20861%20261.544%20861%20378.174z%22%20%2F%3E%20%20%3Cg%20class%3D%22C%22%3E%20%20%20%20%3Cpath%20d%3D%22M625.646%20302.672c-9.901-22.861%2019.875-24.954%2024.284-29.141v45.219l-21.855%2027.633c-1.604-8.373%203.175-30.772-2.429-43.711%22%20%2F%3E%20%20%20%20%3Cpath%20d%3D%22M603.366%20322.094c5.282-26.712%2019.876-32.239%2024.285-36.426v52.504l-21.856%2027.634c-1.603-8.374-5.163-29.878-2.429-43.712%22%20%2F%3E%20%20%3C%2Fg%3E%20%20%3Cpath%20d%3D%22M610.661%20344.474c-14.204%2014.304-26.129%2029.492-35.043%2042.043%200%200%2010.357-87.143%2058.166-116.375-1.552%202.121-3.281%204.63-5.207%207.581-14.722%2022.557-18.767%2040.358-17.916%2066.751m36.567-80.808c.17.919.271%201.932.341%202.946-8.732%206.186-34.093%2034.45-31.476%2072.547%2011.401-10.834%2024.108-20.879%2037.784-28.514h.003c4.222-3.018%208.27-4.933%2012.118-5.99l.032-.009c8.144-3.499%2016.573-6.047%2025.227-7.343%200%200-5.424-47.116-44.029-33.637%22%20class%3D%22B%20F%22%20%2F%3E%20%20%3Cpath%20d%3D%22M691.256%20294.152s-6.486-53.197-55.762-25.022-59.877%20117.386-59.877%20117.386%22%20class%3D%22D%20E%20G%20H%20I%22%20%2F%3E%20%20%3Cpath%20d%3D%22M626.144%20478.168c-5.703%2023.414-47.352%2032.907-47.352%2018.986%200-6.334%206.616-20.134%2013.828-33.294-18.825-12.005-27.251-25.561-27.251-25.561-1.737%2028.336-26.207%2055.058-36.437%2041.769s12.787-40.504%2012.787-40.504c-38.356%201.9-33.243-47.462-14.065-53.158s33.239%2034.172%2033.239%2034.172%206.398-11.891%2017.675-28.165c16.676-24.071%2044.033-57.732%2077.156-76.69-28.468%2020.873-21.372%2053.831.628%2074.095-19.139-4.773-30.256-8.475-30.256-8.475-.045%200-9.598.013-14.065%2011.07-4.472%2011.079%2034.944%2063.606%20112.507%2054.745%2011.566-1.32%2021.26-3.527%2029.356-6.341-4.921%207.14-11.357%2014.029-19.758%2020.055-7.525%205.405-16.63%2010.121-27.638%2013.712-5.078%201.662-10.56%203.079-16.481%204.218-25.537%204.91-46.694%203.654-63.873-.634%22%20class%3D%22B%22%20%2F%3E%20%20%3Cpath%20d%3D%22M526.377%20482.034v.001c1.644%202.136%203.697%203.609%206.077%204.31%202.356.693%204.795.558%207.133-.113%204.587-1.316%209.152-4.791%2013.158-9.296%206.61-7.432%2012.419-18.483%2014.8-30.461q.915%201.076%202.007%202.276c4.207%204.613%2010.416%2010.492%2018.819%2016.176-3.112%205.783-6.059%2011.629-8.327%2016.855-1.306%203.008-2.408%205.858-3.188%208.403-.766%202.497-1.288%204.908-1.288%206.969%200%202.646%201.033%204.899%202.877%206.547%201.75%201.562%204.036%202.415%206.386%202.828%204.687.824%2010.629.077%2016.482-1.796%2010.655-3.41%2022.655-11.133%2027.017-22.734%2017.095%203.825%2037.758%204.688%2062.296-.03%206.046-1.163%2011.66-2.614%2016.875-4.32%2011.303-3.687%2020.707-8.549%2028.515-14.156%208.719-6.255%2015.413-13.417%2020.533-20.846l5.589-8.109-9.303%203.233c-7.837%202.724-17.295%204.886-28.663%206.182-37.956%204.337-66.415-6.349-84.79-19.324-9.211-6.504-15.855-13.559-19.892-19.545-2.023-3-3.338-5.653-4.021-7.766-.724-2.242-.578-3.372-.447-3.697%203.099-7.674%209.017-8.844%2010.657-9.021q.523.169%201.486.473l5.971%201.812c5.211%201.533%2012.819%203.664%2022.436%206.062l2.965-5.501c-10.529-9.698-17.313-22.28-18.208-34.679-.883-12.236%203.93-24.639%2017.302-34.443l-3.509-5.4c-33.767%2019.326-61.459%2053.48-78.204%2077.652a377%20377%200%200%200-13.18%2020.361q-.734%201.222-1.356%202.278l-.038-.085c-1.657-3.737-4.088-8.7-7.161-13.51-3.049-4.773-6.86-9.604-11.341-12.881-4.541-3.321-10.05-5.224-16.106-3.425-5.983%201.777-10.476%206.806-13.279%2012.679-2.829%205.926-4.167%2013.149-3.558%2020.121.609%206.978%203.198%2013.951%208.505%2019.068%204.162%204.013%209.785%206.683%2016.914%207.44-1.997%202.792-4.479%206.543-6.678%2010.703-2.315%204.379-4.408%209.379-5.207%2014.289-.801%204.92-.353%2010.136%202.944%2014.42z%22%20class%3D%22D%20E%22%20%2F%3E%20%20%3Cg%20class%3D%22B%22%3E%20%20%20%20%3Cellipse%20cx%3D%22703.356%22%20cy%3D%22324.527%22%20rx%3D%2233.998%22%20ry%3D%2221.856%22%20%2F%3E%20%20%20%20%3Cpath%20d%3D%22M737.029%20359.091a7.228%207.228%200%201%201%200%2014.455%207.228%207.228%200%200%201%200-14.455m-4.7%20106.003c2.511%206.644%208.732%2036.608-21.251%2038.456s-5.761-26.125-5.761-26.125v-.003c10.757-3.228%2019.655-7.47%2027.009-12.33z%22%20%2F%3E%20%20%20%20%3Cpath%20d%3D%22M656.254%20318.299a123%20123%200%200%201%2011.489-5.86l.031-.009c22.37-6.33%2037.428%2018.813%2037.428%2018.813s7.981-18.402%2025.586-20.198c2.535-.258%205.273-.172%208.215.362%2015.684%202.855%2026.378%2030.03%2024.262%2053.232v.013c-1.035%2011.339-7.183%2029.185-15.253%2035.321-10.232%202.541-23.202%203.634-39.736.816-20.473-3.487-37.995-7.41-51.415-10.78-21.151-19.611-27.976-51.51-.607-71.71%22%20%2F%3E%20%20%3C%2Fg%3E%20%20%3Cg%20class%3D%22D%20E%20G%20H%20I%22%3E%20%20%20%20%3Cpath%20d%3D%22M590.938%20464.552c-18.428-12.061-26.676-25.681-26.676-25.681-1.699%2028.469-29.234%2050.73-35.667%2041.964-4.592-16.432%2012.517-40.692%2012.517-40.692-37.546%201.909-32.541-47.684-13.768-53.407s32.537%2034.332%2032.537%2034.332%206.263-11.947%2017.302-28.297c16.323-24.183%2043.103-58.002%2075.527-77.048m14.455-4.816c7.672-4.051%2015.614-7.001%2023.767-8.501%2016.316-3.005%2029.006.181%2038.871%206.862m-118.5%20126.912s-9.171%2014.232-17.513%2029.343c-6.966%2012.609-13.355%2025.832-13.355%2031.902%200%2013.338%2040.225%204.242%2045.733-18.193s0-43.052%200-43.052m77.279%2043.075s-22.354%2026.141%207.629%2024.292%2024.497-30.234%2021.986-36.878m14.95-64.216c8.07-6.307%2014.218-24.65%2015.253-36.305v-.012c2.116-23.849-8.578-51.78-24.262-54.715-2.941-.549-5.676-.637-8.211-.372-17.606%201.846-25.589%2020.76-25.589%2020.76s-15.059-25.843-37.429-19.337l-.031.01a121%20121%200%200%200-11.486%206.022c-27.369%2020.764-20.55%2053.547.601%2073.705m-4.148-76.485c5.036-2.429%209.866-3.968%2014.455-4.819%22%20%2F%3E%20%20%20%20%3Cpath%20d%3D%22M753.443%20438.506c-8.174%202.769-17.963%204.942-29.64%206.241-78.313%208.724-127.234-38.013-118.206-59.804%204.509-10.884%2018.812-4.983%2018.812-4.983s13.344%2011.94%2074.41%2013.575c64.21%200%2072.445-17.218%2081.895-8.592s11.024%2033.79-27.271%2053.563%22%20class%3D%22B%22%20%2F%3E%20%20%20%20%3Cpath%20d%3D%22M634.233%20404.413s26.852%2016.752%2070.364%2018.017c44.299%200%2064.057-18.017%2064.057-18.017%22%20%2F%3E%20%20%3C%2Fg%3E%20%20%3Cpath%20d%3D%22M670.035%20322.582c13.678-2.564%2027.498%209.91%2030.864%2027.863s-4.996%2034.586-18.674%2037.15-27.494-9.911-30.86-27.863%204.993-34.585%2018.67-37.15m69.931%205.89c12.392%204.079%2018.252%2020.113%2013.086%2035.81s-19.405%2025.115-31.797%2021.037-18.249-20.112-13.082-35.809%2019.401-25.116%2031.793-21.038%22%20class%3D%22B%22%20%2F%3E%20%20%3Cpath%20d%3D%22M679.3%20341.811c7.447%200%2013.486%208.051%2013.486%2017.981s-6.039%2017.98-13.486%2017.98-13.485-8.05-13.485-17.98%206.037-17.981%2013.485-17.981%22%20class%3D%22C%22%20%2F%3E%20%20%3Cpath%20d%3D%22M665.815%20364.288a4.496%204.496%200%201%201%208.992.002%204.496%204.496%200%200%201-8.992-.002%22%20class%3D%22B%22%20%2F%3E%20%20%3Cpath%20d%3D%22M733.241%20341.811c7.448%200%2013.487%208.051%2013.487%2017.981s-6.039%2017.98-13.487%2017.98-13.484-8.05-13.484-17.98%206.037-17.981%2013.484-17.981%22%20class%3D%22C%22%20%2F%3E%20%20%3Cpath%20d%3D%22M728.747%20364.288a4.495%204.495%200%201%201%208.99%200%204.495%204.495%200%200%201-8.99%200%22%20class%3D%22B%22%20%2F%3E%20%20%3Cdefs%3E%20%20%20%20%3ClinearGradient%20id%3D%22B%22%20x1%3D%22650%22%20x2%3D%22650%22%20y1%3D%220%22%20y2%3D%221300%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%20%20%20%20%20%20%3Cstop%20stop-color%3D%22color%28display-p3%20.4497%20.8441%201%29%22%20%2F%3E%20%20%20%20%20%20%3Cstop%20offset%3D%221%22%20stop-color%3D%22color%28display-p3%20.154%20.3731%201%29%22%20%2F%3E%20%20%20%20%3C%2FlinearGradient%3E%20%20%20%20%3ClinearGradient%20id%3D%22C%22%20x1%3D%22650%22%20x2%3D%22650%22%20y1%3D%22102%22%20y2%3D%221250%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%20%20%20%20%20%20%3Cstop%20stop-color%3D%22color%28display-p3%200%20.2666%20.9411%29%22%20%2F%3E%20%20%20%20%20%20%3Cstop%20offset%3D%221%22%20stop-color%3D%22color%28display-p3%200%20.4667%201%29%22%20%2F%3E%20%20%20%20%3C%2FlinearGradient%3E%20%20%20%20%3Cpattern%20id%3D%22D%22%20width%3D%221%22%20height%3D%221%22%20patternContentUnits%3D%22objectBoundingBox%22%3E%20%20%20%20%20%20%3Cuse%20href%3D%22%23G%22%20transform%3D%22scale%28.00177%20.00089%29%22%20%2F%3E%20%20%20%20%3C%2Fpattern%3E%20%20%20%20%3Cfilter%20id%3D%22E%22%20width%3D%223874.4%22%20height%3D%221974.4%22%20x%3D%22-1113.2%22%20y%3D%22-281.2%22%20filterUnits%3D%22userSpaceOnUse%22%20class%3D%22J%22%3E%20%20%20%20%20%20%3CfeFlood%20flood-opacity%3D%220%22%20%2F%3E%20%20%20%20%20%20%3CfeBlend%20in%3D%22SourceGraphic%22%20%2F%3E%20%20%20%20%20%20%3CfeGaussianBlur%20stdDeviation%3D%2218.6%22%20%2F%3E%20%20%20%20%3C%2Ffilter%3E%20%20%20%20%3Cfilter%20id%3D%22F%22%20width%3D%221238.84%22%20height%3D%22461.843%22%20x%3D%2230.579%22%20y%3D%22724.579%22%20filterUnits%3D%22userSpaceOnUse%22%20class%3D%22J%22%3E%20%20%20%20%20%20%3CfeFlood%20flood-opacity%3D%220%22%20%2F%3E%20%20%20%20%20%20%3CfeGaussianBlur%20stdDeviation%3D%2238.711%22%20%2F%3E%20%20%20%20%20%20%3CfeComposite%20in2%3D%22SourceAlpha%22%20operator%3D%22in%22%20%2F%3E%20%20%20%20%20%20%3CfeBlend%20in%3D%22SourceGraphic%22%20%2F%3E%20%20%20%20%3C%2Ffilter%3E%20%20%20%20%3Cimage%20id%3D%22G%22%20width%3D%22736%22%20height%3D%221308%22%20href%3D%22data%3Aimage%2Fjpeg%3Bbase64%2C%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F2wCEACodICUgGiolIiUvLSoyP2lEPzo6P4FcYUxpmYagnpaGk5GovfLNqLPltZGT0v%2FV5fr%2F%2F%2F%2F%2Fo8v%2F%2F%2F%2F%2F%2F%2FL%2F%2F%2F8BLS8vPzc%2FfEREfP%2Buk67%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FCABEIA%2BgD6AMBIgACEQEDEQH%2FxAAaAAEBAQEBAQEAAAAAAAAAAAAAAQIDBAUG%2F9oACAEBAAAAAPsAZ8nk8%2FLIAAAAAAAAAAUABQKKVSrrp29PpoAJ875uAAAAAAAAAAABQAFApRVKqt%2B72UA4%2FF4AAAAAAAAAAAAUABQKUVSqtdvpdQPN8TAAAAAAAAAAAAAUAFApRVKq1v6nYOPwcAAAAAAAAAAAAAKACgopVLVVv6vUnwOAAAAAAAAAAAAAAUAFBVKVVVXb61fN%2BUAAAAAAAAAAAAAAUAUFKpVVavv9s%2FO8wAAAAAAAAAAAAABQBQUqlVVrf2fH8UAAAAAAAAAAAAAAFAFBSlVaqvp%2BHwFAgAAAAAAgAAFAAACgChSlVaq%2Bvw8KAEAAAAAJUAAAFJQAAFAKFKVVqu3igABAAAACAAAAABQAAUAoUqqWrryUAAgAAABAAAAAAKAAFAKFKWlq%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%2Br6fiYAUAAFAAAUAAAAAAEAAEAADX274fnAKAAFAAAoAAFAQAAEAAEAAH0Pcnx%2BIFAAFAAAoAACgIAACAAAQAHX7FOXx8hQABQAAFAACgAgAAQAABABr6%2FUOHyclAACgAAUAAFABAAAIAACAGvq9wOXy%2BQAAFAAFAACkoACVAACAAAgHX6nUAni8OQACgABQAAKAAAQAAQAAIN%2B320AE83m484AUAAFAACgAAAgAAQAAXp29HpoH%2F8QAGAEBAQEBAQAAAAAAAAAAAAAAAAECAwT%2F2gAIAQIQAAAAG%2BmqQAACoCgBRQZxxgd9yiAAAAAUBRQJw5nfYBAAAAAKBRQHmxvuAEAAAAAUFFAz5e%2BwAgAAAAAoUUDy96AEAAAAABRRQc9AAgAABFAAUUUGQAgAAAIFAFFFDIAQAooQIEFAUUUZAEBVUUgQQhCgUUUyAQVaoACCEQQoUUpkAlWqUgAICEQAUUrIAtUAAAgEIQBRS5AWqAgABUAhCAUogKtAgAACkAhEBSkC1RAAAAFIBCIFKhVUgIAAUAUgISBSxVAIAAAUBRAJEFWVQEACAUAoFICJClUCACAAFBQUIEkKtAgBAAACigUESQugQBABAFAUUFAkiW0gCAIAAoCigoJJGqgCAQKAAAUoFCSKAIBKAFAAgpQUJAAgAUAKAIJRQoIgCAUFABQCEBQoGQICqBQAAASBQosyCBVUAAAAVCQUKVgEKtAAAAAUSIUKXAQtoAAAAAKREoKuAi2rAAAAAAokShTIFtQAAAAABSQBWQq1AAAAAABSQCshbUAAAAAABSQC5FtQAAAAAAAsQFyW1AAAAAAAAsQEW0gAAAAAAACAltQJQAAAAAAAgFqASgAAAAAACBagAAAAAAAACC2AAAAAAAAABKAAAAAAAAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAQAAAAAAAAUAEAAAAAAAFQoAIVAAAAAABQAAACAAAAAAUAAAAgAAAAKJQAAAAgAAAAUAAAAAQAJNAAFAAAAAAgB59dgAFAAAAAAIA8b10AFAAAAAAEA48HT0gBQAAAAAAgMeUb9GgKAAAAAABA48AN9ugUAAAAAAEJw5wf%2FEABcBAQEBAQAAAAAAAAAAAAAAAAABAgP%2F2gAIAQMQAAAAEygAAAAAABANaoZyAAAAAAABAS70YgAAAAAAABAh1swAAABQCAAAQIvXEAAAKAAQAAECOuAAAFAAAIAAIJoAACgAAAIABAmgAAoIAFABAAQTQAAAIAUFAIAEFAAAgIAKKUCABCgAECAAAKVQQARQAIAEWAACqUQASgBAAAQAALSkAAAgAAAEAAWlQAAQAAAAEAAtVAAEAACoAAQAKoABAAoABAAgAWgAgAoAAAQBABaAIAoAAAAQBAFUBBQAAAACWAQBVAlJQAAAABLAIBVAAAAAAAAgEBVAAAAAAAAgEBVAAABAABQBAIFUAABCAACigQCBVAAEIAAAKKEBAWgAIQAAAApRAIGgAQgAAAAFKQCDQARAAAAABSkBBoAiAAsBZYAAKWAQ0AiAAoAACAKAEaAiACgAAAICgBNAiAKAAAABAoAUIgFAAAAACCgCiIFAAAAAACKAUiCgAAAAAAIoCoRQAAAAAAAigVEoAAAAAAACUARQAAAAAigAABFAAAAACCgAACUAAAEFhZZZYUAAAAAAEAAAKRQAAAACAAAAKigAAAAIAAAAAoAAAEqWAAAAAKAAABAAAAAAAqUAABAAAAAAAKAACAAAAAAAFAAhYAAAAAAACgCAAAAAAAAAoCVAAAAAAAAAoEsAAAAAAAACgRYAAAAAAAABSLAAAAAAAAAAAAAAAAAAAAFgAAAAAAAAACwAAAAAAAAACoAAAAAAAAAB0mAAAAAAAAAAXo5wAAAAAAAAAN7ZxAAAAAAAAADXQTnAAAAAAAAAN7AznIAAAAAAAC61R%2F%2FEACMQAQEAAAcAAwEBAQEAAAAAAAERAAIDBBJQYAUgQDAQgLD%2F2gAIAQEAAQIA%2B%2BbNq%2FJ6nymfeOf0pny7nJ8hp74zf0zZtz8nq63rdPU0d8P8dxudzuvY6G40db77vdaur7PTz7fcfXdbjV1Pa6efQ1v9zO73Ht9vrD%2Fnyu49zsNbGbNranudLPlflNX3ew1Pls%2Fu%2Fj8%2B9ze72ubUfd5H%2FqWSSSSSSSSSSSSefkkkkkkkkkkkkkkkkknlpJJJJJJJJJJJJJJOPHjx4ySSSePkkkkkkkkk%2Bskkkkkkk48ePHjJJJPEySSST9Ukkkk48ePHjJJJ4SSSTpZJJJx48ePGSTv5JJ1skknHjx4ySTupJJ2ckk4uVyuVJJ20kncSSRyuVyuVJJ2c8BJEcrlcqST2kkRHKiJJ7WREcqJJ7WSIiIkntoiIiJPbxERESe2iIiIk9vERERJ7eIiIk9vERERPcIiIie4iIiJ7lEREnuERET3KIiJPcRERJ7lERPdIiJ7pERPdIiJ28kkkkkkkkk7BEROxkkkkkkkkkkkkkk61EROrkkkk48ePHjx48ePHjx48ePHjx48ZJJJJOpREepkknEy8ePHjx48ZJJJJJJJJJJJJJJ06Ij0skADKZTKZTLJJJJJJJMSSSSSSSSSSSdK4RE6GSABlMplAAkkk%2FPJJJJJJJ0bhE%2FfAAAAAAJJ0ckkkknROE%2FbAAAAAAJ1Ukkkk6F%2FaAAAAAT81xbcX8ckkk7sAAAAA%2FDbbegkkk7cAAAAJ%2FW2%2Fytv7ZJJO0AAAADv5JOxgAAB4OSTrwAAAPDSSdYAAAeKk6owAAHj51AABg9uYAAPcGAAD3BgAPcmAA9yYAD3JgwYPcmDBg9yYMGD3J70wYPdGDB7owYMHujBg90YMHuzB7swYPdGDB7swe8MHvD3h70%2F9yLOe7yG6y%2B72uX5LJ7v43L8hp%2B7%2BP08xq5Pc6WTKY%2BR0fc%2FHaP8AibnR9vttHKf7r6Opk9rp5NDR%2Bu52%2BfJ7PTybbb%2FfX0Nfb%2Bx0NvoaH8cxrbDPp%2Bt09PQ2Af0cupsc%2FwAfm2zk9KZcu2ybDT2OXL9%2F%2F8QALBAAAgECBAQFBQEBAAAAAAAAAQIDABEhMVFgBBJBYSAwMnGBECJCUqFi0P%2FaAAgBAQADPwDxqgJYgDU1CmCXc9sqmPoVV%2FtcQ%2BcrfGFO3qdj7nczDJiPY1MuUh%2BcakHqAb%2BVE%2BDXQ96DC4II80KCWIAHU0FusA5j%2BxyqSY3kctu54zdGIoHCUWOoyoMLg3HlR8OnM5x6AZmpOIP3Gy9FGW8nhP2m66Uky3U49Rp5C8MmrnIU8rl3Nyd6NGwZTYilmXRhmPEvDxF2z6DU00shdzcnezRuGU2IoTRhhn1GngCqSTYDOjxExb8Rgo7b4MMl%2FwATnQYAjEH68qiFTi2J9t9XUxNmMR9AqljkBejNK0h6nfRjkVh0NBlBGRrk4blGbm3xvzng5TmptXNxCr%2Bq78tMV1Fc%2FFyn%2FVt%2BcvEIe9q5pGOp35Z1Oh%2F6KlZ2Gh35d1Gprl4mQd7785uJQd71acN%2Bw35eYtoK54OYZqb785IOY5sb0GUg5GjHIyHod9GSRUHU0FUAZD6XUSrmMD7b6splYYnAe31DKQcjRhlK%2FicjvgzSgfiMzQUADIeBZoypz6HSmjcqwsRvZpHCqLk0IYwoz6nXxLOujDI00blXFiN6NI4VBcmlgXVjmfISdbMMeh0p4T9wuvQ7yeY4Cy9TSQrZRj1OvlBhYi4oHGI2Ohyp42s6kbueQ2RSaAxlNzoMqCiwFh5oYWIBHeonxW6HtUg9JDfyplzjPxjTDNSPcbmY5KT7CpmyjPzhUh9RC%2F2okxa7nvQUWUADt5H%2FxAAiEQACAgEEAgMBAAAAAAAAAAABAgARUAMQIDESIUFRcLD%2F2gAIAQIBAT8A3CEwIBAMoUBh0vqFSO%2BIFxVrMkX3HSuCLWbIuOvidkFnOstjZBQzzijB1nnSz%2BK1KlSpUqVKylSpUr%2Bd0TUQ2M9qH3NI%2FGdPqE2bimjcBv3nNVvjdH8YDead%2FGE3wVysVwcvdRtX6hN8w7CKxOTJqNqNCSe%2BP%2F%2FEAB4RAQACAgMAAwAAAAAAAAAAAAERUAACECAhMDGw%2F9oACAEDAQE%2FAOZybWXDbBnst0M9FvBnhvRh4b7V8vx%2FSOfu%2B1PM2L4xJvdTlJuwnqk4kXBr8CGJaAZHX%2F%2FZ%22%20%2F%3E%20%20%3C%2Fdefs%3E%3C%2Fsvg%3E"));
        0x2::display::update_version<MarketPosition>(&mut v1);
        0x2::transfer::public_transfer<0x2::package::Publisher>(v0, 0x2::tx_context::sender(arg1));
        0x2::transfer::public_transfer<0x2::display::Display<MarketPosition>>(v1, 0x2::tx_context::sender(arg1));
    }

    public fun join(arg0: &mut MarketPosition, arg1: MarketPosition, arg2: &0x2::clock::Clock) {
        assert!(market_state_id(arg0) == market_state_id(&arg1), 0xe02f3a5e3f585b445a1b6af49361d813af747deef95e587db81caa1ff71ce914::error::market_invalid_market_position());
        increase_lp_amount(arg0, lp_amount(&arg1), arg2);
        let v0 = 0;
        while (v0 < 0x2::vec_map::size<0x2::object::ID, u256>(&arg1.rewards_debt)) {
            let (v1, v2) = 0x2::vec_map::get_entry_by_idx<0x2::object::ID, u256>(&arg1.rewards_debt, v0);
            if (0x2::vec_map::contains<0x2::object::ID, u256>(&arg0.rewards_debt, v1)) {
                let v3 = 0x2::vec_map::get_mut<0x2::object::ID, u256>(&mut arg0.rewards_debt, v1);
                *v3 = *v3 + *v2;
            } else {
                0x2::vec_map::insert<0x2::object::ID, u256>(&mut arg0.rewards_debt, *v1, *v2);
            };
            v0 = v0 + 1;
        };
        v0 = 0;
        while (v0 < 0x2::vec_map::size<0x2::object::ID, u64>(&arg1.rewards_harvested)) {
            let (v4, v5) = 0x2::vec_map::get_entry_by_idx<0x2::object::ID, u64>(&arg1.rewards_harvested, v0);
            if (0x2::vec_map::contains<0x2::object::ID, u64>(&arg0.rewards_harvested, v4)) {
                let v6 = 0x2::vec_map::get_mut<0x2::object::ID, u64>(&mut arg0.rewards_harvested, v4);
                *v6 = *v6 + *v5;
            } else {
                0x2::vec_map::insert<0x2::object::ID, u64>(&mut arg0.rewards_harvested, *v4, *v5);
            };
            v0 = v0 + 1;
        };
        let MarketPosition {
            id                : v7,
            market_state_id   : _,
            expiry            : _,
            yield_token       : _,
            name              : _,
            url               : _,
            description       : _,
            lp_amount         : _,
            expiry_days       : _,
            lp_amount_display : _,
            rewards_debt      : _,
            rewards_harvested : _,
        } = arg1;
        0x2::object::delete(v7);
    }

    public fun lp_amount(arg0: &MarketPosition) : u64 {
        arg0.lp_amount
    }

    public fun market_state_id(arg0: &MarketPosition) : 0x2::object::ID {
        arg0.market_state_id
    }

    public(friend) fun mint(arg0: 0x2::object::ID, arg1: 0x1::string::String, arg2: u64, arg3: &0x2::clock::Clock, arg4: &mut 0x2::tx_context::TxContext) : MarketPosition {
        let v0 = 0x1::string::utf8(b"Nemo LP | ");
        0x1::string::append(&mut v0, arg1);
        0x1::string::append(&mut v0, 0x1::string::utf8(b" Pool "));
        0x1::string::append(&mut v0, 0x1::u64::to_string(arg2));
        MarketPosition{
            id                : 0x2::object::new(arg4),
            market_state_id   : arg0,
            expiry            : arg2,
            yield_token       : arg1,
            name              : 0x1::string::utf8(b"Nemo LP"),
            url               : 0x1::string::utf8(b""),
            description       : 0x1::string::utf8(b"Nemo Liquidity Position"),
            lp_amount         : 0,
            expiry_days       : (arg2 - 0x2::clock::timestamp_ms(arg3)) / 86400000,
            lp_amount_display : u64_to_float_string(0),
            rewards_debt      : 0x2::vec_map::empty<0x2::object::ID, u256>(),
            rewards_harvested : 0x2::vec_map::empty<0x2::object::ID, u64>(),
        }
    }

    fun set_expiry_days(arg0: &mut MarketPosition, arg1: &0x2::clock::Clock) {
        if (arg0.expiry > 0x2::clock::timestamp_ms(arg1)) {
            arg0.expiry_days = (arg0.expiry - 0x2::clock::timestamp_ms(arg1)) / 86400000;
        } else {
            arg0.expiry_days = 0;
        };
    }

    public(friend) fun set_lp_amount(arg0: &mut MarketPosition, arg1: u64, arg2: &0x2::clock::Clock) {
        arg0.lp_amount = arg1;
        set_expiry_days(arg0, arg2);
    }

    public fun u64_to_float_string(arg0: u64) : 0x1::string::String {
        let v0 = arg0 % 1000000000 / 1000000;
        let v1 = 0x1::u64::to_string(arg0 / 1000000000);
        if (v0 > 0) {
            0x1::string::append(&mut v1, 0x1::string::utf8(b"."));
            if (v0 < 10) {
                0x1::string::append(&mut v1, 0x1::string::utf8(b"00"));
            } else if (v0 < 100) {
                0x1::string::append(&mut v1, 0x1::string::utf8(b"0"));
            };
            0x1::string::append(&mut v1, 0x1::u64::to_string(v0));
        };
        v1
    }

    public fun u64_to_float_string_with_decimal_value(arg0: u64, arg1: u8) : 0x1::string::String {
        let v0 = 0x2::math::pow(10, arg1);
        let v1 = arg0 % v0 / 0x2::math::pow(10, arg1 - 3);
        let v2 = 0x1::u64::to_string(arg0 / v0);
        if (v1 > 0) {
            0x1::string::append(&mut v2, 0x1::string::utf8(b"."));
            if (v1 < 10) {
                0x1::string::append(&mut v2, 0x1::string::utf8(b"00"));
            } else if (v1 < 100) {
                0x1::string::append(&mut v2, 0x1::string::utf8(b"0"));
            };
            0x1::string::append(&mut v2, 0x1::u64::to_string(v1));
        };
        v2
    }

    public(friend) fun update_lp_display<T0: drop>(arg0: &mut MarketPosition, arg1: &0xe678750af9ed348748b10412e9bb7983eb09074250934177707a24f118cd9d29::py::PyState<T0>) {
        let v0 = 9;
        if (0x2::dynamic_field::exists_<0x1::type_name::TypeName>(0xe678750af9ed348748b10412e9bb7983eb09074250934177707a24f118cd9d29::py::get_state_id<T0>(arg1), 0x1::type_name::get<T0>())) {
            v0 = *0x2::dynamic_field::borrow<0x1::type_name::TypeName, u8>(0xe678750af9ed348748b10412e9bb7983eb09074250934177707a24f118cd9d29::py::get_state_id<T0>(arg1), 0x1::type_name::get<T0>());
        };
        arg0.lp_amount_display = u64_to_float_string_with_decimal_value(arg0.lp_amount, v0);
    }

    // decompiled from Move bytecode v6
}

