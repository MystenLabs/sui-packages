{
  "dataType": "package",
  "id": "0xbaf7ffae6778461043d55987e472545583b43e74a7c475ec8083f62262cc0df9",
  "version": 1,
  "moduleMap": {
    "sdw": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sdw",
      "datatype_name": "SDW",
      "package": "0xbaf7ffae6778461043d55987e472545583b43e74a7c475ec8083f62262cc0df9"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 14
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "sdw": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xbaf7ffae6778461043d55987e472545583b43e74a7c475ec8083f62262cc0df9::sdw::SDW",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}