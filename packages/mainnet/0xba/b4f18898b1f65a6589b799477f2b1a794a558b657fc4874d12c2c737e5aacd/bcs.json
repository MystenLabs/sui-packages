{
  "dataType": "package",
  "id": "0xbab4f18898b1f65a6589b799477f2b1a794a558b657fc4874d12c2c737e5aacd",
  "version": 1,
  "moduleMap": {
    "boca": ""
  },
  "typeOriginTable": [
    {
      "module_name": "boca",
      "datatype_name": "BOCA",
      "package": "0xbab4f18898b1f65a6589b799477f2b1a794a558b657fc4874d12c2c737e5aacd"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "boca": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xbab4f18898b1f65a6589b799477f2b1a794a558b657fc4874d12c2c737e5aacd::boca::BOCA",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}