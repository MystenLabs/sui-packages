{
  "dataType": "package",
  "id": "0x8d6653fdbe95f3f2cd6172bf930f55bd2626320c34dfdb88603c65119705b0df",
  "version": 1,
  "moduleMap": {
    "suinami": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suinami",
      "datatype_name": "SUINAMI",
      "package": "0x8d6653fdbe95f3f2cd6172bf930f55bd2626320c34dfdb88603c65119705b0df"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "suinami": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x8d6653fdbe95f3f2cd6172bf930f55bd2626320c34dfdb88603c65119705b0df::suinami::SUINAMI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}