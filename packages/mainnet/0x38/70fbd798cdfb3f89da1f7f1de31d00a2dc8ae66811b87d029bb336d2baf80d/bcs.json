{
  "dataType": "package",
  "id": "0x3870fbd798cdfb3f89da1f7f1de31d00a2dc8ae66811b87d029bb336d2baf80d",
  "version": 1,
  "moduleMap": {
    "stood": ""
  },
  "typeOriginTable": [
    {
      "module_name": "stood",
      "datatype_name": "STOOD",
      "package": "0x3870fbd798cdfb3f89da1f7f1de31d00a2dc8ae66811b87d029bb336d2baf80d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 16
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 36
    },
    "0xf4054b4c967ea64173453f593a0ec98cb6aa351635cbc412f4fdf5f804bb98db": {
      "upgraded_id": "0xf4054b4c967ea64173453f593a0ec98cb6aa351635cbc412f4fdf5f804bb98db",
      "upgraded_version": 1
    }
  },
  "functionMap": {
    "stood": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x3870fbd798cdfb3f89da1f7f1de31d00a2dc8ae66811b87d029bb336d2baf80d::stood::STOOD",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}