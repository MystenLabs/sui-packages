module 0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::test {
    public fun find_prices<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(arg0: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2::sui::SUI>, arg1: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>, arg2: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg3: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>, arg4: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T6, 0x2::sui::SUI>, arg5: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T2, T4>, arg6: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2::sui::SUI>, arg7: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>, arg8: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T9, 0x2::sui::SUI>, arg9: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>, arg10: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T3>, arg11: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>, arg12: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T5, 0x2::sui::SUI>, arg13: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg14: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, T4>, arg15: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T7>, arg16: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T0, T4>, arg17: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T7, T4>, arg18: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>, arg19: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>, arg20: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T4, T1>, arg21: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T4>, arg22: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T3, 0x2::sui::SUI>, arg23: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, T9>, arg24: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T1, 0x2::sui::SUI>, arg25: &0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb::pool::Pool<T8, 0x2::sui::SUI>, arg26: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T2, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg27: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T2, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg28: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T6, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>, arg29: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg30: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg31: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x2::sui::SUI, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg32: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg33: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T0, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>, arg34: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>, arg35: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg36: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>, arg37: &0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::pool::Pool<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>) : vector<0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::paths::PriceNode> {
        let v0 = 0x1::vector::empty<0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::paths::PriceNode>();
        let v1 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v2 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T4, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v1, 0), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v2, 0), 1), 0, arg0);
        let v3 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v4 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v3, 1), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v4, 1), 1), 1, arg1);
        let v5 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v6 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v5, 2), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v6, 2), 1), 2, arg2);
        let v7 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v8 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0xa99b8952d4f7d947ea77fe0ecdcc9e5fc0bcab2841d6e2a5aa00c3044e5544b5::navx::NAVX, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v7, 3), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v8, 3), 1), 3, arg3);
        let v9 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v10 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T6, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v9, 4), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v10, 4), 1), 4, arg4);
        let v11 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v12 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T2, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v11, 5), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v12, 5), 1), 5, arg5);
        let v13 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v14 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v13, 6), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v14, 6), 1), 6, arg6);
        let v15 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v16 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v15, 7), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v16, 7), 1), 7, arg7);
        let v17 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v18 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T9, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v17, 8), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v18, 8), 1), 8, arg8);
        let v19 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v20 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, 0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v19, 9), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v20, 9), 1), 9, arg9);
        let v21 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v22 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, T3>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v21, 10), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v22, 10), 1), 10, arg10);
        let v23 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v24 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, 0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v23, 11), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v24, 11), 1), 11, arg11);
        let v25 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v26 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T5, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v25, 12), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v26, 12), 1), 12, arg12);
        let v27 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v28 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v27, 13), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v28, 13), 1), 13, arg13);
        let v29 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v30 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T3, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v29, 14), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v30, 14), 1), 14, arg14);
        let v31 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v32 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0xd0e89b2af5e4910726fbcd8b8dd37bb79b29e5f83f7491bca830e94f7f226d29::eth::ETH, T7>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v31, 15), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v32, 15), 1), 15, arg15);
        let v33 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v34 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T0, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v33, 16), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v34, 16), 1), 16, arg16);
        let v35 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v36 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T7, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v35, 17), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v36, 17), 1), 17, arg17);
        let v37 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v38 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v37, 18), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v38, 18), 1), 18, arg18);
        let v39 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v40 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T4, 0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v39, 19), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v40, 19), 1), 19, arg19);
        let v41 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v42 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T4, T1>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v41, 20), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v42, 20), 1), 20, arg20);
        let v43 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v44 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, T4>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v43, 21), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v44, 21), 1), 21, arg21);
        let v45 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v46 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T3, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v45, 22), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v46, 22), 1), 22, arg22);
        let v47 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v48 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, T9>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v47, 23), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v48, 23), 1), 23, arg23);
        let v49 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v50 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T1, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v49, 24), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v50, 24), 1), 24, arg24);
        let v51 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v52 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::cetus::add_prices<T8, 0x2::sui::SUI>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v51, 25), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v52, 25), 1), 25, arg25);
        let v53 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v54 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<T2, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v53, 26), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v54, 26), 1), 26, arg26);
        let v55 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v56 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0x2::sui::SUI, T2, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v55, 27), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v56, 27), 1), 27, arg27);
        let v57 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v58 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<T6, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v57, 28), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v58, 28), 1), 28, arg28);
        let v59 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v60 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0xfa7ac3951fdca92c5200d468d31a365eb03b2be9936fde615e69f0c1274ad3a0::BLUB::BLUB, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v59, 29), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v60, 29), 1), 29, arg29);
        let v61 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v62 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0x2::sui::SUI, T8, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v61, 30), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v62, 30), 1), 30, arg30);
        let v63 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v64 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0x2::sui::SUI, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v63, 31), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v64, 31), 1), 31, arg31);
        let v65 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v66 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v65, 32), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v66, 32), 1), 32, arg32);
        let v67 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v68 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<T0, T4, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee100bps::FEE100BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v67, 33), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v68, 33), 1), 33, arg33);
        let v69 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v70 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<T5, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee3000bps::FEE3000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v69, 34), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v70, 34), 1), 34, arg34);
        let v71 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v72 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0xd976fda9a9786cda1a36dee360013d775a5e5f206f8e20f84fad3385e99eeb2d::aaa::AAA, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v71, 35), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v72, 35), 1), 35, arg35);
        let v73 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v74 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS, 0x5d1f47ea69bb0de31c313d7acf89b890dbb8991ea8e03c6c355171f84bb1ba4a::turbos::TURBOS, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee10000bps::FEE10000BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v73, 36), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v74, 36), 1), 36, arg36);
        let v75 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        let v76 = vector[vector[2, 16], vector[15, 16], vector[13, 15], vector[13, 16], vector[4, 16], vector[12, 2], vector[7, 16], vector[6, 16], vector[8, 16], vector[7, 15], vector[7, 17], vector[7, 0], vector[3, 16], vector[7, 10], vector[17, 2], vector[0, 5], vector[1, 2], vector[5, 2], vector[9, 16], vector[2, 10], vector[2, 11], vector[7, 2], vector[17, 16], vector[7, 8], vector[11, 16], vector[7, 16], vector[12, 2], vector[16, 12], vector[4, 16], vector[6, 16], vector[16, 7], vector[16, 2], vector[14, 16], vector[1, 2], vector[3, 16], vector[9, 16], vector[15, 14], vector[8, 16]];
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::turbos::add_prices<T9, 0x2::sui::SUI, 0x91bfbc386a41afcfd9b2533058d7e915a1d3829089cc268ff4333d54d6339ca1::fee500bps::FEE500BPS>(&mut v0, *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v75, 37), 0), *0x1::vector::borrow<u64>(0x1::vector::borrow<vector<u64>>(&v76, 37), 1), 37, arg37);
        0x88ce04e6f4a403372fa94d9b937270fe472391db2c47a861157b071c55813db0::paths::emit_prices(v0);
        v0
    }

    // decompiled from Move bytecode v6
}

