{
  "dataType": "package",
  "id": "0x88ba04aabea2ee53ecb4b5d94d77664ba4e5a21223090c8356d6c626df8fff29",
  "version": 1,
  "moduleMap": {
    "move": ""
  },
  "typeOriginTable": [
    {
      "module_name": "move",
      "datatype_name": "MOVE",
      "package": "0x88ba04aabea2ee53ecb4b5d94d77664ba4e5a21223090c8356d6c626df8fff29"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "move": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x88ba04aabea2ee53ecb4b5d94d77664ba4e5a21223090c8356d6c626df8fff29::move::MOVE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}