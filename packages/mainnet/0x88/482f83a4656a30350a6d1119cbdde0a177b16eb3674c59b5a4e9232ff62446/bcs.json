{
  "dataType": "package",
  "id": "0x88482f83a4656a30350a6d1119cbdde0a177b16eb3674c59b5a4e9232ff62446",
  "version": 1,
  "moduleMap": {
    "git": ""
  },
  "typeOriginTable": [
    {
      "module_name": "git",
      "datatype_name": "GIT",
      "package": "0x88482f83a4656a30350a6d1119cbdde0a177b16eb3674c59b5a4e9232ff62446"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  }
}