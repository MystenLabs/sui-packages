{
  "dataType": "package",
  "id": "0x84071db982528a7418da857f271e4ce201fe807f5b71f47cff2acd6478c4b202",
  "version": 1,
  "moduleMap": {
    "hole": ""
  },
  "typeOriginTable": [
    {
      "module_name": "hole",
      "datatype_name": "HOLE",
      "package": "0x84071db982528a7418da857f271e4ce201fe807f5b71f47cff2acd6478c4b202"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "hole": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x84071db982528a7418da857f271e4ce201fe807f5b71f47cff2acd6478c4b202::hole::HOLE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}