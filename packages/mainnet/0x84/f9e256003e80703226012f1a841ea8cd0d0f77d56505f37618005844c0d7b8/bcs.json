{
  "dataType": "package",
  "id": "0x84f9e256003e80703226012f1a841ea8cd0d0f77d56505f37618005844c0d7b8",
  "version": 1,
  "moduleMap": {
    "mrpumpkin": ""
  },
  "typeOriginTable": [
    {
      "module_name": "mrpumpkin",
      "datatype_name": "MRPUMPKIN",
      "package": "0x84f9e256003e80703226012f1a841ea8cd0d0f77d56505f37618005844c0d7b8"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "mrpumpkin": {
      "addToDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x84f9e256003e80703226012f1a841ea8cd0d0f77d56505f37618005844c0d7b8::mrpumpkin::MRPUMPKIN>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x84f9e256003e80703226012f1a841ea8cd0d0f77d56505f37618005844c0d7b8::mrpumpkin::MRPUMPKIN",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      },
      "removeFromDenyList": {
        "visibility": "PUBLIC",
        "is_entry": true,
        "params": [
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::deny_list::DenyList",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::coin::DenyCapV2<0x84f9e256003e80703226012f1a841ea8cd0d0f77d56505f37618005844c0d7b8::mrpumpkin::MRPUMPKIN>",
          "address",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}