{
  "dataType": "package",
  "id": "0xb7ecaab49e9ebd3f967ae13353c644c90ec4f2b317b28bea67c1460438387e0a",
  "version": 1,
  "moduleMap": {
    "sj": ""
  },
  "typeOriginTable": [
    {
      "module_name": "sj",
      "datatype_name": "SJ",
      "package": "0xb7ecaab49e9ebd3f967ae13353c644c90ec4f2b317b28bea67c1460438387e0a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 6
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 23
    }
  },
  "functionMap": {
    "sj": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xb7ecaab49e9ebd3f967ae13353c644c90ec4f2b317b28bea67c1460438387e0a::sj::SJ",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}