{
  "package_id": "0xb717244d3412d97ebca5d819cc92191eed7975e56f42f0d973a088bf20b80e48",
  "module_call_graphs": [
    {
      "module_name": "artfilocker",
      "call_graph": {
        "admin_update_lapsed_claims": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::unlock"
        ],
        "admin_withdraw_expired_lockers": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::is_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::withdraw_all",
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::destroy_zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ],
        "admin_withdraw_lapsed": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::destroy_zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::withdraw_all",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::zero",
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::remove",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::is_empty"
        ],
        "balance": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "bulk_balance_check": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::is_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ],
        "calculate_claimable_and_lapsed": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value"
        ],
        "check_single_user": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains"
        ],
        "claim": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::calculate_claimable_and_lapsed",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::handle_lapsed_claims"
        ],
        "claim_interval": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "create_locker": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::into_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::insert"
        ],
        "diagnose_contract_state": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ],
        "duration": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "expanded_check_single_user": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::contains"
        ],
        "handle_lapsed_claims": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::join",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::split",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::add",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "has_lapsed_claims": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_"
        ],
        "init": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender"
        ],
        "initialize": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::new",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::share_object",
          "0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::sender",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::empty"
        ],
        "is_id_zero": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::object::uid_to_bytes"
        ],
        "last_claim_time": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "minimal_diagnose": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::size",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::is_id_zero"
        ],
        "start": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "unlock": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::calculate_claimable_and_lapsed",
          "0x742ac6e5dc0c98a6048c4c8d65d64b626d5446176f4b838b75c2c8d21b5ad80f::artfilocker::handle_lapsed_claims"
        ],
        "unlocked": [
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow"
        ],
        "withdraw_expired_lockers": [
          "0x0000000000000000000000000000000000000000000000000000000000000001::vector::is_empty",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::value",
          "0x0000000000000000000000000000000000000000000000000000000000000002::balance::withdraw_all",
          "0x0000000000000000000000000000000000000000000000000000000000000002::clock::timestamp_ms",
          "0x0000000000000000000000000000000000000000000000000000000000000002::coin::from_balance",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::borrow_mut",
          "0x0000000000000000000000000000000000000000000000000000000000000002::dynamic_field::exists_",
          "0x0000000000000000000000000000000000000000000000000000000000000002::event::emit",
          "0x0000000000000000000000000000000000000000000000000000000000000002::transfer::public_transfer",
          "0x0000000000000000000000000000000000000000000000000000000000000002::vec_set::into_keys"
        ]
      }
    }
  ]
}