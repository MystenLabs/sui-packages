{
  "dataType": "package",
  "id": "0xbf6e619557146f4b3186501628e4b39ddf896f859768c8ca164884acd33ed250",
  "version": 1,
  "moduleMap": {
    "tits": ""
  },
  "typeOriginTable": [
    {
      "module_name": "tits",
      "datatype_name": "TITS",
      "package": "0xbf6e619557146f4b3186501628e4b39ddf896f859768c8ca164884acd33ed250"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 5
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 20
    }
  }
}