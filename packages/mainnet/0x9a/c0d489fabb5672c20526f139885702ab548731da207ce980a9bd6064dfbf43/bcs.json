{
  "dataType": "package",
  "id": "0x9ac0d489fabb5672c20526f139885702ab548731da207ce980a9bd6064dfbf43",
  "version": 1,
  "moduleMap": {
    "gayy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "gayy",
      "datatype_name": "GAYY",
      "package": "0x9ac0d489fabb5672c20526f139885702ab548731da207ce980a9bd6064dfbf43"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "gayy": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x9ac0d489fabb5672c20526f139885702ab548731da207ce980a9bd6064dfbf43::gayy::GAYY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}