{
  "dataType": "package",
  "id": "0xfa0e03552043722394546983058e1762924b8e44d76c35a944e96108a274ab41",
  "version": 1,
  "moduleMap": {
    "messi": ""
  },
  "typeOriginTable": [
    {
      "module_name": "messi",
      "datatype_name": "MESSI",
      "package": "0xfa0e03552043722394546983058e1762924b8e44d76c35a944e96108a274ab41"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "messi": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xfa0e03552043722394546983058e1762924b8e44d76c35a944e96108a274ab41::messi::MESSI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}