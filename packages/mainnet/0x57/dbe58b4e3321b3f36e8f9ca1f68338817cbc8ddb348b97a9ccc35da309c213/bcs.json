{
  "dataType": "package",
  "id": "0x57dbe58b4e3321b3f36e8f9ca1f68338817cbc8ddb348b97a9ccc35da309c213",
  "version": 1,
  "moduleMap": {
    "suiegg": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suiegg",
      "datatype_name": "SUIEGG",
      "package": "0x57dbe58b4e3321b3f36e8f9ca1f68338817cbc8ddb348b97a9ccc35da309c213"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "suiegg": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x57dbe58b4e3321b3f36e8f9ca1f68338817cbc8ddb348b97a9ccc35da309c213::suiegg::SUIEGG",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}