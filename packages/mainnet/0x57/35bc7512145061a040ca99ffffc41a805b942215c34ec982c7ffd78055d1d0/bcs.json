{
  "dataType": "package",
  "id": "0x5735bc7512145061a040ca99ffffc41a805b942215c34ec982c7ffd78055d1d0",
  "version": 1,
  "moduleMap": {
    "trmny": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trmny",
      "datatype_name": "TRMNY",
      "package": "0x5735bc7512145061a040ca99ffffc41a805b942215c34ec982c7ffd78055d1d0"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 8
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 25
    }
  },
  "functionMap": {
    "trmny": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5735bc7512145061a040ca99ffffc41a805b942215c34ec982c7ffd78055d1d0::trmny::TRMNY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}