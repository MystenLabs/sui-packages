{
  "dataType": "package",
  "id": "0x079ec36adc2607e92d41df586f8d4921e99c02a00e8486d0728083891dadd52d",
  "version": 1,
  "moduleMap": {
    "rexx": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rexx",
      "datatype_name": "REXX",
      "package": "0x079ec36adc2607e92d41df586f8d4921e99c02a00e8486d0728083891dadd52d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "rexx": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x079ec36adc2607e92d41df586f8d4921e99c02a00e8486d0728083891dadd52d::rexx::REXX",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}