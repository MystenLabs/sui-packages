{
  "dataType": "package",
  "id": "0x7373ee39a4cf46f89650b8ff549c5ae9ca2e5a94714f2f905d7cc55e5f648984",
  "version": 1,
  "moduleMap": {
    "spnd": ""
  },
  "typeOriginTable": [
    {
      "module_name": "spnd",
      "datatype_name": "SPND",
      "package": "0x7373ee39a4cf46f89650b8ff549c5ae9ca2e5a94714f2f905d7cc55e5f648984"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}