{
  "dataType": "package",
  "id": "0x3a3849bc923e52e4c3a2c7531faba995e1116924e776dded50d2f24fd75fc3c7",
  "version": 1,
  "moduleMap": {
    "shim": ""
  },
  "typeOriginTable": [
    {
      "module_name": "shim",
      "datatype_name": "SHIM",
      "package": "0x3a3849bc923e52e4c3a2c7531faba995e1116924e776dded50d2f24fd75fc3c7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 11
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}