{
  "dataType": "package",
  "id": "0xcee4c4dbb8490a32c0640d8b157270376ea6413a819691f50b65ade522b806de",
  "version": 1,
  "moduleMap": {
    "stc": ""
  },
  "typeOriginTable": [
    {
      "module_name": "stc",
      "datatype_name": "STC",
      "package": "0xcee4c4dbb8490a32c0640d8b157270376ea6413a819691f50b65ade522b806de"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 2
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 15
    }
  },
  "functionMap": {
    "stc": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xcee4c4dbb8490a32c0640d8b157270376ea6413a819691f50b65ade522b806de::stc::STC",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}