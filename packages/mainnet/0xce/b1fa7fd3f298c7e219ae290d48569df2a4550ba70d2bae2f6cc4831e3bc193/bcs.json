{
  "dataType": "package",
  "id": "0xceb1fa7fd3f298c7e219ae290d48569df2a4550ba70d2bae2f6cc4831e3bc193",
  "version": 1,
  "moduleMap": {
    "pleb": ""
  },
  "typeOriginTable": [
    {
      "module_name": "pleb",
      "datatype_name": "PLEB",
      "package": "0xceb1fa7fd3f298c7e219ae290d48569df2a4550ba70d2bae2f6cc4831e3bc193"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "pleb": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xceb1fa7fd3f298c7e219ae290d48569df2a4550ba70d2bae2f6cc4831e3bc193::pleb::PLEB",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}