{
  "dataType": "package",
  "id": "0x7d5d148b8ee84f70bce54b959c42d9f58458e426b3e767147fb49d8985e0a6af",
  "version": 1,
  "moduleMap": {
    "godcat": ""
  },
  "typeOriginTable": [
    {
      "module_name": "godcat",
      "datatype_name": "GODCAT",
      "package": "0x7d5d148b8ee84f70bce54b959c42d9f58458e426b3e767147fb49d8985e0a6af"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "godcat": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x7d5d148b8ee84f70bce54b959c42d9f58458e426b3e767147fb49d8985e0a6af::godcat::GODCAT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}