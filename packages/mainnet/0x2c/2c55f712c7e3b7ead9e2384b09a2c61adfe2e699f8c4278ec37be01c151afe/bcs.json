{
  "dataType": "package",
  "id": "0x2c2c55f712c7e3b7ead9e2384b09a2c61adfe2e699f8c4278ec37be01c151afe",
  "version": 1,
  "moduleMap": {
    "shit": ""
  },
  "typeOriginTable": [
    {
      "module_name": "shit",
      "datatype_name": "SHIT",
      "package": "0x2c2c55f712c7e3b7ead9e2384b09a2c61adfe2e699f8c4278ec37be01c151afe"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "shit": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x2c2c55f712c7e3b7ead9e2384b09a2c61adfe2e699f8c4278ec37be01c151afe::shit::SHIT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}