{
  "dataType": "package",
  "id": "0x2cf7bfc8bae633968850b65091ace3c3df764d3036e567fe385a15ed406f89f7",
  "version": 1,
  "moduleMap": {
    "quck": ""
  },
  "typeOriginTable": [
    {
      "module_name": "quck",
      "datatype_name": "QUCK",
      "package": "0x2cf7bfc8bae633968850b65091ace3c3df764d3036e567fe385a15ed406f89f7"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "quck": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x2cf7bfc8bae633968850b65091ace3c3df764d3036e567fe385a15ed406f89f7::quck::QUCK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}