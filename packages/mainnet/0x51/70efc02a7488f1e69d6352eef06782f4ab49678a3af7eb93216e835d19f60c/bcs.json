{
  "dataType": "package",
  "id": "0x5170efc02a7488f1e69d6352eef06782f4ab49678a3af7eb93216e835d19f60c",
  "version": 1,
  "moduleMap": {
    "cz": ""
  },
  "typeOriginTable": [
    {
      "module_name": "cz",
      "datatype_name": "CZ",
      "package": "0x5170efc02a7488f1e69d6352eef06782f4ab49678a3af7eb93216e835d19f60c"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  }
}