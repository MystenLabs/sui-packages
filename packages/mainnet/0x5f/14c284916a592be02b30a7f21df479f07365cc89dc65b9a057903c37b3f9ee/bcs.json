{
  "dataType": "package",
  "id": "0x5f14c284916a592be02b30a7f21df479f07365cc89dc65b9a057903c37b3f9ee",
  "version": 1,
  "moduleMap": {
    "kyk": ""
  },
  "typeOriginTable": [
    {
      "module_name": "kyk",
      "datatype_name": "KYK",
      "package": "0x5f14c284916a592be02b30a7f21df479f07365cc89dc65b9a057903c37b3f9ee"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "kyk": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5f14c284916a592be02b30a7f21df479f07365cc89dc65b9a057903c37b3f9ee::kyk::KYK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}