{
  "dataType": "package",
  "id": "0x5f26dda878d55b1ad2f64bc0a221575cef619e0123303eeadb922c6a2c4a4beb",
  "version": 1,
  "moduleMap": {
    "terry": ""
  },
  "typeOriginTable": [
    {
      "module_name": "terry",
      "datatype_name": "TERRY",
      "package": "0x5f26dda878d55b1ad2f64bc0a221575cef619e0123303eeadb922c6a2c4a4beb"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "terry": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x5f26dda878d55b1ad2f64bc0a221575cef619e0123303eeadb922c6a2c4a4beb::terry::TERRY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}