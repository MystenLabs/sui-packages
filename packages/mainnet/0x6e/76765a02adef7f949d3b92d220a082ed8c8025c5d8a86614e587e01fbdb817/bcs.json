{
  "dataType": "package",
  "id": "0x6e76765a02adef7f949d3b92d220a082ed8c8025c5d8a86614e587e01fbdb817",
  "version": 1,
  "moduleMap": {
    "squish": ""
  },
  "typeOriginTable": [
    {
      "module_name": "squish",
      "datatype_name": "SQUISH",
      "package": "0x6e76765a02adef7f949d3b92d220a082ed8c8025c5d8a86614e587e01fbdb817"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}