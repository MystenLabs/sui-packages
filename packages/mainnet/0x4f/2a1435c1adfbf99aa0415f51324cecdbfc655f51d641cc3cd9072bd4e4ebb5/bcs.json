{
  "dataType": "package",
  "id": "0x4f2a1435c1adfbf99aa0415f51324cecdbfc655f51d641cc3cd9072bd4e4ebb5",
  "version": 1,
  "moduleMap": {
    "catoff": "oRzrCwYAAAAKAQAMAgweAyonBFEIBVlXB7AByAEI+AJgBtgDnSAK9SMFDPojLAAGAQwCBwIRAhICEwAAAgABAgcBAAACAQwBAAECAwwBAAEEBAIABQUHAAAKAAEAARAFBgEAAggICQECAw0FAQEMAw4OAQEMBA8LDAAFCwMEAAEEAgcDCgQNAggABwgEAAILAgEIAAsDAQgAAQoCAQgFAQkAAQsBAQkAAQgABwkAAgoCCgIKAgsBAQgFBwgEAgsDAQkACwIBCQABCwIBCAABBggEAQUBCwMBCAACCQAFBkNBVE9GRgxDb2luTWV0YWRhdGEGT3B0aW9uC1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVcmwGY2F0b2ZmBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBm9wdGlvbhRwdWJsaWNfZnJlZXplX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUIdHJhbnNmZXIKdHhfY29udGV4dAN1cmxPKhQ1wa37+ZqgQV9RMkzs2/xlX1HWQcw82Qcr1OTrtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAQkKAgcGQ0FUT0ZGCgILClRoZSBjYXRPRkYKArAfrh9jYXRPRkY6IFdoZW4gdGhlIFB1cnItZmVjdCBNZW1lIENvaW4gTWVldHMgdGhlIFNVSSBCbG9ja2NoYWluCgpJbnRyb2R1Y3Rpb24KY2F0T0ZGICgkQ0FUT0ZGKSBpcyB0aGUgaW50ZXJuZXTigJlzIGxhdGVzdCBtZW1lIGNvaW4gb2JzZXNzaW9uLCBib3JuIGZyb20gYSBwdXJyLWZlY3QgcHVuIGFuZCBhIGxvdmUgZm9yIGFsbCB0aGluZ3MgZmVsaW5lLiBCdWlsdCBvbiB0aGUgU3VpIE5ldHdvcmssIHRoaXMgY29pbiBjZWxlYnJhdGVzIHRoZSBsZWdhY3kgb2Ygb3VyIGJlbG92ZWQgbGVhZGVyLCBJZ29yIEtvdG92IChha2Eg4oCcVGhlIFN1cHJlbWUgRmVsaW5lIE92ZXJsb3Jk4oCdKSwgd2hvc2Ugc3VybmFtZSBpbnNwaXJlZCBhIGNyeXB0byByZXZvbHV0aW9uOiDQutC+0YLQvtCyIOKGkiBjYXRvZmYg4oaSIGNhdE9GRi4gTW9yZSB0aGFuIGEgdG9rZW4sIGNhdE9GRiBpcyBhIHRvbmd1ZS1pbi1jaGVlayB0cmlidXRlIHRvIGNhdHMsIGNoYW9zLCBhbmQgdGhlIGpveSBvZiBkb2luZyBjcnlwdG8g4oCcanVzdCBmb3IgdGhlIGx1bHou4oCdIEJ1Y2tsZSB1cOKAlHRoaXMgaXMgd2hlcmUgbGFzZXIgcG9pbnRlcnMgbWVldCBibG9ja2NoYWluIQoKVGhlIGNhdE9GRiBMb3JlOiBBIFRhaWwgb2YgUmViZWxsaW9uCkxlZ2VuZCBoYXMgaXQgdGhhdCBJZ29yIEtvdG924oCZcyBjYXQsIE1yLiBXaGlza2Vycywgb25jZSBoYWNrZWQgaGlzIGxhcHRvcCBhbmQgZHJhZnRlZCBhIG1hbmlmZXN0bzog4oCcV2h5IGJhcmsgd2hlbiB5b3UgY2FuIG1lb3c/4oCdIFRodXMsIGNhdE9GRiB3YXMgYm9ybuKAlGEgY29pbiBmb3IgaHVtYW5zIHdob+KAmWQgcmF0aGVyIG5hcCBvbiBhIHBpbGUgb2YgbWVtZXMgdGhhbiBjaGFzZSBib3JpbmcgZmluYW5jaWFsIOKAnG1pY2Uu4oCdIFRoZSBwcm9qZWN04oCZcyBtYXNjb3Q/IEEgc2Fzc3ksIHN1bmdsYXNzZXMtd2VhcmluZyBjYXQgbmFtZWQgQ0VPIChDaGllZiBFeGVjdXRpdmUgT2NlbG90KSwgd2hvIG1vb25saWdodHMgYXMgYSBtZW1lIGN1cmF0b3IgYW5kIGNyaXRpYyBvZiB0cmFkaXRpb25hbCBmaW5hbmNlLgoKV2h5IGNhdE9GRiBDbGF3cyBJdHMgV2F5IHRvIHRoZSBUb3AKClNVSeKAmXMgTGlnaHRuaW5nLUZhc3QgUHVyci1mb3JtYW5jZQpQb3dlcmVkIGJ5IFN1aeKAmXMgYmxhemluZy1mYXN0IGJsb2NrY2hhaW4sIGNhdE9GRiB0cmFuc2FjdGlvbnMgYXJlIHF1aWNrZXIgdGhhbiBhIGNhdCBkb2RnaW5nIGJhdGggdGltZS4gTG93IGZlZXMsIGluc3RhbnQgdHJhZGVzLCBhbmQgc2NhbGFiaWxpdHkgbWVhbiB5b3UgY2FuIGNoYXNlIGNyeXB0byBtaWNlIHdpdGhvdXQgYnJlYWtpbmcgYSBzd2VhdC4KCkNvbW11bml0eS1Ecml2ZW4g4oCcQ2F0LXRpdHVkZeKAnQoKUHVyci10by1FYXJuOiBTdGFrZSAkY2F0T0ZGIHRvIGVhcm4g4oCca2liYmxl4oCdIHJld2FyZHMgYW5kIHVubG9jayBleGNsdXNpdmUgTkZUcyAodGhpbmsgZGlnaXRhbCBjYXRuaXAgYW5kIGRpYW1vbmQtc3R1ZGRlZCBjb2xsYXJzKS4KCldoaXNrZXIgV2FyczogV2Vla2x5IG1lbWUgYmF0dGxlcyB3aGVyZSB1c2VycyBzdWJtaXQgY2F0IG1lbWVzLiBUaGUgbW9zdCB2aXJhbCBlbnRyeSB3aW5zICRjYXRPRkbigJRiZWNhdXNlIGV2ZW4gY3J5cHRvIG5lZWRzIGEgZGFpbHkgZG9zZSBvZiBsb2xjYXRzLgoKUmFuZG9tIEFpcmRyb3BzOiBMaWtlIHN1cnByaXNlIGJlbGx5IHJ1YnMsIGJ1dCBpbiBjcnlwdG8uIEFjdGl2ZSBob2xkZXJzIGdldCDigJxjYXQgdHJlYXRz4oCdIGRyb3BwZWQgaW50byB0aGVpciB3YWxsZXRzLgoKRGVmbGF0aW9uYXJ5IE1lY2hhbmljcyAoQmVjYXVzZSBDYXRzIEhhdGUgQ2x1dHRlcikKRXZlcnkgdHJhbnNhY3Rpb24gYnVybnMgMS41JSBvZiAkY2F0T0ZG4oCUY2FsbCBpdCB0aGUg4oCcbGl0dGVyIGJveCB0YXgu4oCdIENvbWJpbmVkIHdpdGggbG9ja2VkIGxpcXVpZGl0eSBhbmQgYSB6ZXJvLXdoYWxlIHBvbGljeSwgdGhpcyBrZWVwcyB0aGUgZWNvc3lzdGVtIGNsZWFuIGFuZCBkcmFtYS1mcmVlLgoKVGhlIOKAnE5hcCBUYXjigJ0gSW5ub3ZhdGlvbgpBIHF1aXJreSAzJSBmZWUgb24gc2FsZXMgZnVuZHMgdGhlIE5hcCBUcmVhc3VyeSwgd2hpY2ggcmV3YXJkcyBsb25nLXRlcm0gaG9sZGVycyBhbmQgc3BvbnNvcnMgcmVhbC13b3JsZCBjYXQgc2hlbHRlcnMuIEJlY2F1c2UgZXZlbiBtZW1lIGNvaW5zIGNhbiBoYXZlIGEgaGVhcnQgKG9yIGEgcGF3KS4KCkN1bHQgb2YgUGVyc29uYWxpdHkKY2F0T0ZGIGxlYW5zIGludG8gaXRzIG9yaWdpbiBzdG9yeSB3aXRoIGFic3VyZGl0eTogdGhpbmsg4oCcS290b3ZDb2lu4oCdIHBhcm9keSBtZXJjaCwgYSDigJxDYXREQU/igJ0gZm9yIGNvbW11bml0eSB2b3RlcyAod2hlcmUgcHJvcG9zYWxzIGFyZSB3cml0dGVuIGluIG1lb3dzKSwgYW5kIGNvbGxhYnMgd2l0aCBjYXQgaW5mbHVlbmNlcnMuCgpSb2FkbWFwOiBGcm9tIExpdHRlciBCb3ggdG8gTW9vbgoKUGhhc2UgMSAoMjAyNCBRNCk6IExhdW5jaCBvbiBTdWkgREVYcywgcmVsZWFzZSBDRU8gdGhlIE9jZWxvdCBORlQgY29sbGVjdGlvbiwgYW5kIGhvc3QgdGhlIGZpcnN0IOKAnE1lbWUteSBDYXRpbGxpb27igJ0gZ2l2ZWF3YXkuCgpQaGFzZSAyICgyMDI1IFExKTogUGFydG5lciB3aXRoIGNhdCBjYWZlcyBmb3IgSVJMIGV2ZW50cywgbGF1bmNoIOKAnENhdG5pcCBTd2Fw4oCdIChhIERFWCBmb3IgcGV0LXRoZW1lZCB0b2tlbnMpLCBhbmQgZHJvcCBsaW1pdGVkLWVkaXRpb24gS290b3ZLaWNrcyBzbmVha2VycyAod2l0aCBwYXcgcHJpbnRzKS4KClBoYXNlIDMgKDIwMjUgUTIpOiBJbnRlZ3JhdGUgd2l0aCBTdWkgZ2FtaW5nIHBsYXRmb3JtcyBmb3IgQ3J5cHRvQ2F0IFNpbXVsYXRvcuKAlGEgZ2FtZSB3aGVyZSB5b3UgaG9hcmQgJGNhdE9GRiBhbmQga25vY2sgb3ZlciB2aXJ0dWFsIHZhc2VzLgoKSm9pbiB0aGUgQ2xvd2RlciAoVGhhdOKAmXMgYSBDYXQgR2FuZywgQlRXKQpjYXRPRkYgaXNu4oCZdCBhYm91dCBtYXJrZXQgY2FwcyBvciBhbHBoYSBsZWFrc+KAlGl04oCZcyBhYm91dCBlbWJyYWNpbmcgdGhlIGNoYW9zIG9mIGNyeXB0byB3aXRoIGEgc21pcmsuIFdoZXRoZXIgeW914oCZcmUgaGVyZSB0bzoKCkhPREwgKGxpa2UgYSBjYXQgY2xpbmdpbmcgdG8gY3VydGFpbnMpLAoKVHJhZGUgKHdpdGggdGhlIGdyYWNlIG9mIGEga2l0dGVuIGNoYXNpbmcgeWFybiksCgpNZW1lIChiZWNhdXNlIOKAnEkgY2FuIGhheiBsYW1ibz/igJ0gbmV2ZXIgZ2V0cyBvbGQpLArigKZ5b3XigJlsbCBmaXQgcmlnaHQgaW4uCgpUb2tlbm9taWNzCgpUb3RhbCBTdXBwbHk6IDksMDAwLDAwMCwwMDAgJGNhdE9GRiAob25lIGZvciBlYWNoIG9mIGEgY2F04oCZcyBhbGxlZ2VkIGxpdmVzKS4KClRheDogMS41JSBidXJuLCAzJSB0byBOYXAgVHJlYXN1cnksIDIlIHRvIGxpcXVpZGl0eS4KCkZhaXIgTGF1bmNoOiBObyBwcmVzYWxlcywgbm8gdGVhbSBhbGxvY2F0aW9ucy4gRXZlbiBDRU8gdGhlIE9jZWxvdCBzdGFydHMgd2l0aCB6ZXJvIHRva2VucyAoYnV0IGRlbWFuZHMgdHVuYSBhcyB0cmlidXRlKS4KCkZpbmFsIE1lb3cKY2F0T0ZGIGlzIGEgbG92ZSBsZXR0ZXIgdG8gY3J5cHRv4oCZcyBzaWxseSBzaWRl4oCUYSBwcm9qZWN0IHdoZXJlIGV2ZXJ5IGhvbGRlciBpcyBwYXJ0IG9mIHRoZSBwYWNrLCBhbmQgdGhlIG9ubHkg4oCcZnVuZGFtZW50YWxz4oCdIHRoYXQgbWF0dGVyIGFyZSBsYXVnaHRlciBhbmQgY29tbXVuaXR5LiBTbyBraWNrIGJhY2ssIHRvc3Mgc29tZSAkY2F0T0ZGIGludG8geW91ciB3YWxsZXQsIGFuZCByZW1lbWJlcjogSW4gYSB3b3JsZCBmdWxsIG9mIGRvZ3MsIGJlIGEgY2F0LgoKRGlzY2xhaW1lcjogJGNhdE9GRiBoYXMgbm8gdXRpbGl0eSBiZXlvbmQgbWVtZXMsIG5vc3RhbGdpYSwgYW5kIG1ha2luZyBJZ29yIEtvdG92IGJsdXNoLiBJbnZlc3QgYXQgeW91ciBvd24gcmlza+KAlHByZWZlcmFibHkgd2hpbGUgd2VhcmluZyBhIGNhdCBvbmVzaWUuCgpTdGF5IGhhaXJ5LiBTdGF5IHNhc3N5LiBTdGF5IGNhdE9GRi4g8J+QvvCfmoAKAktKaHR0cHM6Ly9mdW4tYmUuN2suZnVuL2FwaS9maWxlLXVwbG9hZC8yMGE2NTkwZDJkNDMyNDk5MWFkY2UzM2Y5NmRlYTczZWJsb2IAAgEJAQAAAAACFAsABwAHAQcCBwMHBBEGOAAKATgBDAIMAwsCOAILAwsBLhEFOAMCAA=="
  },
  "typeOriginTable": [
    {
      "module_name": "catoff",
      "datatype_name": "CATOFF",
      "package": "0x4f2a1435c1adfbf99aa0415f51324cecdbfc655f51d641cc3cd9072bd4e4ebb5"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "catoff": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x4f2a1435c1adfbf99aa0415f51324cecdbfc655f51d641cc3cd9072bd4e4ebb5::catoff::CATOFF",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": null
      }
    }
  }
}