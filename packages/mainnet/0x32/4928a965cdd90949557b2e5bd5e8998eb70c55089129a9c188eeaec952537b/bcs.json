{
  "dataType": "package",
  "id": "0x324928a965cdd90949557b2e5bd5e8998eb70c55089129a9c188eeaec952537b",
  "version": 1,
  "moduleMap": {
    "neo": ""
  },
  "typeOriginTable": [
    {
      "module_name": "neo",
      "datatype_name": "NEO",
      "package": "0x324928a965cdd90949557b2e5bd5e8998eb70c55089129a9c188eeaec952537b"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "neo": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x324928a965cdd90949557b2e5bd5e8998eb70c55089129a9c188eeaec952537b::neo::NEO",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}