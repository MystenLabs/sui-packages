{
  "dataType": "package",
  "id": "0xb021450e881df6846e12b09237bf394947cceca8b1d03264fe3f98d88725e55a",
  "version": 1,
  "moduleMap": {
    "hawk": ""
  },
  "typeOriginTable": [
    {
      "module_name": "hawk",
      "datatype_name": "HAWK",
      "package": "0xb021450e881df6846e12b09237bf394947cceca8b1d03264fe3f98d88725e55a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 6
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 23
    }
  },
  "functionMap": {
    "hawk": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xb021450e881df6846e12b09237bf394947cceca8b1d03264fe3f98d88725e55a::hawk::HAWK",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}