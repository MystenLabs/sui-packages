{
  "dataType": "package",
  "id": "0xcb6a39c472ae2268daf9344add6e698eacad9fef156567d8a1b6278134f156ad",
  "version": 1,
  "moduleMap": {
    "trnch": ""
  },
  "typeOriginTable": [
    {
      "module_name": "trnch",
      "datatype_name": "TRNCH",
      "package": "0xcb6a39c472ae2268daf9344add6e698eacad9fef156567d8a1b6278134f156ad"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "trnch": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xcb6a39c472ae2268daf9344add6e698eacad9fef156567d8a1b6278134f156ad::trnch::TRNCH",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}