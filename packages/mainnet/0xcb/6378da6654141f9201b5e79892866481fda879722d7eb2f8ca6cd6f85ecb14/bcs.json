{
  "dataType": "package",
  "id": "0xcb6378da6654141f9201b5e79892866481fda879722d7eb2f8ca6cd6f85ecb14",
  "version": 1,
  "moduleMap": {
    "suioggy": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suioggy",
      "datatype_name": "SUIOGGY",
      "package": "0xcb6378da6654141f9201b5e79892866481fda879722d7eb2f8ca6cd6f85ecb14"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "suioggy": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xcb6378da6654141f9201b5e79892866481fda879722d7eb2f8ca6cd6f85ecb14::suioggy::SUIOGGY",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}