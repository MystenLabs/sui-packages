{
  "dataType": "package",
  "id": "0x311c129524f60404d7ce1f37d4a73c4d034e40158864d9b0bee94002d692e210",
  "version": 1,
  "moduleMap": {
    "doge": ""
  },
  "typeOriginTable": [
    {
      "module_name": "doge",
      "datatype_name": "DOGE",
      "package": "0x311c129524f60404d7ce1f37d4a73c4d034e40158864d9b0bee94002d692e210"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "doge": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x311c129524f60404d7ce1f37d4a73c4d034e40158864d9b0bee94002d692e210::doge::DOGE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}