{
  "dataType": "package",
  "id": "0x12694fddd72de0eb0f12f0cde6f42b3a4ece8c8bf7fd2ce1cc01261a7c7c3f89",
  "version": 1,
  "moduleMap": {
    "neuralai": ""
  },
  "typeOriginTable": [
    {
      "module_name": "neuralai",
      "datatype_name": "NEURALAI",
      "package": "0x12694fddd72de0eb0f12f0cde6f42b3a4ece8c8bf7fd2ce1cc01261a7c7c3f89"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 13
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 30
    }
  },
  "functionMap": {
    "neuralai": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x12694fddd72de0eb0f12f0cde6f42b3a4ece8c8bf7fd2ce1cc01261a7c7c3f89::neuralai::NEURALAI",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}