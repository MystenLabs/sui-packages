{
  "dataType": "package",
  "id": "0xf5316e4dc99691160b9cb4d27b2e510ad9575bad9e4fd3534e9da87ca5ad732d",
  "version": 1,
  "moduleMap": {
    "suirl": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suirl",
      "datatype_name": "SUIRL",
      "package": "0xf5316e4dc99691160b9cb4d27b2e510ad9575bad9e4fd3534e9da87ca5ad732d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 39
    }
  },
  "functionMap": {
    "suirl": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xf5316e4dc99691160b9cb4d27b2e510ad9575bad9e4fd3534e9da87ca5ad732d::suirl::SUIRL",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}