{
  "dataType": "package",
  "id": "0x024e9e5372eca2aaf412f2011a4631be110508cb69d7a1d1c294155affa43816",
  "version": 1,
  "moduleMap": {
    "snut": ""
  },
  "typeOriginTable": [
    {
      "module_name": "snut",
      "datatype_name": "SNUT",
      "package": "0x024e9e5372eca2aaf412f2011a4631be110508cb69d7a1d1c294155affa43816"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 12
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 29
    }
  },
  "functionMap": {
    "snut": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x024e9e5372eca2aaf412f2011a4631be110508cb69d7a1d1c294155affa43816::snut::SNUT",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}