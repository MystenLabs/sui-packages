{
  "dataType": "package",
  "id": "0xb8edd83d633e81e1500496c85dd877af7c15efcdfb9a9180e1123695de1a9032",
  "version": 1,
  "moduleMap": {
    "suibmarine": ""
  },
  "typeOriginTable": [
    {
      "module_name": "suibmarine",
      "datatype_name": "SUIBMARINE",
      "package": "0xb8edd83d633e81e1500496c85dd877af7c15efcdfb9a9180e1123695de1a9032"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 9
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 27
    }
  },
  "functionMap": {
    "suibmarine": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xb8edd83d633e81e1500496c85dd877af7c15efcdfb9a9180e1123695de1a9032::suibmarine::SUIBMARINE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}