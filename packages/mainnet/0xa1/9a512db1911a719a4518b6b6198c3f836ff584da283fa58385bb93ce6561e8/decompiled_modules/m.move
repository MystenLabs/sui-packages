module 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::m {
    public fun redeem_penalty_amount<T0>(arg0: &0x2::coin::Coin<T0>, arg1: u64, arg2: u64, arg3: u64, arg4: u64, arg5: u64, arg6: &0x2::clock::Clock) : u64 {
        let v0 = 0x2::coin::value<T0>(arg0);
        let v1 = 0x2::clock::timestamp_ms(arg6) / 1000;
        assert!(v1 >= arg1, 201);
        if (v1 < arg2) {
            let v3 = 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::div(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::sub(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg2), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(v1)), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::sub(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg2), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg1)));
            0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::ceil(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::add(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::mul(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::div(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::mul(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg3), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(v0)), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg5)), v3), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::mul(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::div(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::mul(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg4), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(v0)), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg5)), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::sub(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(1), v3))))
        } else {
            0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::ceil(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::div(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::mul(0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg4), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(v0)), 0xa19a512db1911a719a4518b6b6198c3f836ff584da283fa58385bb93ce6561e8::decimal::from(arg5)))
        }
    }

    // decompiled from Move bytecode v6
}

