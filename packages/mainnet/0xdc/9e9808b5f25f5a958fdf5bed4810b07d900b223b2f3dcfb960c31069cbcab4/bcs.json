{
  "dataType": "package",
  "id": "0xdc9e9808b5f25f5a958fdf5bed4810b07d900b223b2f3dcfb960c31069cbcab4",
  "version": 1,
  "moduleMap": {
    "rex": ""
  },
  "typeOriginTable": [
    {
      "module_name": "rex",
      "datatype_name": "REX",
      "package": "0xdc9e9808b5f25f5a958fdf5bed4810b07d900b223b2f3dcfb960c31069cbcab4"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "rex": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0xdc9e9808b5f25f5a958fdf5bed4810b07d900b223b2f3dcfb960c31069cbcab4::rex::REX",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}