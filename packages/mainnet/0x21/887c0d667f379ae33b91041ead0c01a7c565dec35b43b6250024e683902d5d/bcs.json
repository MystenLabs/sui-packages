{
  "dataType": "package",
  "id": "0x21887c0d667f379ae33b91041ead0c01a7c565dec35b43b6250024e683902d5d",
  "version": 1,
  "moduleMap": {
    "didi": ""
  },
  "typeOriginTable": [
    {
      "module_name": "didi",
      "datatype_name": "DIDI",
      "package": "0x21887c0d667f379ae33b91041ead0c01a7c565dec35b43b6250024e683902d5d"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}