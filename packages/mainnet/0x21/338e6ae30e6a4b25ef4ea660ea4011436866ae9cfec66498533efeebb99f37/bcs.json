{
  "dataType": "package",
  "id": "0x21338e6ae30e6a4b25ef4ea660ea4011436866ae9cfec66498533efeebb99f37",
  "version": 1,
  "moduleMap": {
    "bluebarky": ""
  },
  "typeOriginTable": [
    {
      "module_name": "bluebarky",
      "datatype_name": "BLUEBARKY",
      "package": "0x21338e6ae30e6a4b25ef4ea660ea4011436866ae9cfec66498533efeebb99f37"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  }
}