module 0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::caster {
    public fun cast_to_u8(arg0: 0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::i32::I32) : u8 {
        assert!(0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::i32::abs_u32(arg0) < 256, 0);
        ((0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::i32::abs_u32(0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::i32::add(arg0, 0x28272b9480d64424f429251d84e17ce97894da564c042f628570da95397d3568::i32::from(256))) & 255) as u8)
    }

    // decompiled from Move bytecode v6
}

