{
  "dataType": "package",
  "id": "0x1ac85afbcbe22f9168898e95877804dda3a972a6bca6fda2eac1e64925b95b9e",
  "version": 1,
  "moduleMap": {
    "ponke": ""
  },
  "typeOriginTable": [
    {
      "module_name": "ponke",
      "datatype_name": "PONKE",
      "package": "0x1ac85afbcbe22f9168898e95877804dda3a972a6bca6fda2eac1e64925b95b9e"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 10
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 28
    }
  },
  "functionMap": {
    "ponke": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x1ac85afbcbe22f9168898e95877804dda3a972a6bca6fda2eac1e64925b95b9e::ponke::PONKE",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}