{
  "dataType": "package",
  "id": "0x6d1d0a3aef9830c476075c07f176cecd2413f67e193f94d7d553804dabf5737a",
  "version": 1,
  "moduleMap": {
    "moron": ""
  },
  "typeOriginTable": [
    {
      "module_name": "moron",
      "datatype_name": "MORON",
      "package": "0x6d1d0a3aef9830c476075c07f176cecd2413f67e193f94d7d553804dabf5737a"
    }
  ],
  "linkageTable": {
    "0x0000000000000000000000000000000000000000000000000000000000000001": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
      "upgraded_version": 17
    },
    "0x0000000000000000000000000000000000000000000000000000000000000002": {
      "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "upgraded_version": 38
    }
  },
  "functionMap": {
    "moron": {
      "init": {
        "visibility": "PRIVATE",
        "is_entry": false,
        "params": [
          "0x6d1d0a3aef9830c476075c07f176cecd2413f67e193f94d7d553804dabf5737a::moron::MORON",
          "&mut 0x0000000000000000000000000000000000000000000000000000000000000002::tx_context::TxContext"
        ],
        "return": []
      }
    }
  }
}